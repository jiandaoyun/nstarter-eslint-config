parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"J4Nk":[function(require,module,exports) {
"use strict";var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,e=Object.prototype.propertyIsEnumerable;function n(r){if(null==r)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(r)}function o(){try{if(!Object.assign)return!1;var r=new String("abc");if(r[5]="de","5"===Object.getOwnPropertyNames(r)[0])return!1;for(var t={},e=0;e<10;e++)t["_"+String.fromCharCode(e)]=e;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(r){return t[r]}).join(""))return!1;var n={};return"abcdefghijklmnopqrst".split("").forEach(function(r){n[r]=r}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},n)).join("")}catch(o){return!1}}module.exports=o()?Object.assign:function(o,c){for(var a,i,s=n(o),f=1;f<arguments.length;f++){for(var u in a=Object(arguments[f]))t.call(a,u)&&(s[u]=a[u]);if(r){i=r(a);for(var b=0;b<i.length;b++)e.call(a,i[b])&&(s[i[b]]=a[i[b]])}}return s};
},{}],"awqi":[function(require,module,exports) {
"use strict";var e=require("object-assign"),t="function"==typeof Symbol&&Symbol.for,r=t?Symbol.for("react.element"):60103,n=t?Symbol.for("react.portal"):60106,o=t?Symbol.for("react.fragment"):60107,u=t?Symbol.for("react.strict_mode"):60108,l=t?Symbol.for("react.profiler"):60114,f=t?Symbol.for("react.provider"):60109,c=t?Symbol.for("react.context"):60110,i=t?Symbol.for("react.forward_ref"):60112,a=t?Symbol.for("react.suspense"):60113,s=t?Symbol.for("react.suspense_list"):60120,p=t?Symbol.for("react.memo"):60115,y=t?Symbol.for("react.lazy"):60116;t&&Symbol.for("react.fundamental"),t&&Symbol.for("react.responder"),t&&Symbol.for("react.scope");var d="function"==typeof Symbol&&Symbol.iterator;function m(e){for(var t=e.message,r="https://reactjs.org/docs/error-decoder.html?invariant="+t,n=1;n<arguments.length;n++)r+="&args[]="+encodeURIComponent(arguments[n]);return e.message="Minified React error #"+t+"; visit "+r+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}var v={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},h={};function b(e,t,r){this.props=e,this.context=t,this.refs=h,this.updater=r||v}function S(){}function _(e,t,r){this.props=e,this.context=t,this.refs=h,this.updater=r||v}b.prototype.isReactComponent={},b.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw m(Error(85));this.updater.enqueueSetState(this,e,t,"setState")},b.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},S.prototype=b.prototype;var g=_.prototype=new S;g.constructor=_,e(g,b.prototype),g.isPureReactComponent=!0;var k={current:null},$={suspense:null},w={current:null},C=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function R(e,t,n){var o,u={},l=null,f=null;if(null!=t)for(o in void 0!==t.ref&&(f=t.ref),void 0!==t.key&&(l=""+t.key),t)C.call(t,o)&&!E.hasOwnProperty(o)&&(u[o]=t[o]);var c=arguments.length-2;if(1===c)u.children=n;else if(1<c){for(var i=Array(c),a=0;a<c;a++)i[a]=arguments[a+2];u.children=i}if(e&&e.defaultProps)for(o in c=e.defaultProps)void 0===u[o]&&(u[o]=c[o]);return{$$typeof:r,type:e,key:l,ref:f,props:u,_owner:w.current}}function x(e,t){return{$$typeof:r,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===r}function j(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}var O=/\/+/g,A=[];function I(e,t,r,n){if(A.length){var o=A.pop();return o.result=e,o.keyPrefix=t,o.func=r,o.context=n,o.count=0,o}return{result:e,keyPrefix:t,func:r,context:n,count:0}}function U(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>A.length&&A.push(e)}function q(e,t,o,u){var l=typeof e;"undefined"!==l&&"boolean"!==l||(e=null);var f=!1;if(null===e)f=!0;else switch(l){case"string":case"number":f=!0;break;case"object":switch(e.$$typeof){case r:case n:f=!0}}if(f)return o(u,e,""===t?"."+F(e,0):t),1;if(f=0,t=""===t?".":t+":",Array.isArray(e))for(var c=0;c<e.length;c++){var i=t+F(l=e[c],c);f+=q(l,i,o,u)}else if(null===e||"object"!=typeof e?i=null:i="function"==typeof(i=d&&e[d]||e["@@iterator"])?i:null,"function"==typeof i)for(e=i.call(e),c=0;!(l=e.next()).done;)f+=q(l=l.value,i=t+F(l,c++),o,u);else if("object"===l)throw o=""+e,m(Error(31),"[object Object]"===o?"object with keys {"+Object.keys(e).join(", ")+"}":o,"");return f}function L(e,t,r){return null==e?0:q(e,"",t,r)}function F(e,t){return"object"==typeof e&&null!==e&&null!=e.key?j(e.key):t.toString(36)}function M(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,r){var n=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?V(e,n,r,function(e){return e}):null!=e&&(P(e)&&(e=x(e,o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+r)),n.push(e))}function V(e,t,r,n,o){var u="";null!=r&&(u=(""+r).replace(O,"$&/")+"/"),L(e,D,t=I(t,u,n,o)),U(t)}function B(){var e=k.current;if(null===e)throw m(Error(321));return e}var N={Children:{map:function(e,t,r){if(null==e)return e;var n=[];return V(e,n,null,t,r),n},forEach:function(e,t,r){if(null==e)return e;L(e,M,t=I(null,null,t,r)),U(t)},count:function(e){return L(e,function(){return null},null)},toArray:function(e){var t=[];return V(e,t,null,function(e){return e}),t},only:function(e){if(!P(e))throw m(Error(143));return e}},createRef:function(){return{current:null}},Component:b,PureComponent:_,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:c,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:f,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:i,render:e}},lazy:function(e){return{$$typeof:y,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:p,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return B().useCallback(e,t)},useContext:function(e,t){return B().useContext(e,t)},useEffect:function(e,t){return B().useEffect(e,t)},useImperativeHandle:function(e,t,r){return B().useImperativeHandle(e,t,r)},useDebugValue:function(){},useLayoutEffect:function(e,t){return B().useLayoutEffect(e,t)},useMemo:function(e,t){return B().useMemo(e,t)},useReducer:function(e,t,r){return B().useReducer(e,t,r)},useRef:function(e){return B().useRef(e)},useState:function(e){return B().useState(e)},Fragment:o,Profiler:l,StrictMode:u,Suspense:a,unstable_SuspenseList:s,createElement:R,cloneElement:function(t,n,o){if(null==t)throw m(Error(267),t);var u=e({},t.props),l=t.key,f=t.ref,c=t._owner;if(null!=n){if(void 0!==n.ref&&(f=n.ref,c=w.current),void 0!==n.key&&(l=""+n.key),t.type&&t.type.defaultProps)var i=t.type.defaultProps;for(a in n)C.call(n,a)&&!E.hasOwnProperty(a)&&(u[a]=void 0===n[a]&&void 0!==i?i[a]:n[a])}var a=arguments.length-2;if(1===a)u.children=o;else if(1<a){i=Array(a);for(var s=0;s<a;s++)i[s]=arguments[s+2];u.children=i}return{$$typeof:r,type:t.type,key:l,ref:f,props:u,_owner:c}},createFactory:function(e){var t=R.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.10.2",unstable_withSuspenseConfig:function(e,t){var r=$.suspense;$.suspense=void 0===t?null:t;try{e()}finally{$.suspense=r}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:k,ReactCurrentBatchConfig:$,ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:e}},T={default:N},z=T&&N||T;module.exports=z.default||z;
},{"object-assign":"J4Nk"}],"n8MK":[function(require,module,exports) {
"use strict";module.exports=require("./cjs/react.production.min.js");
},{"./cjs/react.production.min.js":"awqi"}],"IvPb":[function(require,module,exports) {
"use strict";var e,t,n,r,o;if(Object.defineProperty(exports,"__esModule",{value:!0}),"undefined"==typeof window||"function"!=typeof MessageChannel){var a=null,l=null,i=function(){if(null!==a)try{var e=exports.unstable_now();a(!0,e),a=null}catch(t){throw setTimeout(i,0),t}},u=Date.now();exports.unstable_now=function(){return Date.now()-u},e=function(t){null!==a?setTimeout(e,0,t):(a=t,setTimeout(i,0))},t=function(e,t){l=setTimeout(e,t)},n=function(){clearTimeout(l)},r=function(){return!1},o=exports.unstable_forceFrameRate=function(){}}else{var s=window.performance,c=window.Date,f=window.setTimeout,p=window.clearTimeout,b=window.requestAnimationFrame,d=window.cancelAnimationFrame;if("undefined"!=typeof console&&("function"!=typeof b&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!=typeof d&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills")),"object"==typeof s&&"function"==typeof s.now)exports.unstable_now=function(){return s.now()};else{var x=c.now();exports.unstable_now=function(){return c.now()-x}}var v=!1,w=null,m=-1,y=5,_=0;r=function(){return exports.unstable_now()>=_},o=function(){},exports.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported"):y=0<e?Math.floor(1e3/e):33.33};var h=new MessageChannel,k=h.port2;h.port1.onmessage=function(){if(null!==w){var e=exports.unstable_now();_=e+y;try{w(!0,e)?k.postMessage(null):(v=!1,w=null)}catch(t){throw k.postMessage(null),t}}else v=!1},e=function(e){w=e,v||(v=!0,k.postMessage(null))},t=function(e,t){m=f(function(){e(exports.unstable_now())},t)},n=function(){p(m),m=-1}}function T(e,t){var n=e.length;e.push(t);e:for(;;){var r=Math.floor((n-1)/2),o=e[r];if(!(void 0!==o&&0<P(o,t)))break e;e[r]=t,e[n]=o,n=r}}function g(e){return void 0===(e=e[0])?null:e}function M(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,o=e.length;r<o;){var a=2*(r+1)-1,l=e[a],i=a+1,u=e[i];if(void 0!==l&&0>P(l,n))void 0!==u&&0>P(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[a]=n,r=a);else{if(!(void 0!==u&&0>P(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function P(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var F=[],I=[],C=1,A=null,L=3,j=!1,q=!1,D=!1;function R(e){for(var t=g(I);null!==t;){if(null===t.callback)M(I);else{if(!(t.startTime<=e))break;M(I),t.sortIndex=t.expirationTime,T(F,t)}t=g(I)}}function E(n){if(D=!1,R(n),!q)if(null!==g(F))q=!0,e(N);else{var r=g(I);null!==r&&t(E,r.startTime-n)}}function N(e,o){q=!1,D&&(D=!1,n()),j=!0;var a=L;try{for(R(o),A=g(F);null!==A&&(!(A.expirationTime>o)||e&&!r());){var l=A.callback;if(null!==l){A.callback=null,L=A.priorityLevel;var i=l(A.expirationTime<=o);o=exports.unstable_now(),"function"==typeof i?A.callback=i:A===g(F)&&M(F),R(o)}else M(F);A=g(F)}if(null!==A)var u=!0;else{var s=g(I);null!==s&&t(E,s.startTime-o),u=!1}return u}finally{A=null,L=a,j=!1}}function B(e){switch(e){case 1:return-1;case 2:return 250;case 5:return 1073741823;case 4:return 1e4;default:return 5e3}}var O=o;exports.unstable_ImmediatePriority=1,exports.unstable_UserBlockingPriority=2,exports.unstable_NormalPriority=3,exports.unstable_IdlePriority=5,exports.unstable_LowPriority=4,exports.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=L;L=e;try{return t()}finally{L=n}},exports.unstable_next=function(e){switch(L){case 1:case 2:case 3:var t=3;break;default:t=L}var n=L;L=t;try{return e()}finally{L=n}},exports.unstable_scheduleCallback=function(r,o,a){var l=exports.unstable_now();if("object"==typeof a&&null!==a){var i=a.delay;i="number"==typeof i&&0<i?l+i:l,a="number"==typeof a.timeout?a.timeout:B(r)}else a=B(r),i=l;return r={id:C++,callback:o,priorityLevel:r,startTime:i,expirationTime:a=i+a,sortIndex:-1},i>l?(r.sortIndex=i,T(I,r),null===g(F)&&r===g(I)&&(D?n():D=!0,t(E,i-l))):(r.sortIndex=a,T(F,r),q||j||(q=!0,e(N))),r},exports.unstable_cancelCallback=function(e){e.callback=null},exports.unstable_wrapCallback=function(e){var t=L;return function(){var n=L;L=t;try{return e.apply(this,arguments)}finally{L=n}}},exports.unstable_getCurrentPriorityLevel=function(){return L},exports.unstable_shouldYield=function(){var e=exports.unstable_now();R(e);var t=g(F);return t!==A&&null!==A&&null!==t&&null!==t.callback&&t.startTime<=e&&t.expirationTime<A.expirationTime||r()},exports.unstable_requestPaint=O,exports.unstable_continueExecution=function(){q||j||(q=!0,e(N))},exports.unstable_pauseExecution=function(){},exports.unstable_getFirstCallbackNode=function(){return g(F)},exports.unstable_Profiling=null;
},{}],"MDSO":[function(require,module,exports) {
"use strict";module.exports=require("./cjs/scheduler.production.min.js");
},{"./cjs/scheduler.production.min.js":"IvPb"}],"i17t":[function(require,module,exports) {
"use strict";var e=require("react"),t=require("object-assign"),n=require("scheduler");function r(e){for(var t=e.message,n="https://reactjs.org/docs/error-decoder.html?invariant="+t,r=1;r<arguments.length;r++)n+="&args[]="+encodeURIComponent(arguments[r]);return e.message="Minified React error #"+t+"; visit "+n+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",e}if(!e)throw r(Error(227));var l=null,a={};function i(){if(l)for(var e in a){var t=a[e],n=l.indexOf(e);if(!(-1<n))throw r(Error(96),e);if(!u[n]){if(!t.extractEvents)throw r(Error(97),e);for(var i in u[n]=t,n=t.eventTypes){var s=void 0,f=n[i],d=t,p=i;if(c.hasOwnProperty(p))throw r(Error(99),p);c[p]=f;var m=f.phasedRegistrationNames;if(m){for(s in m)m.hasOwnProperty(s)&&o(m[s],d,p);s=!0}else f.registrationName?(o(f.registrationName,d,p),s=!0):s=!1;if(!s)throw r(Error(98),i,e)}}}}function o(e,t,n){if(s[e])throw r(Error(100),e);s[e]=t,f[e]=t.eventTypes[n].dependencies}var u=[],c={},s={},f={};function d(e,t,n,r,l,a,i,o,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(s){this.onError(s)}}var p=!1,m=null,h=!1,v=null,g={onError:function(e){p=!0,m=e}};function y(e,t,n,r,l,a,i,o,u){p=!1,m=null,d.apply(g,arguments)}function b(e,t,n,l,a,i,o,u,c){if(y.apply(this,arguments),p){if(!p)throw r(Error(198));var s=m;p=!1,m=null,h||(h=!0,v=s)}}var k=null,w=null,E=null;function x(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),b(r,t,void 0,e),e.currentTarget=null}function T(e,t){if(null==t)throw r(Error(30));return null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function S(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var C=null;function _(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)x(e,t[r],n[r]);else t&&x(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function P(e){if(null!==e&&(C=T(C,e)),e=C,C=null,e){if(S(e,_),C)throw r(Error(95));if(h)throw e=v,h=!1,v=null,e}}var N={injectEventPluginOrder:function(e){if(l)throw r(Error(101));l=Array.prototype.slice.call(e),i()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var l=e[t];if(!a.hasOwnProperty(t)||a[t]!==l){if(a[t])throw r(Error(102),t);a[t]=l,n=!0}}n&&i()}};function z(e,t){var n=e.stateNode;if(!n)return null;var l=k(n);if(!l)return null;n=l[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(l=!l.disabled)||(l=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!l;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw r(Error(231),t,typeof n);return n}var M=e.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;M.hasOwnProperty("ReactCurrentDispatcher")||(M.ReactCurrentDispatcher={current:null}),M.hasOwnProperty("ReactCurrentBatchConfig")||(M.ReactCurrentBatchConfig={suspense:null});var U=/^(.*)[\\\/]/,F="function"==typeof Symbol&&Symbol.for,I=F?Symbol.for("react.element"):60103,R=F?Symbol.for("react.portal"):60106,O=F?Symbol.for("react.fragment"):60107,D=F?Symbol.for("react.strict_mode"):60108,L=F?Symbol.for("react.profiler"):60114,A=F?Symbol.for("react.provider"):60109,W=F?Symbol.for("react.context"):60110,V=F?Symbol.for("react.concurrent_mode"):60111,B=F?Symbol.for("react.forward_ref"):60112,j=F?Symbol.for("react.suspense"):60113,H=F?Symbol.for("react.suspense_list"):60120,Q=F?Symbol.for("react.memo"):60115,K=F?Symbol.for("react.lazy"):60116;F&&Symbol.for("react.fundamental"),F&&Symbol.for("react.responder"),F&&Symbol.for("react.scope");var $="function"==typeof Symbol&&Symbol.iterator;function q(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=$&&e[$]||e["@@iterator"])?e:null}function Y(e){if(-1===e._status){e._status=0;var t=e._ctor;t=t(),e._result=t,t.then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)})}}function X(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case O:return"Fragment";case R:return"Portal";case L:return"Profiler";case D:return"StrictMode";case j:return"Suspense";case H:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case W:return"Context.Consumer";case A:return"Context.Provider";case B:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case Q:return X(e.type);case K:if(e=1===e._status?e._result:null)return X(e)}return null}function G(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,l=e._debugSource,a=X(e.type);n=null,r&&(n=X(r.type)),r=a,a="",l?a=" (at "+l.fileName.replace(U,"")+":"+l.lineNumber+")":n&&(a=" (created by "+n+")"),n="\n    in "+(r||"Unknown")+a}t+=n,e=e.return}while(e);return t}var Z=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),J=null,ee=null,te=null;function ne(e){if(e=w(e)){if("function"!=typeof J)throw r(Error(280));var t=k(e.stateNode);J(e.stateNode,e.type,t)}}function re(e){ee?te?te.push(e):te=[e]:ee=e}function le(){if(ee){var e=ee,t=te;if(te=ee=null,ne(e),t)for(e=0;e<t.length;e++)ne(t[e])}}function ae(e,t){return e(t)}function ie(e,t,n,r){return e(t,n,r)}function oe(){}var ue=ae,ce=!1,se=!1;function fe(){null===ee&&null===te||(oe(),le())}new Map,new Map,new Map;var de=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,pe=Object.prototype.hasOwnProperty,me={},he={};function ve(e){return!!pe.call(he,e)||!pe.call(me,e)&&(de.test(e)?he[e]=!0:(me[e]=!0,!1))}function ge(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}function ye(e,t,n,r){if(null==t||ge(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function be(e,t,n,r,l,a){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=l,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=a}var ke={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ke[e]=new be(e,0,!1,e,null,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ke[t]=new be(t,1,!1,e[1],null,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ke[e]=new be(e,2,!1,e.toLowerCase(),null,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ke[e]=new be(e,2,!1,e,null,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ke[e]=new be(e,3,!1,e.toLowerCase(),null,!1)}),["checked","multiple","muted","selected"].forEach(function(e){ke[e]=new be(e,3,!0,e,null,!1)}),["capture","download"].forEach(function(e){ke[e]=new be(e,4,!1,e,null,!1)}),["cols","rows","size","span"].forEach(function(e){ke[e]=new be(e,6,!1,e,null,!1)}),["rowSpan","start"].forEach(function(e){ke[e]=new be(e,5,!1,e.toLowerCase(),null,!1)});var we=/[\-:]([a-z])/g;function Ee(e){return e[1].toUpperCase()}function xe(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Te(e,t,n,r){var l=ke.hasOwnProperty(t)?ke[t]:null;(null!==l?0===l.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(ye(t,n,l,r)&&(n=null),r||null===l?ve(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):l.mustUseProperty?e[l.propertyName]=null===n?3!==l.type&&"":n:(t=l.attributeName,r=l.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(l=l.type)||4===l&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Se(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function Ce(e){var t=Se(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var l=n.get,a=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return l.call(this)},set:function(e){r=""+e,a.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function _e(e){e._valueTracker||(e._valueTracker=Ce(e))}function Pe(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Se(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Ne(e,n){var r=n.checked;return t({},n,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=r?r:e._wrapperState.initialChecked})}function ze(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=xe(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Me(e,t){null!=(t=t.checked)&&Te(e,"checked",t,!1)}function Ue(e,t){Me(e,t);var n=xe(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ie(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ie(e,t.type,xe(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Fe(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ie(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Re(t){var n="";return e.Children.forEach(t,function(e){null!=e&&(n+=e)}),n}function Oe(e,n){return e=t({children:void 0},n),(n=Re(n.children))&&(e.children=n),e}function De(e,t,n,r){if(e=e.options,t){t={};for(var l=0;l<n.length;l++)t["$"+n[l]]=!0;for(n=0;n<e.length;n++)l=t.hasOwnProperty("$"+e[n].value),e[n].selected!==l&&(e[n].selected=l),l&&r&&(e[n].defaultSelected=!0)}else{for(n=""+xe(n),t=null,l=0;l<e.length;l++){if(e[l].value===n)return e[l].selected=!0,void(r&&(e[l].defaultSelected=!0));null!==t||e[l].disabled||(t=e[l])}null!==t&&(t.selected=!0)}}function Le(e,n){if(null!=n.dangerouslySetInnerHTML)throw r(Error(91));return t({},n,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Ae(e,t){var n=t.value;if(null==n){if(n=t.defaultValue,null!=(t=t.children)){if(null!=n)throw r(Error(92));if(Array.isArray(t)){if(!(1>=t.length))throw r(Error(93));t=t[0]}n=t}null==n&&(n="")}e._wrapperState={initialValue:xe(n)}}function We(e,t){var n=xe(t.value),r=xe(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Ve(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(we,Ee);ke[t]=new be(t,1,!1,e,null,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(we,Ee);ke[t]=new be(t,1,!1,e,"http://www.w3.org/1999/xlink",!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(we,Ee);ke[t]=new be(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1)}),["tabIndex","crossOrigin"].forEach(function(e){ke[e]=new be(e,1,!1,e.toLowerCase(),null,!1)}),ke.xlinkHref=new be("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0),["src","href","action","formAction"].forEach(function(e){ke[e]=new be(e,1,!1,e.toLowerCase(),null,!0)});var Be={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function je(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function He(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?je(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var Qe,Ke=function(e){return"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(t,n,r,l){MSApp.execUnsafeLocalFunction(function(){return e(t,n)})}:e}(function(e,t){if(e.namespaceURI!==Be.svg||"innerHTML"in e)e.innerHTML=t;else{for((Qe=Qe||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=Qe.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function $e(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}function qe(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Ye={animationend:qe("Animation","AnimationEnd"),animationiteration:qe("Animation","AnimationIteration"),animationstart:qe("Animation","AnimationStart"),transitionend:qe("Transition","TransitionEnd")},Xe={},Ge={};function Ze(e){if(Xe[e])return Xe[e];if(!Ye[e])return e;var t,n=Ye[e];for(t in n)if(n.hasOwnProperty(t)&&t in Ge)return Xe[e]=n[t];return e}Z&&(Ge=document.createElement("div").style,"AnimationEvent"in window||(delete Ye.animationend.animation,delete Ye.animationiteration.animation,delete Ye.animationstart.animation),"TransitionEvent"in window||delete Ye.transitionend.transition);var Je=Ze("animationend"),et=Ze("animationiteration"),tt=Ze("animationstart"),nt=Ze("transitionend"),rt="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),lt=!1,at=[],it=null,ot=null,ut=null,ct=new Map,st=new Map,ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "),dt="focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");function pt(e){var t=On(e);ft.forEach(function(n){Dn(n,e,t)}),dt.forEach(function(n){Dn(n,e,t)})}function mt(e,t,n,r){return{blockedOn:e,topLevelType:t,eventSystemFlags:32|n,nativeEvent:r}}function ht(e,t){switch(e){case"focus":case"blur":it=null;break;case"dragenter":case"dragleave":ot=null;break;case"mouseover":case"mouseout":ut=null;break;case"pointerover":case"pointerout":ct.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":st.delete(t.pointerId)}}function vt(e,t,n,r,l){return null===e||e.nativeEvent!==l?mt(t,n,r,l):(e.eventSystemFlags|=r,e)}function gt(e,t,n,r){switch(t){case"focus":return it=vt(it,e,t,n,r),!0;case"dragenter":return ot=vt(ot,e,t,n,r),!0;case"mouseover":return ut=vt(ut,e,t,n,r),!0;case"pointerover":var l=r.pointerId;return ct.set(l,vt(ct.get(l)||null,e,t,n,r)),!0;case"gotpointercapture":return l=r.pointerId,st.set(l,vt(st.get(l)||null,e,t,n,r)),!0}return!1}function yt(e){if(null!==e.blockedOn)return!1;var t=Fn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);return null===t||(e.blockedOn=t,!1)}function bt(e,t,n){yt(e)&&n.delete(t)}function kt(){for(lt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn)break;var t=Fn(e.topLevelType,e.eventSystemFlags,e.nativeEvent);null!==t?e.blockedOn=t:at.shift()}null!==it&&yt(it)&&(it=null),null!==ot&&yt(ot)&&(ot=null),null!==ut&&yt(ut)&&(ut=null),ct.forEach(bt),st.forEach(bt)}function wt(e,t){e.blockedOn===t&&(e.blockedOn=null,lt||(lt=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,kt)))}function Et(e){function t(t){return wt(t,e)}if(0<at.length){wt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}null!==it&&wt(it,e),null!==ot&&wt(ot,e),null!==ut&&wt(ut,e),ct.forEach(t),st.forEach(t)}var xt=0,Tt=2,St=1024;function Ct(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{((t=e).effectTag&(Tt|St))!==xt&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function _t(e){if(Ct(e)!==e)throw r(Error(188))}function Pt(e){var t=e.alternate;if(!t){if(null===(t=Ct(e)))throw r(Error(188));return t!==e?null:e}for(var n=e,l=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(l=a.return)){n=l;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return _t(a),e;if(i===l)return _t(a),t;i=i.sibling}throw r(Error(188))}if(n.return!==l.return)n=a,l=i;else{for(var o=!1,u=a.child;u;){if(u===n){o=!0,n=a,l=i;break}if(u===l){o=!0,l=a,n=i;break}u=u.sibling}if(!o){for(u=i.child;u;){if(u===n){o=!0,n=i,l=a;break}if(u===l){o=!0,l=i,n=a;break}u=u.sibling}if(!o)throw r(Error(189))}}if(n.alternate!==l)throw r(Error(190))}if(3!==n.tag)throw r(Error(188));return n.stateNode.current===n?e:t}function Nt(e){if(!(e=Pt(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}function zt(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function Mt(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Ut(e,t,n){(t=z(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function Ft(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=Mt(t);for(t=n.length;0<t--;)Ut(n[t],"captured",e);for(t=0;t<n.length;t++)Ut(n[t],"bubbled",e)}}function It(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=z(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=T(n._dispatchListeners,t),n._dispatchInstances=T(n._dispatchInstances,e))}function Rt(e){e&&e.dispatchConfig.registrationName&&It(e._targetInst,null,e)}function Ot(e){S(e,Ft)}function Dt(){return!0}function Lt(){return!1}function At(e,t,n,r){for(var l in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(l)&&((t=e[l])?this[l]=t(n):"target"===l?this.target=r:this[l]=n[l]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?Dt:Lt,this.isPropagationStopped=Lt,this}function Wt(e,t,n,r){if(this.eventPool.length){var l=this.eventPool.pop();return this.call(l,e,t,n,r),l}return new this(e,t,n,r)}function Vt(e){if(!(e instanceof this))throw r(Error(279));e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function Bt(e){e.eventPool=[],e.getPooled=Wt,e.release=Vt}t(At.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=Dt)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=Dt)},persist:function(){this.isPersistent=Dt},isPersistent:Lt,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=Lt,this._dispatchInstances=this._dispatchListeners=null}}),At.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},At.extend=function(e){function n(){}function r(){return l.apply(this,arguments)}var l=this;n.prototype=l.prototype;var a=new n;return t(a,r.prototype),r.prototype=a,r.prototype.constructor=r,r.Interface=t({},l.Interface,e),r.extend=l.extend,Bt(r),r},Bt(At);var jt=At.extend({animationName:null,elapsedTime:null,pseudoElement:null}),Ht=At.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Qt=At.extend({view:null,detail:null}),Kt=Qt.extend({relatedTarget:null});function $t(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var qt={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},Yt={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Xt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Gt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Xt[e])&&!!t[e]}function Zt(){return Gt}for(var Jt=Qt.extend({key:function(e){if(e.key){var t=qt[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=$t(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?Yt[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Zt,charCode:function(e){return"keypress"===e.type?$t(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?$t(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),en=0,tn=0,nn=!1,rn=!1,ln=Qt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Zt,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=en;return en=e.screenX,nn?"mousemove"===e.type?e.screenX-t:0:(nn=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=tn;return tn=e.screenY,rn?"mousemove"===e.type?e.screenY-t:0:(rn=!0,0)}}),an=ln.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),on=ln.extend({dataTransfer:null}),un=Qt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Zt}),cn=At.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),sn=ln.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),fn=[["blur","blur",0],["cancel","cancel",0],["click","click",0],["close","close",0],["contextmenu","contextMenu",0],["copy","copy",0],["cut","cut",0],["auxclick","auxClick",0],["dblclick","doubleClick",0],["dragend","dragEnd",0],["dragstart","dragStart",0],["drop","drop",0],["focus","focus",0],["input","input",0],["invalid","invalid",0],["keydown","keyDown",0],["keypress","keyPress",0],["keyup","keyUp",0],["mousedown","mouseDown",0],["mouseup","mouseUp",0],["paste","paste",0],["pause","pause",0],["play","play",0],["pointercancel","pointerCancel",0],["pointerdown","pointerDown",0],["pointerup","pointerUp",0],["ratechange","rateChange",0],["reset","reset",0],["seeked","seeked",0],["submit","submit",0],["touchcancel","touchCancel",0],["touchend","touchEnd",0],["touchstart","touchStart",0],["volumechange","volumeChange",0],["drag","drag",1],["dragenter","dragEnter",1],["dragexit","dragExit",1],["dragleave","dragLeave",1],["dragover","dragOver",1],["mousemove","mouseMove",1],["mouseout","mouseOut",1],["mouseover","mouseOver",1],["pointermove","pointerMove",1],["pointerout","pointerOut",1],["pointerover","pointerOver",1],["scroll","scroll",1],["toggle","toggle",1],["touchmove","touchMove",1],["wheel","wheel",1],["abort","abort",2],[Je,"animationEnd",2],[et,"animationIteration",2],[tt,"animationStart",2],["canplay","canPlay",2],["canplaythrough","canPlayThrough",2],["durationchange","durationChange",2],["emptied","emptied",2],["encrypted","encrypted",2],["ended","ended",2],["error","error",2],["gotpointercapture","gotPointerCapture",2],["load","load",2],["loadeddata","loadedData",2],["loadedmetadata","loadedMetadata",2],["loadstart","loadStart",2],["lostpointercapture","lostPointerCapture",2],["playing","playing",2],["progress","progress",2],["seeking","seeking",2],["stalled","stalled",2],["suspend","suspend",2],["timeupdate","timeUpdate",2],[nt,"transitionEnd",2],["waiting","waiting",2]],dn={},pn={},mn=0;mn<fn.length;mn++){var hn=fn[mn],vn=hn[0],gn=hn[1],yn=hn[2],bn="on"+(gn[0].toUpperCase()+gn.slice(1)),kn={phasedRegistrationNames:{bubbled:bn,captured:bn+"Capture"},dependencies:[vn],eventPriority:yn};dn[gn]=kn,pn[vn]=kn}var wn={eventTypes:dn,getEventPriority:function(e){return void 0!==(e=pn[e])?e.eventPriority:2},extractEvents:function(e,t,n,r){var l=pn[e];if(!l)return null;switch(e){case"keypress":if(0===$t(n))return null;case"keydown":case"keyup":e=Jt;break;case"blur":case"focus":e=Kt;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=ln;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=on;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=un;break;case Je:case et:case tt:e=jt;break;case nt:e=cn;break;case"scroll":e=Qt;break;case"wheel":e=sn;break;case"copy":case"cut":case"paste":e=Ht;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=an;break;default:e=At}return Ot(t=e.getPooled(l,t,n,r)),t}},En=wn.getEventPriority,xn=10,Tn=[];function Sn(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r=n;if(3===r.tag)r=r.stateNode.containerInfo;else{for(;r.return;)r=r.return;r=3!==r.tag?null:r.stateNode.containerInfo}if(!r)break;5!==(t=n.tag)&&6!==t||e.ancestors.push(n),n=hr(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var l=zt(e.nativeEvent);r=e.topLevelType;for(var a=e.nativeEvent,i=e.eventSystemFlags,o=null,c=0;c<u.length;c++){var s=u[c];s&&(s=s.extractEvents(r,t,a,l,i))&&(o=T(o,s))}P(o)}}var Cn=!0;function _n(e,t){Pn(t,e,!1)}function Pn(e,t,n){switch(En(t)){case 0:var r=Nn.bind(null,t,1);break;case 1:r=zn.bind(null,t,1);break;default:r=Un.bind(null,t,1)}n?e.addEventListener(t,r,!0):e.addEventListener(t,r,!1)}function Nn(e,t,n){ce||oe();var r=Un,l=ce;ce=!0;try{ie(r,e,t,n)}finally{(ce=l)||fe()}}function zn(e,t,n){Un(e,t,n)}function Mn(e,t,n,r){if(Tn.length){var l=Tn.pop();l.topLevelType=e,l.eventSystemFlags=t,l.nativeEvent=n,l.targetInst=r,e=l}else e={topLevelType:e,eventSystemFlags:t,nativeEvent:n,targetInst:r,ancestors:[]};try{if(t=Sn,n=e,se)t(n,void 0);else{se=!0;try{ue(t,n,void 0)}finally{se=!1,fe()}}}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,Tn.length<xn&&Tn.push(e)}}function Un(e,t,n){if(Cn)if(0<at.length&&-1<ft.indexOf(e))e=mt(null,e,t,n),at.push(e);else{var r=Fn(e,t,n);null===r?ht(e,n):-1<ft.indexOf(e)?(e=mt(r,e,t,n),at.push(e)):gt(r,e,t,n)||(ht(e,n),Mn(e,t,n,null))}}function Fn(e,t,n){var r=zt(n),l=hr(r);if(null!==l)if(null===(r=Ct(l)))l=null;else{var a=r.tag;if(13===a){if(null!==(r=13!==r.tag||(null===(l=r.memoizedState)&&(null!==(r=r.alternate)&&(l=r.memoizedState)),null===l)?null:l.dehydrated))return r;l=null}else if(3===a){if(r.stateNode.hydrate)return 3===r.tag?r.stateNode.containerInfo:null;l=null}else r!==l&&(l=null)}return Mn(e,t,n,l),null}function In(e){if(!Z)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t}var Rn=new("function"==typeof WeakMap?WeakMap:Map);function On(e){var t=Rn.get(e);return void 0===t&&(t=new Set,Rn.set(e,t)),t}function Dn(e,t,n){if(!n.has(e)){switch(e){case"scroll":Pn(t,"scroll",!0);break;case"focus":case"blur":Pn(t,"focus",!0),Pn(t,"blur",!0),n.add("blur"),n.add("focus");break;case"cancel":case"close":In(e)&&Pn(t,e,!0);break;case"invalid":case"submit":case"reset":break;default:-1===rt.indexOf(e)&&_n(e,t)}n.add(e)}}var Ln={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},An=["Webkit","ms","Moz","O"];function Wn(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||Ln.hasOwnProperty(e)&&Ln[e]?(""+t).trim():t+"px"}function Vn(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),l=Wn(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,l):e[n]=l}}Object.keys(Ln).forEach(function(e){An.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Ln[t]=Ln[e]})});var Bn=t({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function jn(e,t){if(t){if(Bn[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw r(Error(137),e,"");if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw r(Error(60));if(!("object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML))throw r(Error(61))}if(null!=t.style&&"object"!=typeof t.style)throw r(Error(62),"")}}function Hn(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Qn(e,t){var n=On(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=f[t];for(var r=0;r<t.length;r++)Dn(t[r],e,n)}function Kn(){}function $n(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function qn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Yn(e,t){var n,r=qn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=qn(r)}}function Xn(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?Xn(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function Gn(){for(var e=window,t=$n();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(r){n=!1}if(!n)break;t=$n((e=t.contentWindow).document)}return t}function Zn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var Jn="$",er="/$",tr="$?",nr="$!",rr=null,lr=null;function ar(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function ir(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var or="function"==typeof setTimeout?setTimeout:void 0,ur="function"==typeof clearTimeout?clearTimeout:void 0;function cr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function sr(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if(n===Jn||n===nr||n===tr){if(0===t)return e;t--}else n===er&&t++}e=e.previousSibling}return null}var fr=Math.random().toString(36).slice(2),dr="__reactInternalInstance$"+fr,pr="__reactEventHandlers$"+fr,mr="__reactContainere$"+fr;function hr(e){var t=e[dr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[mr]||n[dr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=sr(e);null!==e;){if(n=e[dr])return n;e=sr(e)}return t}n=(e=n).parentNode}return null}function vr(e){return!(e=e[dr]||e[mr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function gr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw r(Error(33))}function yr(e){return e[pr]||null}var br=null,kr=null,wr=null;function Er(){if(wr)return wr;var e,t,n=kr,r=n.length,l="value"in br?br.value:br.textContent,a=l.length;for(e=0;e<r&&n[e]===l[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===l[a-t];t++);return wr=l.slice(e,1<t?1-t:void 0)}var xr=At.extend({data:null}),Tr=At.extend({data:null}),Sr=[9,13,27,32],Cr=Z&&"CompositionEvent"in window,_r=null;Z&&"documentMode"in document&&(_r=document.documentMode);var Pr=Z&&"TextEvent"in window&&!_r,Nr=Z&&(!Cr||_r&&8<_r&&11>=_r),zr=String.fromCharCode(32),Mr={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ur=!1;function Fr(e,t){switch(e){case"keyup":return-1!==Sr.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ir(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var Rr=!1;function Or(e,t){switch(e){case"compositionend":return Ir(t);case"keypress":return 32!==t.which?null:(Ur=!0,zr);case"textInput":return(e=t.data)===zr&&Ur?null:e;default:return null}}function Dr(e,t){if(Rr)return"compositionend"===e||!Cr&&Fr(e,t)?(e=Er(),wr=kr=br=null,Rr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Nr&&"ko"!==t.locale?null:t.data;default:return null}}var Lr={eventTypes:Mr,extractEvents:function(e,t,n,r){var l;if(Cr)e:{switch(e){case"compositionstart":var a=Mr.compositionStart;break e;case"compositionend":a=Mr.compositionEnd;break e;case"compositionupdate":a=Mr.compositionUpdate;break e}a=void 0}else Rr?Fr(e,n)&&(a=Mr.compositionEnd):"keydown"===e&&229===n.keyCode&&(a=Mr.compositionStart);return a?(Nr&&"ko"!==n.locale&&(Rr||a!==Mr.compositionStart?a===Mr.compositionEnd&&Rr&&(l=Er()):(kr="value"in(br=r)?br.value:br.textContent,Rr=!0)),a=xr.getPooled(a,t,n,r),l?a.data=l:null!==(l=Ir(n))&&(a.data=l),Ot(a),l=a):l=null,(e=Pr?Or(e,n):Dr(e,n))?((t=Tr.getPooled(Mr.beforeInput,t,n,r)).data=e,Ot(t)):t=null,null===l?t:null===t?l:[l,t]}},Ar={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Ar[e.type]:"textarea"===t}var Vr={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Br(e,t,n){return(e=At.getPooled(Vr.change,e,t,n)).type="change",re(n),Ot(e),e}var jr=null,Hr=null;function Qr(e){P(e)}function Kr(e){if(Pe(gr(e)))return e}function $r(e,t){if("change"===e)return t}var qr=!1;function Yr(){jr&&(jr.detachEvent("onpropertychange",Xr),Hr=jr=null)}function Xr(e){if("value"===e.propertyName&&Kr(Hr))if(e=Br(Hr,e,zt(e)),ce)P(e);else{ce=!0;try{ae(Qr,e)}finally{ce=!1,fe()}}}function Gr(e,t,n){"focus"===e?(Yr(),Hr=n,(jr=t).attachEvent("onpropertychange",Xr)):"blur"===e&&Yr()}function Zr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Kr(Hr)}function Jr(e,t){if("click"===e)return Kr(t)}function el(e,t){if("input"===e||"change"===e)return Kr(t)}Z&&(qr=In("input")&&(!document.documentMode||9<document.documentMode));var tl={eventTypes:Vr,_isInputEventSupported:qr,extractEvents:function(e,t,n,r){var l=t?gr(t):window,a=l.nodeName&&l.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===l.type)var i=$r;else if(Wr(l))if(qr)i=el;else{i=Zr;var o=Gr}else(a=l.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===l.type||"radio"===l.type)&&(i=Jr);if(i&&(i=i(e,t)))return Br(i,n,r);o&&o(e,l,t),"blur"===e&&(e=l._wrapperState)&&e.controlled&&"number"===l.type&&Ie(l,"number",l.value)}},nl={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},rl={eventTypes:nl,extractEvents:function(e,t,n,r,l){var a="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(a&&0==(32&l)&&(n.relatedTarget||n.fromElement)||!i&&!a)return null;if(l=r.window===r?r:(l=r.ownerDocument)?l.defaultView||l.parentWindow:window,i?(i=t,null!==(t=(t=n.relatedTarget||n.toElement)?hr(t):null)&&(t!==(a=Ct(t))||5!==t.tag&&6!==t.tag)&&(t=null)):i=null,i===t)return null;if("mouseout"===e||"mouseover"===e)var o=ln,u=nl.mouseLeave,c=nl.mouseEnter,s="mouse";else"pointerout"!==e&&"pointerover"!==e||(o=an,u=nl.pointerLeave,c=nl.pointerEnter,s="pointer");if(e=null==i?l:gr(i),l=null==t?l:gr(t),(u=o.getPooled(u,i,n,r)).type=s+"leave",u.target=e,u.relatedTarget=l,(n=o.getPooled(c,t,n,r)).type=s+"enter",n.target=l,n.relatedTarget=e,s=t,(r=i)&&s)e:{for(c=s,e=0,i=o=r;i;i=Mt(i))e++;for(i=0,t=c;t;t=Mt(t))i++;for(;0<e-i;)o=Mt(o),e--;for(;0<i-e;)c=Mt(c),i--;for(;e--;){if(o===c||o===c.alternate)break e;o=Mt(o),c=Mt(c)}o=null}else o=null;for(c=o,o=[];r&&r!==c&&(null===(e=r.alternate)||e!==c);)o.push(r),r=Mt(r);for(r=[];s&&s!==c&&(null===(e=s.alternate)||e!==c);)r.push(s),s=Mt(s);for(s=0;s<o.length;s++)It(o[s],"bubbled",u);for(s=r.length;0<s--;)It(r[s],"captured",n);return[u,n]}};function ll(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t}var al="function"==typeof Object.is?Object.is:ll,il=Object.prototype.hasOwnProperty;function ol(e,t){if(al(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!il.call(t,n[r])||!al(e[n[r]],t[n[r]]))return!1;return!0}var ul=Z&&"documentMode"in document&&11>=document.documentMode,cl={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},sl=null,fl=null,dl=null,pl=!1;function ml(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return pl||null==sl||sl!==$n(n)?null:("selectionStart"in(n=sl)&&Zn(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},dl&&ol(dl,n)?null:(dl=n,(e=At.getPooled(cl.select,fl,e,t)).type="select",e.target=sl,Ot(e),e))}var hl={eventTypes:cl,extractEvents:function(e,t,n,r){var l,a=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(l=!a)){e:{a=On(a),l=f.onSelect;for(var i=0;i<l.length;i++)if(!a.has(l[i])){a=!1;break e}a=!0}l=!a}if(l)return null;switch(a=t?gr(t):window,e){case"focus":(Wr(a)||"true"===a.contentEditable)&&(sl=a,fl=t,dl=null);break;case"blur":dl=fl=sl=null;break;case"mousedown":pl=!0;break;case"contextmenu":case"mouseup":case"dragend":return pl=!1,ml(n,r);case"selectionchange":if(ul)break;case"keydown":case"keyup":return ml(n,r)}return null}};N.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),k=yr,w=vr,E=gr,N.injectEventPluginsByName({SimpleEventPlugin:wn,EnterLeaveEventPlugin:rl,ChangeEventPlugin:tl,SelectEventPlugin:hl,BeforeInputEventPlugin:Lr}),new Set;var vl=[],gl=-1;function yl(e){0>gl||(e.current=vl[gl],vl[gl]=null,gl--)}function bl(e,t){vl[++gl]=e.current,e.current=t}var kl={},wl={current:kl},El={current:!1},xl=kl;function Tl(e,t){var n=e.type.contextTypes;if(!n)return kl;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var l,a={};for(l in n)a[l]=t[l];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=a),a}function Sl(e){return null!=(e=e.childContextTypes)}function Cl(e){yl(El,e),yl(wl,e)}function _l(e){yl(El,e),yl(wl,e)}function Pl(e,t,n){if(wl.current!==kl)throw r(Error(168));bl(wl,t,e),bl(El,n,e)}function Nl(e,n,l){var a=e.stateNode;if(e=n.childContextTypes,"function"!=typeof a.getChildContext)return l;for(var i in a=a.getChildContext())if(!(i in e))throw r(Error(108),X(n)||"Unknown",i);return t({},l,{},a)}function zl(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||kl,xl=wl.current,bl(wl,t,e),bl(El,El.current,e),!0}function Ml(e,t,n){var l=e.stateNode;if(!l)throw r(Error(169));n?(t=Nl(e,t,xl),l.__reactInternalMemoizedMergedChildContext=t,yl(El,e),yl(wl,e),bl(wl,t,e)):yl(El,e),bl(El,n,e)}var Ul=n.unstable_runWithPriority,Fl=n.unstable_scheduleCallback,Il=n.unstable_cancelCallback,Rl=n.unstable_shouldYield,Ol=n.unstable_requestPaint,Dl=n.unstable_now,Ll=n.unstable_getCurrentPriorityLevel,Al=n.unstable_ImmediatePriority,Wl=n.unstable_UserBlockingPriority,Vl=n.unstable_NormalPriority,Bl=n.unstable_LowPriority,jl=n.unstable_IdlePriority,Hl={},Ql=void 0!==Ol?Ol:function(){},Kl=null,$l=null,ql=!1,Yl=Dl(),Xl=1e4>Yl?Dl:function(){return Dl()-Yl};function Gl(){switch(Ll()){case Al:return 99;case Wl:return 98;case Vl:return 97;case Bl:return 96;case jl:return 95;default:throw r(Error(332))}}function Zl(e){switch(e){case 99:return Al;case 98:return Wl;case 97:return Vl;case 96:return Bl;case 95:return jl;default:throw r(Error(332))}}function Jl(e,t){return e=Zl(e),Ul(e,t)}function ea(e,t,n){return e=Zl(e),Fl(e,t,n)}function ta(e){return null===Kl?(Kl=[e],$l=Fl(Al,ra)):Kl.push(e),Hl}function na(){if(null!==$l){var e=$l;$l=null,Il(e)}ra()}function ra(){if(!ql&&null!==Kl){ql=!0;var e=0;try{var t=Kl;Jl(99,function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}}),Kl=null}catch(n){throw null!==Kl&&(Kl=Kl.slice(e+1)),Fl(Al,na),n}finally{ql=!1}}}function la(e,n){if(e&&e.defaultProps)for(var r in n=t({},n),e=e.defaultProps)void 0===n[r]&&(n[r]=e[r]);return n}var aa={current:null},ia=null,oa=null,ua=null;function ca(){ua=oa=ia=null}function sa(e,t){var n=e.type._context;bl(aa,n._currentValue,e),n._currentValue=t}function fa(e){var t=aa.current;yl(aa,e),e.type._context._currentValue=t}function da(e,t){for(;null!==e;){var n=e.alternate;if(e.childExpirationTime<t)e.childExpirationTime=t,null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t);else{if(!(null!==n&&n.childExpirationTime<t))break;n.childExpirationTime=t}e=e.return}}function pa(e,t){ia=e,ua=oa=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(e.expirationTime>=t&&(Wi=!0),e.firstContext=null)}function ma(e,t){if(ua!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(ua=e,t=1073741823),t={context:e,observedBits:t,next:null},null===oa){if(null===ia)throw r(Error(308));oa=t,ia.dependencies={expirationTime:0,firstContext:t,responders:null}}else oa=oa.next=t;return e._currentValue}var ha=!1;function va(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ga(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function ya(e,t){return{expirationTime:e,suspenseConfig:t,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function ba(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function ka(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,l=null;null===r&&(r=e.updateQueue=va(e.memoizedState))}else r=e.updateQueue,l=n.updateQueue,null===r?null===l?(r=e.updateQueue=va(e.memoizedState),l=n.updateQueue=va(n.memoizedState)):r=e.updateQueue=ga(l):null===l&&(l=n.updateQueue=ga(r));null===l||r===l?ba(r,t):null===r.lastUpdate||null===l.lastUpdate?(ba(r,t),ba(l,t)):(ba(r,t),l.lastUpdate=t)}function wa(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=va(e.memoizedState):Ea(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function Ea(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=ga(t)),t}function xa(e,n,r,l,a,i){switch(r.tag){case 1:return"function"==typeof(e=r.payload)?e.call(i,l,a):e;case 3:e.effectTag=-4097&e.effectTag|64;case 0:if(null==(a="function"==typeof(e=r.payload)?e.call(i,l,a):e))break;return t({},l,a);case 2:ha=!0}return l}function Ta(e,t,n,r,l){ha=!1;for(var a=(t=Ea(e,t)).baseState,i=null,o=0,u=t.firstUpdate,c=a;null!==u;){var s=u.expirationTime;s<l?(null===i&&(i=u,a=c),o<s&&(o=s)):(Nu(s,u.suspenseConfig),c=xa(e,t,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=u:(t.lastEffect.nextEffect=u,t.lastEffect=u))),u=u.next}for(s=null,u=t.firstCapturedUpdate;null!==u;){var f=u.expirationTime;f<l?(null===s&&(s=u,null===i&&(a=c)),o<f&&(o=f)):(c=xa(e,t,u,c,n,r),null!==u.callback&&(e.effectTag|=32,u.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=u:(t.lastCapturedEffect.nextEffect=u,t.lastCapturedEffect=u))),u=u.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(a=c),t.baseState=a,t.firstUpdate=i,t.firstCapturedUpdate=s,zu(o),e.expirationTime=o,e.memoizedState=c}function Sa(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),Ca(t.firstEffect,n),t.firstEffect=t.lastEffect=null,Ca(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function Ca(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var l=t;if("function"!=typeof n)throw r(Error(191),n);n.call(l)}e=e.nextEffect}}var _a=M.ReactCurrentBatchConfig,Pa=(new e.Component).refs;function Na(e,n,r,l){r=null==(r=r(l,n=e.memoizedState))?n:t({},n,r),e.memoizedState=r,null!==(l=e.updateQueue)&&0===e.expirationTime&&(l.baseState=r)}var za={isMounted:function(e){return!!(e=e._reactInternalFiber)&&Ct(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=su(),l=_a.suspense;(l=ya(r=fu(r,e,l),l)).payload=t,null!=n&&(l.callback=n),ka(e,l),mu(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=su(),l=_a.suspense;(l=ya(r=fu(r,e,l),l)).tag=1,l.payload=t,null!=n&&(l.callback=n),ka(e,l),mu(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=su(),r=_a.suspense;(r=ya(n=fu(n,e,r),r)).tag=2,null!=t&&(r.callback=t),ka(e,r),mu(e,n)}};function Ma(e,t,n,r,l,a,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,a,i):!t.prototype||!t.prototype.isPureReactComponent||(!ol(n,r)||!ol(l,a))}function Ua(e,t,n){var r=!1,l=kl,a=t.contextType;return"object"==typeof a&&null!==a?a=ma(a):(l=Sl(t)?xl:wl.current,a=(r=null!=(r=t.contextTypes))?Tl(e,l):kl),t=new t(n,a),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=za,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=l,e.__reactInternalMemoizedMaskedChildContext=a),t}function Fa(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&za.enqueueReplaceState(t,t.state,null)}function Ia(e,t,n,r){var l=e.stateNode;l.props=n,l.state=e.memoizedState,l.refs=Pa;var a=t.contextType;"object"==typeof a&&null!==a?l.context=ma(a):(a=Sl(t)?xl:wl.current,l.context=Tl(e,a)),null!==(a=e.updateQueue)&&(Ta(e,a,n,l,r),l.state=e.memoizedState),"function"==typeof(a=t.getDerivedStateFromProps)&&(Na(e,t,a,n),l.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof l.getSnapshotBeforeUpdate||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||(t=l.state,"function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount(),t!==l.state&&za.enqueueReplaceState(l,l.state,null),null!==(a=e.updateQueue)&&(Ta(e,a,n,l,r),l.state=e.memoizedState)),"function"==typeof l.componentDidMount&&(e.effectTag|=4)}var Ra=Array.isArray;function Oa(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw r(Error(309));var l=n.stateNode}if(!l)throw r(Error(147),e);var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=l.refs;t===Pa&&(t=l.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw r(Error(284));if(!n._owner)throw r(Error(290),e)}return e}function Da(e,t){if("textarea"!==e.type)throw r(Error(31),"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function La(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function l(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t,n){return(e=Zu(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=Tt,n):r:(t.effectTag=Tt,n):n}function o(t){return e&&null===t.alternate&&(t.effectTag=Tt),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=tc(n,e.mode,r)).return=e,t):((t=a(t,n,r)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props,r)).ref=Oa(e,t,n),r.return=e,r):((r=Ju(n.type,n.key,n.props,null,e.mode,r)).ref=Oa(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=nc(n,e.mode,r)).return=e,t):((t=a(t,n.children||[],r)).return=e,t)}function f(e,t,n,r,l){return null===t||7!==t.tag?((t=ec(n,e.mode,r,l)).return=e,t):((t=a(t,n,r)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=tc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case I:return(n=Ju(t.type,t.key,t.props,null,e.mode,n)).ref=Oa(e,null,t),n.return=e,n;case R:return(t=nc(t,e.mode,n)).return=e,t}if(Ra(t)||q(t))return(t=ec(t,e.mode,n,null)).return=e,t;Da(e,t)}return null}function p(e,t,n,r){var l=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==l?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case I:return n.key===l?n.type===O?f(e,t,n.props.children,r,l):c(e,t,n,r):null;case R:return n.key===l?s(e,t,n,r):null}if(Ra(n)||q(n))return null!==l?null:f(e,t,n,r,null);Da(e,n)}return null}function m(e,t,n,r,l){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,l);if("object"==typeof r&&null!==r){switch(r.$$typeof){case I:return e=e.get(null===r.key?n:r.key)||null,r.type===O?f(t,e,r.props.children,l,r.key):c(t,e,r,l);case R:return s(t,e=e.get(null===r.key?n:r.key)||null,r,l)}if(Ra(r)||q(r))return f(t,e=e.get(n)||null,r,l,null);Da(t,r)}return null}function h(r,a,o,u){for(var c=null,s=null,f=a,h=a=0,v=null;null!==f&&h<o.length;h++){f.index>h?(v=f,f=null):v=f.sibling;var g=p(r,f,o[h],u);if(null===g){null===f&&(f=v);break}e&&f&&null===g.alternate&&t(r,f),a=i(g,a,h),null===s?c=g:s.sibling=g,s=g,f=v}if(h===o.length)return n(r,f),c;if(null===f){for(;h<o.length;h++)null!==(f=d(r,o[h],u))&&(a=i(f,a,h),null===s?c=f:s.sibling=f,s=f);return c}for(f=l(r,f);h<o.length;h++)null!==(v=m(f,r,h,o[h],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?h:v.key),a=i(v,a,h),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach(function(e){return t(r,e)}),c}function v(a,o,u,c){var s=q(u);if("function"!=typeof s)throw r(Error(150));if(null==(u=s.call(u)))throw r(Error(151));for(var f=s=null,h=o,v=o=0,g=null,y=u.next();null!==h&&!y.done;v++,y=u.next()){h.index>v?(g=h,h=null):g=h.sibling;var b=p(a,h,y.value,c);if(null===b){null===h&&(h=g);break}e&&h&&null===b.alternate&&t(a,h),o=i(b,o,v),null===f?s=b:f.sibling=b,f=b,h=g}if(y.done)return n(a,h),s;if(null===h){for(;!y.done;v++,y=u.next())null!==(y=d(a,y.value,c))&&(o=i(y,o,v),null===f?s=y:f.sibling=y,f=y);return s}for(h=l(a,h);!y.done;v++,y=u.next())null!==(y=m(h,a,v,y.value,c))&&(e&&null!==y.alternate&&h.delete(null===y.key?v:y.key),o=i(y,o,v),null===f?s=y:f.sibling=y,f=y);return e&&h.forEach(function(e){return t(a,e)}),s}return function(e,l,i,u){var c="object"==typeof i&&null!==i&&i.type===O&&null===i.key;c&&(i=i.props.children);var s="object"==typeof i&&null!==i;if(s)switch(i.$$typeof){case I:e:{for(s=i.key,c=l;null!==c;){if(c.key===s){if(7===c.tag?i.type===O:c.elementType===i.type){n(e,c.sibling),(l=a(c,i.type===O?i.props.children:i.props,u)).ref=Oa(e,c,i),l.return=e,e=l;break e}n(e,c);break}t(e,c),c=c.sibling}i.type===O?((l=ec(i.props.children,e.mode,u,i.key)).return=e,e=l):((u=Ju(i.type,i.key,i.props,null,e.mode,u)).ref=Oa(e,l,i),u.return=e,e=u)}return o(e);case R:e:{for(c=i.key;null!==l;){if(l.key===c){if(4===l.tag&&l.stateNode.containerInfo===i.containerInfo&&l.stateNode.implementation===i.implementation){n(e,l.sibling),(l=a(l,i.children||[],u)).return=e,e=l;break e}n(e,l);break}t(e,l),l=l.sibling}(l=nc(i,e.mode,u)).return=e,e=l}return o(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==l&&6===l.tag?(n(e,l.sibling),(l=a(l,i,u)).return=e,e=l):(n(e,l),(l=tc(i,e.mode,u)).return=e,e=l),o(e);if(Ra(i))return h(e,l,i,u);if(q(i))return v(e,l,i,u);if(s&&Da(e,i),void 0===i&&!c)switch(e.tag){case 1:case 0:throw e=e.type,r(Error(152),e.displayName||e.name||"Component")}return n(e,l)}}var Aa=La(!0),Wa=La(!1),Va={},Ba={current:Va},ja={current:Va},Ha={current:Va};function Qa(e){if(e===Va)throw r(Error(174));return e}function Ka(e,t){bl(Ha,t,e),bl(ja,e,e),bl(Ba,Va,e);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:He(null,"");break;default:t=He(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}yl(Ba,e),bl(Ba,t,e)}function $a(e){yl(Ba,e),yl(ja,e),yl(Ha,e)}function qa(e){Qa(Ha.current);var t=Qa(Ba.current),n=He(t,e.type);t!==n&&(bl(ja,e,e),bl(Ba,n,e))}function Ya(e){ja.current===e&&(yl(Ba,e),yl(ja,e))}var Xa={current:0};function Ga(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||n.data===tr||n.data===nr))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if((64&t.effectTag)!==xt)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function Za(e,t){return{responder:e,props:t}}var Ja=M.ReactCurrentDispatcher,ei=0,ti=null,ni=null,ri=null,li=null,ai=null,ii=null,oi=0,ui=null,ci=0,si=!1,fi=null,di=0;function pi(){throw r(Error(321))}function mi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!al(e[n],t[n]))return!1;return!0}function hi(e,t,n,l,a,i){if(ei=i,ti=t,ri=null!==e?e.memoizedState:null,Ja.current=null===ri?Pi:Ni,t=n(l,a),si){do{si=!1,di+=1,ri=null!==e?e.memoizedState:null,ii=li,ui=ai=ni=null,Ja.current=Ni,t=n(l,a)}while(si);fi=null,di=0}if(Ja.current=_i,(e=ti).memoizedState=li,e.expirationTime=oi,e.updateQueue=ui,e.effectTag|=ci,e=null!==ni&&null!==ni.next,ei=0,ii=ai=li=ri=ni=ti=null,oi=0,ui=null,ci=0,e)throw r(Error(300));return t}function vi(){Ja.current=_i,ei=0,ii=ai=li=ri=ni=ti=null,oi=0,ui=null,ci=0,si=!1,fi=null,di=0}function gi(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===ai?li=ai=e:ai=ai.next=e,ai}function yi(){if(null!==ii)ii=(ai=ii).next,ri=null!==(ni=ri)?ni.next:null;else{if(null===ri)throw r(Error(310));var e={memoizedState:(ni=ri).memoizedState,baseState:ni.baseState,queue:ni.queue,baseUpdate:ni.baseUpdate,next:null};ai=null===ai?li=e:ai.next=e,ri=ni.next}return ai}function bi(e,t){return"function"==typeof t?t(e):t}function ki(e){var t=yi(),n=t.queue;if(null===n)throw r(Error(311));if(n.lastRenderedReducer=e,0<di){var l=n.dispatch;if(null!==fi){var a=fi.get(n);if(void 0!==a){fi.delete(n);var i=t.memoizedState;do{i=e(i,a.action),a=a.next}while(null!==a);return al(i,t.memoizedState)||(Wi=!0),t.memoizedState=i,t.baseUpdate===n.last&&(t.baseState=i),n.lastRenderedState=i,[i,l]}}return[t.memoizedState,l]}l=n.last;var o=t.baseUpdate;if(i=t.baseState,null!==o?(null!==l&&(l.next=null),l=o.next):l=null!==l?l.next:null,null!==l){var u=a=null,c=l,s=!1;do{var f=c.expirationTime;f<ei?(s||(s=!0,u=o,a=i),f>oi&&zu(oi=f)):(Nu(f,c.suspenseConfig),i=c.eagerReducer===e?c.eagerState:e(i,c.action)),o=c,c=c.next}while(null!==c&&c!==l);s||(u=o,a=i),al(i,t.memoizedState)||(Wi=!0),t.memoizedState=i,t.baseUpdate=u,t.baseState=a,n.lastRenderedState=i}return[t.memoizedState,n.dispatch]}function wi(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===ui?(ui={lastEffect:null}).lastEffect=e.next=e:null===(t=ui.lastEffect)?ui.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,ui.lastEffect=e),e}function Ei(e,t,n,r){var l=gi();ci|=e,l.memoizedState=wi(t,n,void 0,void 0===r?null:r)}function xi(e,t,n,r){var l=yi();r=void 0===r?null:r;var a=void 0;if(null!==ni){var i=ni.memoizedState;if(a=i.destroy,null!==r&&mi(r,i.deps))return void wi(0,n,a,r)}ci|=e,l.memoizedState=wi(t,n,a,r)}function Ti(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function Si(){}function Ci(e,t,n){if(!(25>di))throw r(Error(301));var l=e.alternate;if(e===ti||null!==l&&l===ti)if(si=!0,e={expirationTime:ei,suspenseConfig:null,action:n,eagerReducer:null,eagerState:null,next:null},null===fi&&(fi=new Map),void 0===(n=fi.get(t)))fi.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{var a=su(),i=_a.suspense;i={expirationTime:a=fu(a,e,i),suspenseConfig:i,action:n,eagerReducer:null,eagerState:null,next:null};var o=t.last;if(null===o)i.next=i;else{var u=o.next;null!==u&&(i.next=u),o.next=i}if(t.last=i,0===e.expirationTime&&(null===l||0===l.expirationTime)&&null!==(l=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=l(c,n);if(i.eagerReducer=l,i.eagerState=s,al(s,c))return}catch(f){}mu(e,a)}}var _i={readContext:ma,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useResponder:pi},Pi={readContext:ma,useCallback:function(e,t){return gi().memoizedState=[e,void 0===t?null:t],e},useContext:ma,useEffect:function(e,t){return Ei(516,192,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ei(4,36,Ti.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ei(4,36,e,t)},useMemo:function(e,t){var n=gi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=gi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Ci.bind(null,ti,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},gi().memoizedState=e},useState:function(e){var t=gi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:bi,lastRenderedState:e}).dispatch=Ci.bind(null,ti,e),[t.memoizedState,e]},useDebugValue:Si,useResponder:Za},Ni={readContext:ma,useCallback:function(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:ma,useEffect:function(e,t){return xi(516,192,e,t)},useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,xi(4,36,Ti.bind(null,t,e),n)},useLayoutEffect:function(e,t){return xi(4,36,e,t)},useMemo:function(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&mi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:ki,useRef:function(){return yi().memoizedState},useState:function(e){return ki(bi,e)},useDebugValue:Si,useResponder:Za},zi=null,Mi=null,Ui=!1;function Fi(e,t){var n=Yu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Ii(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function Ri(e){if(Ui){var t=Mi;if(t){var n=t;if(!Ii(e,t)){if(!(t=cr(n.nextSibling))||!Ii(e,t))return e.effectTag=e.effectTag&~St|Tt,Ui=!1,void(zi=e);Fi(zi,n)}zi=e,Mi=cr(t.firstChild)}else e.effectTag=e.effectTag&~St|Tt,Ui=!1,zi=e}}function Oi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;zi=e}function Di(e){if(e!==zi)return!1;if(!Ui)return Oi(e),Ui=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!ir(t,e.memoizedProps))for(t=Mi;t;)Fi(e,t),t=cr(t.nextSibling);if(Oi(e),13===e.tag)if(null===(e=null!==(e=e.memoizedState)?e.dehydrated:null))e=Mi;else e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if(n===er){if(0===t){e=cr(e.nextSibling);break e}t--}else n!==Jn&&n!==nr&&n!==tr||t++}e=e.nextSibling}e=null}else e=zi?cr(e.stateNode.nextSibling):null;return Mi=e,!0}function Li(){Mi=zi=null,Ui=!1}var Ai=M.ReactCurrentOwner,Wi=!1;function Vi(e,t,n,r){t.child=null===e?Wa(t,null,n,r):Aa(t,e.child,n,r)}function Bi(e,t,n,r,l){n=n.render;var a=t.ref;return pa(t,l),r=hi(e,t,n,r,a,l),null===e||Wi?(t.effectTag|=1,Vi(e,t,r,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),lo(e,t,l))}function ji(e,t,n,r,l,a){if(null===e){var i=n.type;return"function"!=typeof i||Xu(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ju(n.type,null,r,null,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,Hi(e,t,i,r,l,a))}return i=e.child,l<a&&(l=i.memoizedProps,(n=null!==(n=n.compare)?n:ol)(l,r)&&e.ref===t.ref)?lo(e,t,a):(t.effectTag|=1,(e=Zu(i,r,a)).ref=t.ref,e.return=t,t.child=e)}function Hi(e,t,n,r,l,a){return null!==e&&ol(e.memoizedProps,r)&&e.ref===t.ref&&(Wi=!1,l<a)?lo(e,t,a):Ki(e,t,n,r,a)}function Qi(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function Ki(e,t,n,r,l){var a=Sl(n)?xl:wl.current;return a=Tl(t,a),pa(t,l),n=hi(e,t,n,r,a,l),null===e||Wi?(t.effectTag|=1,Vi(e,t,n,l),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=l&&(e.expirationTime=0),lo(e,t,l))}function $i(e,t,n,r,l){if(Sl(n)){var a=!0;zl(t)}else a=!1;if(pa(t,l),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=Tt),Ua(t,n,r,l),Ia(t,n,r,l),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var u=i.context,c=n.contextType;"object"==typeof c&&null!==c?c=ma(c):c=Tl(t,c=Sl(n)?xl:wl.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof i.getSnapshotBeforeUpdate;f||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||u!==c)&&Fa(t,i,r,c),ha=!1;var d=t.memoizedState;u=i.state=d;var p=t.updateQueue;null!==p&&(Ta(t,p,r,i,l),u=t.memoizedState),o!==r||d!==u||El.current||ha?("function"==typeof s&&(Na(t,n,s,r),u=t.memoizedState),(o=ha||Ma(t,n,o,r,d,u,c))?(f||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.effectTag|=4)):("function"==typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=u),i.props=r,i.state=u,i.context=c,r=o):("function"==typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,o=t.memoizedProps,i.props=t.type===t.elementType?o:la(t.type,o),u=i.context,"object"==typeof(c=n.contextType)&&null!==c?c=ma(c):c=Tl(t,c=Sl(n)?xl:wl.current),(f="function"==typeof(s=n.getDerivedStateFromProps)||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||u!==c)&&Fa(t,i,r,c),ha=!1,u=t.memoizedState,d=i.state=u,null!==(p=t.updateQueue)&&(Ta(t,p,r,i,l),d=t.memoizedState),o!==r||u!==d||El.current||ha?("function"==typeof s&&(Na(t,n,s,r),d=t.memoizedState),(s=ha||Ma(t,n,o,r,u,d,c))?(f||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"==typeof i.componentDidUpdate&&(t.effectTag|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&u===e.memoizedState||(t.effectTag|=256),r=!1);return qi(e,t,n,r,a,l)}function qi(e,t,n,r,l,a){Qi(e,t);var i=(64&t.effectTag)!==xt;if(!r&&!i)return l&&Ml(t,n,!1),lo(e,t,a);r=t.stateNode,Ai.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=Aa(t,e.child,null,a),t.child=Aa(t,null,o,a)):Vi(e,t,o,a),t.memoizedState=r.state,l&&Ml(t,n,!0),t.child}function Yi(e){var t=e.stateNode;t.pendingContext?Pl(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Pl(e,t.context,!1),Ka(e,t.containerInfo)}var Xi,Gi,Zi,Ji,eo={dehydrated:null,retryTime:1};function to(e,t,n){var r,l=t.mode,a=t.pendingProps,i=Xa.current,o=!1;if((r=(64&t.effectTag)!==xt)||(r=0!=(2&i)&&(null===e||null!==e.memoizedState)),r?(o=!0,t.effectTag&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(i|=1),bl(Xa,1&i,t),null===e){if(o){if(o=a.fallback,(a=ec(null,l,0,null)).return=t,0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=ec(o,l,n,null)).return=t,a.sibling=n,t.memoizedState=eo,t.child=a,n}return l=a.children,t.memoizedState=null,t.child=Wa(t,null,l,n)}if(null!==e.memoizedState){if(l=(e=e.child).sibling,o){if(a=a.fallback,(n=Zu(e,e.pendingProps,0)).return=t,0==(2&t.mode)&&(o=null!==t.memoizedState?t.child.child:t.child)!==e.child)for(n.child=o;null!==o;)o.return=n,o=o.sibling;return(l=Zu(l,a,l.expirationTime)).return=t,n.sibling=l,n.childExpirationTime=0,t.memoizedState=eo,t.child=n,l}return n=Aa(t,e.child,a.children,n),t.memoizedState=null,t.child=n}if(e=e.child,o){if(o=a.fallback,(a=ec(null,l,0,null)).return=t,a.child=e,null!==e&&(e.return=a),0==(2&t.mode))for(e=null!==t.memoizedState?t.child.child:t.child,a.child=e;null!==e;)e.return=a,e=e.sibling;return(n=ec(o,l,n,null)).return=t,a.sibling=n,n.effectTag|=Tt,a.childExpirationTime=0,t.memoizedState=eo,t.child=a,n}return t.memoizedState=null,t.child=Aa(t,e,a.children,n)}function no(e,t,n,r,l){var a=e.memoizedState;null===a?e.memoizedState={isBackwards:t,rendering:null,last:r,tail:n,tailExpiration:0,tailMode:l}:(a.isBackwards=t,a.rendering=null,a.last=r,a.tail=n,a.tailExpiration=0,a.tailMode=l)}function ro(e,t,n){var r=t.pendingProps,l=r.revealOrder,a=r.tail;if(Vi(e,t,r.children,n),0!=(2&(r=Xa.current)))r=1&r|2,t.effectTag|=64;else{if(null!==e&&(64&e.effectTag)!==xt)e:for(e=t.child;null!==e;){if(13===e.tag){if(null!==e.memoizedState){e.expirationTime<n&&(e.expirationTime=n);var i=e.alternate;null!==i&&i.expirationTime<n&&(i.expirationTime=n),da(e.return,n)}}else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(bl(Xa,r,t),0==(2&t.mode))t.memoizedState=null;else switch(l){case"forwards":for(n=t.child,l=null;null!==n;)null!==(r=n.alternate)&&null===Ga(r)&&(l=n),n=n.sibling;null===(n=l)?(l=t.child,t.child=null):(l=n.sibling,n.sibling=null),no(t,!1,l,n,a);break;case"backwards":for(n=null,l=t.child,t.child=null;null!==l;){if(null!==(r=l.alternate)&&null===Ga(r)){t.child=l;break}r=l.sibling,l.sibling=n,n=l,l=r}no(t,!0,n,null,a);break;case"together":no(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function lo(e,t,n){null!==e&&(t.dependencies=e.dependencies);var l=t.expirationTime;if(0!==l&&zu(l),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child)throw r(Error(153));if(null!==t.child){for(n=Zu(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Zu(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function ao(e){e.effectTag|=4}function io(e,t){switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function oo(e){switch(e.tag){case 1:Sl(e.type)&&Cl(e);var t=e.effectTag;return 4096&t?(e.effectTag=-4097&t|64,e):null;case 3:if($a(e),_l(e),(64&(t=e.effectTag))!==xt)throw r(Error(285));return e.effectTag=-4097&t|64,e;case 5:return Ya(e),null;case 13:return yl(Xa,e),4096&(t=e.effectTag)?(e.effectTag=-4097&t|64,e):null;case 19:return yl(Xa,e),null;case 4:return $a(e),null;case 10:return fa(e),null;default:return null}}function uo(e,t){return{value:e,source:t,stack:G(t)}}Xi=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Gi=function(){},Zi=function(e,n,r,l,a){var i=e.memoizedProps;if(i!==l){var o,u,c=n.stateNode;switch(Qa(Ba.current),e=null,r){case"input":i=Ne(c,i),l=Ne(c,l),e=[];break;case"option":i=Oe(c,i),l=Oe(c,l),e=[];break;case"select":i=t({},i,{value:void 0}),l=t({},l,{value:void 0}),e=[];break;case"textarea":i=Le(c,i),l=Le(c,l),e=[];break;default:"function"!=typeof i.onClick&&"function"==typeof l.onClick&&(c.onclick=Kn)}for(o in jn(r,l),r=null,i)if(!l.hasOwnProperty(o)&&i.hasOwnProperty(o)&&null!=i[o])if("style"===o)for(u in c=i[o])c.hasOwnProperty(u)&&(r||(r={}),r[u]="");else"dangerouslySetInnerHTML"!==o&&"children"!==o&&"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&"autoFocus"!==o&&(s.hasOwnProperty(o)?e||(e=[]):(e=e||[]).push(o,null));for(o in l){var f=l[o];if(c=null!=i?i[o]:void 0,l.hasOwnProperty(o)&&f!==c&&(null!=f||null!=c))if("style"===o)if(c){for(u in c)!c.hasOwnProperty(u)||f&&f.hasOwnProperty(u)||(r||(r={}),r[u]="");for(u in f)f.hasOwnProperty(u)&&c[u]!==f[u]&&(r||(r={}),r[u]=f[u])}else r||(e||(e=[]),e.push(o,r)),r=f;else"dangerouslySetInnerHTML"===o?(f=f?f.__html:void 0,c=c?c.__html:void 0,null!=f&&c!==f&&(e=e||[]).push(o,""+f)):"children"===o?c===f||"string"!=typeof f&&"number"!=typeof f||(e=e||[]).push(o,""+f):"suppressContentEditableWarning"!==o&&"suppressHydrationWarning"!==o&&(s.hasOwnProperty(o)?(null!=f&&Qn(a,o),e||c===f||(e=[])):(e=e||[]).push(o,f))}r&&(e=e||[]).push("style",r),a=e,(n.updateQueue=a)&&ao(n)}},Ji=function(e,t,n,r){n!==r&&ao(t)};var co="function"==typeof WeakSet?WeakSet:Set;function so(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=G(n)),null!==n&&X(n.type),t=t.value,null!==e&&1===e.tag&&X(e.type);try{console.error(t)}catch(l){setTimeout(function(){throw l})}}function fo(e,t){try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(n){Bu(e,n)}}function po(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(n){Bu(e,n)}else t.current=null}function mo(e,t){switch(t.tag){case 0:case 11:case 15:ho(2,0,t);break;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,l=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:la(t.type,n),l),e.__reactInternalSnapshotBeforeUpdate=t}break;case 3:case 5:case 6:case 4:case 17:break;default:throw r(Error(163))}}function ho(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if(0!=(r.tag&e)){var l=r.destroy;r.destroy=void 0,void 0!==l&&l()}0!=(r.tag&t)&&(l=r.create,r.destroy=l()),r=r.next}while(r!==n)}}function vo(e,t,n){switch("function"==typeof Ku&&Ku(t),t.tag){case 0:case 11:case 14:case 15:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var r=e.next;Jl(97<n?97:n,function(){var e=r;do{var n=e.destroy;if(void 0!==n){var l=t;try{n()}catch(a){Bu(l,a)}}e=e.next}while(e!==r)})}break;case 1:po(t),"function"==typeof(n=t.stateNode).componentWillUnmount&&fo(t,n);break;case 5:po(t);break;case 4:ko(e,t,n)}}function go(e){var t=e.alternate;e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.alternate=null,e.firstEffect=null,e.lastEffect=null,e.pendingProps=null,e.memoizedProps=null,null!==t&&go(t)}function yo(e){return 5===e.tag||3===e.tag||4===e.tag}function bo(e){e:{for(var t=e.return;null!==t;){if(yo(t)){var n=t;break e}t=t.return}throw r(Error(160))}switch(t=n.stateNode,n.tag){case 5:var l=!1;break;case 3:case 4:t=t.containerInfo,l=!0;break;default:throw r(Error(161))}16&n.effectTag&&($e(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||yo(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(n.effectTag&Tt)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(n.effectTag&Tt)){n=n.stateNode;break e}}for(var a=e;;){var i=5===a.tag||6===a.tag;if(i){var o=i?a.stateNode:a.stateNode.instance;if(n)if(l){var u=o;o=n,8===(i=t).nodeType?i.parentNode.insertBefore(u,o):i.insertBefore(u,o)}else t.insertBefore(o,n);else l?(8===(u=t).nodeType?(i=u.parentNode).insertBefore(o,u):(i=u).appendChild(o),null!=(u=u._reactRootContainer)||null!==i.onclick||(i.onclick=Kn)):t.appendChild(o)}else if(4!==a.tag&&null!==a.child){a.child.return=a,a=a.child;continue}if(a===e)break;for(;null===a.sibling;){if(null===a.return||a.return===e)return;a=a.return}a.sibling.return=a.return,a=a.sibling}}function ko(e,t,n){for(var l,a,i=t,o=!1;;){if(!o){o=i.return;e:for(;;){if(null===o)throw r(Error(160));switch(l=o.stateNode,o.tag){case 5:a=!1;break e;case 3:case 4:l=l.containerInfo,a=!0;break e}o=o.return}o=!0}if(5===i.tag||6===i.tag){e:for(var u=e,c=i,s=n,f=c;;)if(vo(u,f,s),null!==f.child&&4!==f.tag)f.child.return=f,f=f.child;else{if(f===c)break;for(;null===f.sibling;){if(null===f.return||f.return===c)break e;f=f.return}f.sibling.return=f.return,f=f.sibling}a?(u=l,c=i.stateNode,8===u.nodeType?u.parentNode.removeChild(c):u.removeChild(c)):l.removeChild(i.stateNode)}else if(4===i.tag){if(null!==i.child){l=i.stateNode.containerInfo,a=!0,i.child.return=i,i=i.child;continue}}else if(vo(e,i,n),null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)return;4===(i=i.return).tag&&(o=!1)}i.sibling.return=i.return,i=i.sibling}}function wo(e,t){switch(t.tag){case 0:case 11:case 14:case 15:ho(4,8,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var l=t.memoizedProps,a=null!==e?e.memoizedProps:l;e=t.type;var i=t.updateQueue;if(t.updateQueue=null,null!==i){for(n[pr]=l,"input"===e&&"radio"===l.type&&null!=l.name&&Me(n,l),Hn(e,a),t=Hn(e,l),a=0;a<i.length;a+=2){var o=i[a],u=i[a+1];"style"===o?Vn(n,u):"dangerouslySetInnerHTML"===o?Ke(n,u):"children"===o?$e(n,u):Te(n,o,u,t)}switch(e){case"input":Ue(n,l);break;case"textarea":We(n,l);break;case"select":t=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!l.multiple,null!=(e=l.value)?De(n,!!l.multiple,e,!1):t!==!!l.multiple&&(null!=l.defaultValue?De(n,!!l.multiple,l.defaultValue,!0):De(n,!!l.multiple,l.multiple?[]:"",!1))}}}break;case 6:if(null===t.stateNode)throw r(Error(162));t.stateNode.nodeValue=t.memoizedProps;break;case 3:(t=t.stateNode).hydrate&&(t.hydrate=!1,Et(t.containerInfo));break;case 12:break;case 13:if(n=t,null===t.memoizedState?l=!1:(l=!0,n=t.child,Go=Xl()),null!==n)e:for(e=n;;){if(5===e.tag)i=e.stateNode,l?"function"==typeof(i=i.style).setProperty?i.setProperty("display","none","important"):i.display="none":(i=e.stateNode,a=null!=(a=e.memoizedProps.style)&&a.hasOwnProperty("display")?a.display:null,i.style.display=Wn("display",a));else if(6===e.tag)e.stateNode.nodeValue=l?"":e.memoizedProps;else{if(13===e.tag&&null!==e.memoizedState&&null===e.memoizedState.dehydrated){(i=e.child.sibling).return=e,e=i;continue}if(null!==e.child){e.child.return=e,e=e.child;continue}}if(e===n)break e;for(;null===e.sibling;){if(null===e.return||e.return===n)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}Eo(t);break;case 19:Eo(t);break;case 17:case 20:case 21:break;default:throw r(Error(163))}}function Eo(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new co),t.forEach(function(t){var r=Hu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))})}}var xo="function"==typeof WeakMap?WeakMap:Map;function To(e,t,n){(n=ya(n,null)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){eu||(eu=!0,tu=r),so(e,t)},n}function So(e,t,n){(n=ya(n,null)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var l=t.value;n.payload=function(){return so(e,t),r(l)}}var a=e.stateNode;return null!==a&&"function"==typeof a.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===nu?nu=new Set([this]):nu.add(this),so(e,t));var n=t.stack;this.componentDidCatch(t.value,{componentStack:null!==n?n:""})}),n}var Co=Math.ceil,_o=M.ReactCurrentDispatcher,Po=M.ReactCurrentOwner,No=0,zo=8,Mo=16,Uo=32,Fo=0,Io=1,Ro=2,Oo=3,Do=4,Lo=5,Ao=6,Wo=No,Vo=null,Bo=null,jo=0,Ho=Fo,Qo=null,Ko=1073741823,$o=1073741823,qo=null,Yo=0,Xo=!1,Go=0,Zo=500,Jo=null,eu=!1,tu=null,nu=null,ru=!1,lu=null,au=90,iu=null,ou=0,uu=null,cu=0;function su(){return(Wo&(Mo|Uo))!==No?1073741821-(Xl()/10|0):0!==cu?cu:cu=1073741821-(Xl()/10|0)}function fu(e,t,n){if(0==(2&(t=t.mode)))return 1073741823;var l=Gl();if(0==(4&t))return 99===l?1073741823:1073741822;if((Wo&Mo)!==No)return jo;if(null!==n)e=1073741821-25*(1+((1073741821-e+(0|n.timeoutMs||5e3)/10)/25|0));else switch(l){case 99:e=1073741823;break;case 98:e=1073741821-10*(1+((1073741821-e+15)/10|0));break;case 97:case 96:e=1073741821-25*(1+((1073741821-e+500)/25|0));break;case 95:e=2;break;default:throw r(Error(326))}return null!==Vo&&e===jo&&--e,e}var du,pu=0;function mu(e,t){if(50<ou)throw ou=0,uu=null,r(Error(185));if(null!==(e=hu(e,t))){var n=Gl();1073741823===t?(Wo&zo)!==No&&(Wo&(Mo|Uo))===No?bu(e):(gu(e),Wo===No&&na()):gu(e),(4&Wo)===No||98!==n&&99!==n||(null===iu?iu=new Map([[e,t]]):(void 0===(n=iu.get(e))||n>t)&&iu.set(e,t))}}function hu(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,l=null;if(null===r&&3===e.tag)l=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){l=r.stateNode;break}r=r.return}return null!==l&&(Vo===l&&(zu(t),Ho===Do&&ac(l,jo)),ic(l,t)),l}function vu(e){var t=e.lastExpiredTime;return 0!==t?t:lc(e,t=e.firstPendingTime)?(t=e.lastPingedTime)>(e=e.nextKnownPendingLevel)?t:e:t}function gu(e){if(0!==e.lastExpiredTime)e.callbackExpirationTime=1073741823,e.callbackPriority=99,e.callbackNode=ta(bu.bind(null,e));else{var t=vu(e),n=e.callbackNode;if(0===t)null!==n&&(e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90);else{var r=su();if(1073741823===t?r=99:1===t||2===t?r=95:r=0>=(r=10*(1073741821-t)-10*(1073741821-r))?99:250>=r?98:5250>=r?97:95,null!==n){var l=e.callbackPriority;if(e.callbackExpirationTime===t&&l>=r)return;n!==Hl&&Il(n)}e.callbackExpirationTime=t,e.callbackPriority=r,t=1073741823===t?ta(bu.bind(null,e)):ea(r,yu.bind(null,e),{timeout:10*(1073741821-t)-Xl()}),e.callbackNode=t}}}function yu(e,t){if(cu=0,t)return oc(e,t=su()),gu(e),null;var n=vu(e);if(0!==n){if(t=e.callbackNode,(Wo&(Mo|Uo))!==No)throw r(Error(327));if(Au(),e===Vo&&n===jo||Cu(e,n),null!==Bo){var l=Wo;Wo|=Mo;for(var a=Pu(e);;)try{Uu();break}catch(u){_u(e,u)}if(ca(),Wo=l,_o.current=a,Ho===Io)throw t=Qo,Cu(e,n),ac(e,n),gu(e),t;if(null===Bo)switch(a=e.finishedWork=e.current.alternate,e.finishedExpirationTime=n,wu(e,n),l=Ho,Vo=null,l){case Fo:case Io:throw r(Error(345));case Ro:if(2!==n){oc(e,2);break}Ou(e);break;case Oo:if(ac(e,n),n===(l=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Ru(a)),1073741823===Ko&&10<(a=Go+Zo-Xl())){if(Xo){var i=e.lastPingedTime;if(0===i||i>=n){e.lastPingedTime=n,Cu(e,n);break}}if(0!==(i=vu(e))&&i!==n)break;if(0!==l&&l!==n){e.lastPingedTime=l;break}e.timeoutHandle=or(Ou.bind(null,e),a);break}Ou(e);break;case Do:if(ac(e,n),n===(l=e.lastSuspendedTime)&&(e.nextKnownPendingLevel=Ru(a)),Xo&&(0===(a=e.lastPingedTime)||a>=n)){e.lastPingedTime=n,Cu(e,n);break}if(0!==(a=vu(e))&&a!==n)break;if(0!==l&&l!==n){e.lastPingedTime=l;break}if(1073741823!==$o?l=10*(1073741821-$o)-Xl():1073741823===Ko?l=0:(l=10*(1073741821-Ko)-5e3,0>(l=(a=Xl())-l)&&(l=0),(n=10*(1073741821-n)-a)<(l=(120>l?120:480>l?480:1080>l?1080:1920>l?1920:3e3>l?3e3:4320>l?4320:1960*Co(l/1960))-l)&&(l=n)),10<l){e.timeoutHandle=or(Ou.bind(null,e),l);break}Ou(e);break;case Lo:if(1073741823!==Ko&&null!==qo){i=Ko;var o=qo;if(0>=(l=0|o.busyMinDurationMs)?l=0:(a=0|o.busyDelayMs,l=(i=Xl()-(10*(1073741821-i)-(0|o.timeoutMs||5e3)))<=a?0:a+l-i),10<l){ac(e,n),e.timeoutHandle=or(Ou.bind(null,e),l);break}}Ou(e);break;case Ao:ac(e,n);break;default:throw r(Error(329))}if(gu(e),e.callbackNode===t)return yu.bind(null,e)}}return null}function bu(e){var t=e.lastExpiredTime;if(t=0!==t?t:1073741823,e.finishedExpirationTime===t)Ou(e);else{if((Wo&(Mo|Uo))!==No)throw r(Error(327));if(Au(),e===Vo&&t===jo||Cu(e,t),null!==Bo){var n=Wo;Wo|=Mo;for(var l=Pu(e);;)try{Mu();break}catch(a){_u(e,a)}if(ca(),Wo=n,_o.current=l,Ho===Io)throw n=Qo,Cu(e,t),ac(e,t),gu(e),n;if(null!==Bo)throw r(Error(261));e.finishedWork=e.current.alternate,e.finishedExpirationTime=t,wu(e,t),Ho===Ao?ac(e,t):(Vo=null,Ou(e)),gu(e)}}return null}function ku(){(Wo&(1|Mo|Uo))===No&&(Eu(),Au())}function wu(e,t){var n=e.firstBatch;null!==n&&n._defer&&n._expirationTime>=t&&(ea(97,function(){return n._onComplete(),null}),Ho=Ao)}function Eu(){if(null!==iu){var e=iu;iu=null,e.forEach(function(e,t){oc(t,e),gu(t)}),na()}}function xu(e,t){var n=Wo;Wo|=1;try{return e(t)}finally{(Wo=n)===No&&na()}}function Tu(e,t,n,r){var l=Wo;Wo|=4;try{return Jl(98,e.bind(null,t,n,r))}finally{(Wo=l)===No&&na()}}function Su(e,t){var n=Wo;Wo&=-2,Wo|=zo;try{return e(t)}finally{(Wo=n)===No&&na()}}function Cu(e,t){e.finishedWork=null,e.finishedExpirationTime=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,ur(n)),null!==Bo)for(n=Bo.return;null!==n;){var r=n;switch(r.tag){case 1:var l=r.type.childContextTypes;null!=l&&Cl(r);break;case 3:$a(r),_l(r);break;case 5:Ya(r);break;case 4:$a(r);break;case 13:case 19:yl(Xa,r);break;case 10:fa(r)}n=n.return}Vo=e,Bo=Zu(e.current,null,t),jo=t,Ho=Fo,Qo=null,$o=Ko=1073741823,qo=null,Yo=0,Xo=!1}function _u(e,t){for(;;){try{if(ca(),vi(),null===Bo||null===Bo.return)return Ho=Io,Qo=t,null;e:{var n=e,r=Bo.return,l=Bo,a=t;if(t=jo,l.effectTag|=2048,l.firstEffect=l.lastEffect=null,null!==a&&"object"==typeof a&&"function"==typeof a.then){var i=a,o=0!=(1&Xa.current),u=r;do{var c;if(c=13===u.tag){var s=u.memoizedState;if(null!==s)c=null!==s.dehydrated;else{var f=u.memoizedProps;c=void 0!==f.fallback&&(!0!==f.unstable_avoidThisFallback||!o)}}if(c){var d=u.updateQueue;if(null===d){var p=new Set;p.add(i),u.updateQueue=p}else d.add(i);if(0==(2&u.mode)){if(u.effectTag|=64,l.effectTag&=-2981,1===l.tag)if(null===l.alternate)l.tag=17;else{var m=ya(1073741823,null);m.tag=2,ka(l,m)}l.expirationTime=1073741823;break e}a=void 0,l=t;var h=n.pingCache;if(null===h?(h=n.pingCache=new xo,a=new Set,h.set(i,a)):void 0===(a=h.get(i))&&(a=new Set,h.set(i,a)),!a.has(l)){a.add(l);var v=ju.bind(null,n,i,l);i.then(v,v)}u.effectTag|=4096,u.expirationTime=t;break e}u=u.return}while(null!==u);a=Error((X(l.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+G(l))}Ho!==Lo&&(Ho=Ro),a=uo(a,l),u=r;do{switch(u.tag){case 3:i=a,u.effectTag|=4096,u.expirationTime=t,wa(u,To(u,i,t));break e;case 1:i=a;var g=u.type,y=u.stateNode;if((64&u.effectTag)===xt&&("function"==typeof g.getDerivedStateFromError||null!==y&&"function"==typeof y.componentDidCatch&&(null===nu||!nu.has(y)))){u.effectTag|=4096,u.expirationTime=t,wa(u,So(u,i,t));break e}}u=u.return}while(null!==u)}Bo=Iu(Bo)}catch(b){t=b;continue}break}}function Pu(){var e=_o.current;return _o.current=_i,null===e?_i:e}function Nu(e,t){e<Ko&&2<e&&(Ko=e),null!==t&&e<$o&&2<e&&($o=e,qo=t)}function zu(e){e>Yo&&(Yo=e)}function Mu(){for(;null!==Bo;)Bo=Fu(Bo)}function Uu(){for(;null!==Bo&&!Rl();)Bo=Fu(Bo)}function Fu(e){var t=du(e.alternate,e,jo);return e.memoizedProps=e.pendingProps,null===t&&(t=Iu(e)),Po.current=null,t}function Iu(e){Bo=e;do{var n=Bo.alternate;if(e=Bo.return,(2048&Bo.effectTag)===xt){e:{var l=n,a=jo,i=(n=Bo).pendingProps;switch(n.tag){case 2:case 16:break;case 15:case 0:break;case 1:Sl(n.type)&&Cl(n);break;case 3:$a(n),_l(n),(a=n.stateNode).pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(null===l||null===l.child)&&Di(n)&&ao(n),Gi(n);break;case 5:Ya(n),a=Qa(Ha.current);var o=n.type;if(null!==l&&null!=n.stateNode)Zi(l,n,o,i,a),l.ref!==n.ref&&(n.effectTag|=128);else if(i){var u=Qa(Ba.current);if(Di(n)){o=void 0,l=(i=n).stateNode;var c=i.type,f=i.memoizedProps;switch(l[dr]=i,l[pr]=f,c){case"iframe":case"object":case"embed":_n("load",l);break;case"video":case"audio":for(var d=0;d<rt.length;d++)_n(rt[d],l);break;case"source":_n("error",l);break;case"img":case"image":case"link":_n("error",l),_n("load",l);break;case"form":_n("reset",l),_n("submit",l);break;case"details":_n("toggle",l);break;case"input":ze(l,f),_n("invalid",l),Qn(a,"onChange");break;case"select":l._wrapperState={wasMultiple:!!f.multiple},_n("invalid",l),Qn(a,"onChange");break;case"textarea":Ae(l,f),_n("invalid",l),Qn(a,"onChange")}for(o in jn(c,f),d=null,f)f.hasOwnProperty(o)&&(u=f[o],"children"===o?"string"==typeof u?l.textContent!==u&&(d=["children",u]):"number"==typeof u&&l.textContent!==""+u&&(d=["children",""+u]):s.hasOwnProperty(o)&&null!=u&&Qn(a,o));switch(c){case"input":_e(l),Fe(l,f,!0);break;case"textarea":_e(l),Ve(l,f);break;case"select":case"option":break;default:"function"==typeof f.onClick&&(l.onclick=Kn)}a=d,i.updateQueue=a,null!==a&&ao(n)}else{f=o,l=i,c=n,d=9===a.nodeType?a:a.ownerDocument,u===Be.html&&(u=je(f)),u===Be.html?"script"===f?((f=d.createElement("div")).innerHTML="<script><\/script>",d=f.removeChild(f.firstChild)):"string"==typeof l.is?d=d.createElement(f,{is:l.is}):(d=d.createElement(f),"select"===f&&(f=d,l.multiple?f.multiple=!0:l.size&&(f.size=l.size))):d=d.createElementNS(u,f),(f=d)[dr]=c,f[pr]=l,Xi(l=f,n,!1,!1),n.stateNode=l,u=a;var p=Hn(o,i);switch(o){case"iframe":case"object":case"embed":_n("load",l),a=i;break;case"video":case"audio":for(a=0;a<rt.length;a++)_n(rt[a],l);a=i;break;case"source":_n("error",l),a=i;break;case"img":case"image":case"link":_n("error",l),_n("load",l),a=i;break;case"form":_n("reset",l),_n("submit",l),a=i;break;case"details":_n("toggle",l),a=i;break;case"input":ze(l,i),a=Ne(l,i),_n("invalid",l),Qn(u,"onChange");break;case"option":a=Oe(l,i);break;case"select":l._wrapperState={wasMultiple:!!i.multiple},a=t({},i,{value:void 0}),_n("invalid",l),Qn(u,"onChange");break;case"textarea":Ae(l,i),a=Le(l,i),_n("invalid",l),Qn(u,"onChange");break;default:a=i}jn(o,a),c=void 0,f=o,d=l;var m=a;for(c in m)if(m.hasOwnProperty(c)){var h=m[c];"style"===c?Vn(d,h):"dangerouslySetInnerHTML"===c?null!=(h=h?h.__html:void 0)&&Ke(d,h):"children"===c?"string"==typeof h?("textarea"!==f||""!==h)&&$e(d,h):"number"==typeof h&&$e(d,""+h):"suppressContentEditableWarning"!==c&&"suppressHydrationWarning"!==c&&"autoFocus"!==c&&(s.hasOwnProperty(c)?null!=h&&Qn(u,c):null!=h&&Te(d,c,h,p))}switch(o){case"input":_e(l),Fe(l,i,!1);break;case"textarea":_e(l),Ve(l,i);break;case"option":null!=i.value&&l.setAttribute("value",""+xe(i.value));break;case"select":a=l,l=i,a.multiple=!!l.multiple,null!=(c=l.value)?De(a,!!l.multiple,c,!1):null!=l.defaultValue&&De(a,!!l.multiple,l.defaultValue,!0);break;default:"function"==typeof a.onClick&&(l.onclick=Kn)}ar(o,i)&&ao(n)}null!==n.ref&&(n.effectTag|=128)}else if(null===n.stateNode)throw r(Error(166));break;case 6:if(l&&null!=n.stateNode)Ji(l,n,l.memoizedProps,i);else{if("string"!=typeof i&&null===n.stateNode)throw r(Error(166));o=Qa(Ha.current),Qa(Ba.current),Di(n)?(a=n.stateNode,i=n.memoizedProps,a[dr]=n,a.nodeValue!==i&&ao(n)):(a=n,(i=(9===o.nodeType?o:o.ownerDocument).createTextNode(i))[dr]=n,a.stateNode=i)}break;case 11:break;case 13:if(yl(Xa,n),i=n.memoizedState,(64&n.effectTag)!==xt){n.expirationTime=a;break e}a=null!==i,i=!1,null===l?Di(n):(i=null!==(o=l.memoizedState),a||null===o||null!==(o=l.child.sibling)&&(null!==(c=n.firstEffect)?(n.firstEffect=o,o.nextEffect=c):(n.firstEffect=n.lastEffect=o,o.nextEffect=null),o.effectTag=8)),a&&!i&&0!=(2&n.mode)&&(null===l&&!0!==n.memoizedProps.unstable_avoidThisFallback||0!=(1&Xa.current)?Ho===Fo&&(Ho=Oo):(Ho!==Fo&&Ho!==Oo||(Ho=Do),0!==Yo&&null!==Vo&&(ac(Vo,jo),ic(Vo,Yo)))),(a||i)&&(n.effectTag|=4);break;case 7:case 8:case 12:break;case 4:$a(n),Gi(n);break;case 10:fa(n);break;case 9:case 14:break;case 17:Sl(n.type)&&Cl(n);break;case 19:if(yl(Xa,n),null===(i=n.memoizedState))break;if(o=(64&n.effectTag)!==xt,null===(c=i.rendering)){if(o)io(i,!1);else if(Ho!==Fo||null!==l&&(64&l.effectTag)!==xt)for(l=n.child;null!==l;){if(null!==(c=Ga(l))){for(n.effectTag|=64,io(i,!1),null!==(i=c.updateQueue)&&(n.updateQueue=i,n.effectTag|=4),n.firstEffect=n.lastEffect=null,i=n.child;null!==i;)l=a,(o=i).effectTag&=Tt,o.nextEffect=null,o.firstEffect=null,o.lastEffect=null,null===(c=o.alternate)?(o.childExpirationTime=0,o.expirationTime=l,o.child=null,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null):(o.childExpirationTime=c.childExpirationTime,o.expirationTime=c.expirationTime,o.child=c.child,o.memoizedProps=c.memoizedProps,o.memoizedState=c.memoizedState,o.updateQueue=c.updateQueue,l=c.dependencies,o.dependencies=null===l?null:{expirationTime:l.expirationTime,firstContext:l.firstContext,responders:l.responders}),i=i.sibling;bl(Xa,1&Xa.current|2,n),n=n.child;break e}l=l.sibling}}else{if(!o)if(null!==(l=Ga(c))){if(n.effectTag|=64,o=!0,io(i,!0),null===i.tail&&"hidden"===i.tailMode){null!==(a=l.updateQueue)&&(n.updateQueue=a,n.effectTag|=4),null!==(n=n.lastEffect=i.lastEffect)&&(n.nextEffect=null);break}}else Xl()>i.tailExpiration&&1<a&&(n.effectTag|=64,o=!0,io(i,!1),n.expirationTime=n.childExpirationTime=a-1);i.isBackwards?(c.sibling=n.child,n.child=c):(null!==(a=i.last)?a.sibling=c:n.child=c,i.last=c)}if(null!==i.tail){0===i.tailExpiration&&(i.tailExpiration=Xl()+500),a=i.tail,i.rendering=a,i.tail=a.sibling,i.lastEffect=n.lastEffect,a.sibling=null,i=Xa.current,bl(Xa,i=o?1&i|2:1&i,n),n=a;break e}break;case 20:case 21:break;default:throw r(Error(156),n.tag)}n=null}if(a=Bo,1===jo||1!==a.childExpirationTime){for(i=0,o=a.child;null!==o;)(l=o.expirationTime)>i&&(i=l),(c=o.childExpirationTime)>i&&(i=c),o=o.sibling;a.childExpirationTime=i}if(null!==n)return n;null!==e&&(2048&e.effectTag)===xt&&(null===e.firstEffect&&(e.firstEffect=Bo.firstEffect),null!==Bo.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=Bo.firstEffect),e.lastEffect=Bo.lastEffect),1<Bo.effectTag&&(null!==e.lastEffect?e.lastEffect.nextEffect=Bo:e.firstEffect=Bo,e.lastEffect=Bo))}else{if(null!==(n=oo(Bo,jo)))return n.effectTag&=2047,n;null!==e&&(e.firstEffect=e.lastEffect=null,e.effectTag|=2048)}if(null!==(n=Bo.sibling))return n;Bo=e}while(null!==Bo);return Ho===Fo&&(Ho=Lo),null}function Ru(e){var t=e.expirationTime;return t>(e=e.childExpirationTime)?t:e}function Ou(e){var t=Gl();return Jl(99,Du.bind(null,e,t)),null}function Du(e,t){if(Au(),(Wo&(Mo|Uo))!==No)throw r(Error(327));var n=e.finishedWork,l=e.finishedExpirationTime;if(null===n)return null;if(e.finishedWork=null,e.finishedExpirationTime=0,n===e.current)throw r(Error(177));e.callbackNode=null,e.callbackExpirationTime=0,e.callbackPriority=90,e.nextKnownPendingLevel=0;var a=Ru(n);if(e.firstPendingTime=a,l<=e.lastSuspendedTime?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:l<=e.firstSuspendedTime&&(e.firstSuspendedTime=l-1),l<=e.lastPingedTime&&(e.lastPingedTime=0),l<=e.lastExpiredTime&&(e.lastExpiredTime=0),e===Vo&&(Bo=Vo=null,jo=0),1<n.effectTag?null!==n.lastEffect?(n.lastEffect.nextEffect=n,a=n.firstEffect):a=n:a=n.firstEffect,null!==a){var i=Wo;Wo|=Uo,Po.current=null,rr=Cn;var o=Gn();if(Zn(o)){if("selectionStart"in o)var u={start:o.selectionStart,end:o.selectionEnd};else e:{var c=(u=(u=o.ownerDocument)&&u.defaultView||window).getSelection&&u.getSelection();if(c&&0!==c.rangeCount){u=c.anchorNode;var s=c.anchorOffset,f=c.focusNode;c=c.focusOffset;try{u.nodeType,f.nodeType}catch(O){u=null;break e}var d=0,p=-1,m=-1,h=0,v=0,g=o,y=null;t:for(;;){for(var b;g!==u||0!==s&&3!==g.nodeType||(p=d+s),g!==f||0!==c&&3!==g.nodeType||(m=d+c),3===g.nodeType&&(d+=g.nodeValue.length),null!==(b=g.firstChild);)y=g,g=b;for(;;){if(g===o)break t;if(y===u&&++h===s&&(p=d),y===f&&++v===c&&(m=d),null!==(b=g.nextSibling))break;y=(g=y).parentNode}g=b}u=-1===p||-1===m?null:{start:p,end:m}}else u=null}u=u||{start:0,end:0}}else u=null;lr={focusedElem:o,selectionRange:u},Cn=!1,Jo=a;do{try{Lu()}catch(O){if(null===Jo)throw r(Error(330));Bu(Jo,O),Jo=Jo.nextEffect}}while(null!==Jo);Jo=a;do{try{for(o=e,u=t;null!==Jo;){var k=Jo.effectTag;if(16&k&&$e(Jo.stateNode,""),128&k){var w=Jo.alternate;if(null!==w){var E=w.ref;null!==E&&("function"==typeof E?E(null):E.current=null)}}switch(k&(12|Tt|St)){case Tt:bo(Jo),Jo.effectTag&=~Tt;break;case 6:bo(Jo),Jo.effectTag&=~Tt,wo(Jo.alternate,Jo);break;case St:Jo.effectTag&=~St;break;case 1028:Jo.effectTag&=~St,wo(Jo.alternate,Jo);break;case 4:wo(Jo.alternate,Jo);break;case 8:ko(o,s=Jo,u),go(s)}Jo=Jo.nextEffect}}catch(O){if(null===Jo)throw r(Error(330));Bu(Jo,O),Jo=Jo.nextEffect}}while(null!==Jo);if(E=lr,w=Gn(),k=E.focusedElem,u=E.selectionRange,w!==k&&k&&k.ownerDocument&&Xn(k.ownerDocument.documentElement,k)){null!==u&&Zn(k)&&(w=u.start,void 0===(E=u.end)&&(E=w),"selectionStart"in k?(k.selectionStart=w,k.selectionEnd=Math.min(E,k.value.length)):(E=(w=k.ownerDocument||document)&&w.defaultView||window).getSelection&&(E=E.getSelection(),s=k.textContent.length,o=Math.min(u.start,s),u=void 0===u.end?o:Math.min(u.end,s),!E.extend&&o>u&&(s=u,u=o,o=s),s=Yn(k,o),f=Yn(k,u),s&&f&&(1!==E.rangeCount||E.anchorNode!==s.node||E.anchorOffset!==s.offset||E.focusNode!==f.node||E.focusOffset!==f.offset)&&((w=w.createRange()).setStart(s.node,s.offset),E.removeAllRanges(),o>u?(E.addRange(w),E.extend(f.node,f.offset)):(w.setEnd(f.node,f.offset),E.addRange(w))))),w=[];for(E=k;E=E.parentNode;)1===E.nodeType&&w.push({element:E,left:E.scrollLeft,top:E.scrollTop});for("function"==typeof k.focus&&k.focus(),k=0;k<w.length;k++)(E=w[k]).element.scrollLeft=E.left,E.element.scrollTop=E.top}lr=null,Cn=!!rr,rr=null,e.current=n,Jo=a;do{try{for(k=l;null!==Jo;){var x=Jo.effectTag;if(36&x){var T=Jo.alternate;switch(E=k,(w=Jo).tag){case 0:case 11:case 15:ho(16,32,w);break;case 1:var S=w.stateNode;if(4&w.effectTag)if(null===T)S.componentDidMount();else{var C=w.elementType===w.type?T.memoizedProps:la(w.type,T.memoizedProps);S.componentDidUpdate(C,T.memoizedState,S.__reactInternalSnapshotBeforeUpdate)}var _=w.updateQueue;null!==_&&Sa(w,_,S,E);break;case 3:var P=w.updateQueue;if(null!==P){if(o=null,null!==w.child)switch(w.child.tag){case 5:o=w.child.stateNode;break;case 1:o=w.child.stateNode}Sa(w,P,o,E)}break;case 5:var N=w.stateNode;null===T&&4&w.effectTag&&(E=N,ar(w.type,w.memoizedProps)&&E.focus());break;case 6:case 4:case 12:break;case 13:if(null===w.memoizedState){var z=w.alternate;if(null!==z){var M=z.memoizedState;if(null!==M){var U=M.dehydrated;null!==U&&Et(U)}}}break;case 19:case 17:case 20:case 21:break;default:throw r(Error(163))}}if(128&x){var F=(w=Jo).ref;if(null!==F){var I=w.stateNode;switch(w.tag){case 5:var R=I;break;default:R=I}"function"==typeof F?F(R):F.current=R}}Jo=Jo.nextEffect}}catch(O){if(null===Jo)throw r(Error(330));Bu(Jo,O),Jo=Jo.nextEffect}}while(null!==Jo);Jo=null,Ql(),Wo=i}else e.current=n;if(ru)ru=!1,lu=e,au=t;else for(Jo=a;null!==Jo;)t=Jo.nextEffect,Jo.nextEffect=null,Jo=t;if(0===(t=e.firstPendingTime)&&(nu=null),1073741823===t?e===uu?ou++:(ou=0,uu=e):ou=0,"function"==typeof Qu&&Qu(n.stateNode,l),gu(e),eu)throw eu=!1,e=tu,tu=null,e;return(Wo&zo)!==No?null:(na(),null)}function Lu(){for(;null!==Jo;){var e=Jo.effectTag;(256&e)!==xt&&mo(Jo.alternate,Jo),(512&e)===xt||ru||(ru=!0,ea(97,function(){return Au(),null})),Jo=Jo.nextEffect}}function Au(){if(90!==au){var e=97<au?97:au;return au=90,Jl(e,Wu)}}function Wu(){if(null===lu)return!1;var e=lu;if(lu=null,(Wo&(Mo|Uo))!==No)throw r(Error(331));var t=Wo;for(Wo|=Uo,e=e.current.firstEffect;null!==e;){try{var n=e;if((512&n.effectTag)!==xt)switch(n.tag){case 0:case 11:case 15:ho(128,0,n),ho(0,64,n)}}catch(l){if(null===e)throw r(Error(330));Bu(e,l)}n=e.nextEffect,e.nextEffect=null,e=n}return Wo=t,na(),!0}function Vu(e,t,n){ka(e,t=To(e,t=uo(n,t),1073741823)),null!==(e=hu(e,1073741823))&&gu(e)}function Bu(e,t){if(3===e.tag)Vu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Vu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===nu||!nu.has(r))){ka(n,e=So(n,e=uo(t,e),1073741823)),null!==(n=hu(n,1073741823))&&gu(n);break}}n=n.return}}function ju(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),Vo===e&&jo===n?Ho===Do||Ho===Oo&&1073741823===Ko&&Xl()-Go<Zo?Cu(e,jo):Xo=!0:lc(e,n)&&(0!==(t=e.lastPingedTime)&&t<n||(e.lastPingedTime=n,e.finishedExpirationTime===n&&(e.finishedExpirationTime=0,e.finishedWork=null),gu(e)))}function Hu(e,t){var n=e.stateNode;null!==n&&n.delete(t),1===(t=1)&&(t=fu(t=su(),e,null)),null!==(e=hu(e,t))&&gu(e)}du=function(e,t,n){var l=t.expirationTime;if(null!==e){var a=t.pendingProps;if(e.memoizedProps!==a||El.current)Wi=!0;else{if(l<n){switch(Wi=!1,t.tag){case 3:Yi(t),Li();break;case 5:if(qa(t),4&t.mode&&1!==n&&a.hidden)return t.expirationTime=t.childExpirationTime=1,null;break;case 1:Sl(t.type)&&zl(t);break;case 4:Ka(t,t.stateNode.containerInfo);break;case 10:sa(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(l=t.child.childExpirationTime)&&l>=n?to(e,t,n):(bl(Xa,1&Xa.current,t),null!==(t=lo(e,t,n))?t.sibling:null);bl(Xa,1&Xa.current,t);break;case 19:if(l=t.childExpirationTime>=n,(64&e.effectTag)!==xt){if(l)return ro(e,t,n);t.effectTag|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null),bl(Xa,Xa.current,t),!l)return null}return lo(e,t,n)}Wi=!1}}else Wi=!1;switch(t.expirationTime=0,t.tag){case 2:if(l=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=Tt),e=t.pendingProps,a=Tl(t,wl.current),pa(t,n),a=hi(null,t,l,e,a,n),t.effectTag|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,vi(),Sl(l)){var i=!0;zl(t)}else i=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null;var o=l.getDerivedStateFromProps;"function"==typeof o&&Na(t,l,o,e),a.updater=za,t.stateNode=a,a._reactInternalFiber=t,Ia(t,l,e,n),t=qi(null,t,l,!0,i,n)}else t.tag=0,Vi(null,t,a,n),t=t.child;return t;case 16:if(a=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=Tt),e=t.pendingProps,Y(a),1!==a._status)throw a._result;switch(a=a._result,t.type=a,i=t.tag=Gu(a),e=la(a,e),i){case 0:t=Ki(null,t,a,e,n);break;case 1:t=$i(null,t,a,e,n);break;case 11:t=Bi(null,t,a,e,n);break;case 14:t=ji(null,t,a,la(a.type,e),l,n);break;default:throw r(Error(306),a,"")}return t;case 0:return l=t.type,a=t.pendingProps,Ki(e,t,l,a=t.elementType===l?a:la(l,a),n);case 1:return l=t.type,a=t.pendingProps,$i(e,t,l,a=t.elementType===l?a:la(l,a),n);case 3:if(Yi(t),null===(l=t.updateQueue))throw r(Error(282));if(a=null!==(a=t.memoizedState)?a.element:null,Ta(t,l,t.pendingProps,null,n),(l=t.memoizedState.element)===a)Li(),t=lo(e,t,n);else{if((a=t.stateNode.hydrate)&&(Mi=cr(t.stateNode.containerInfo.firstChild),zi=t,a=Ui=!0),a)for(n=Wa(t,null,l,n),t.child=n;n;)n.effectTag=n.effectTag&~Tt|St,n=n.sibling;else Vi(e,t,l,n),Li();t=t.child}return t;case 5:return qa(t),null===e&&Ri(t),l=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,ir(l,a)?o=null:null!==i&&ir(l,i)&&(t.effectTag|=16),Qi(e,t),4&t.mode&&1!==n&&a.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Vi(e,t,o,n),t=t.child),t;case 6:return null===e&&Ri(t),null;case 13:return to(e,t,n);case 4:return Ka(t,t.stateNode.containerInfo),l=t.pendingProps,null===e?t.child=Aa(t,null,l,n):Vi(e,t,l,n),t.child;case 11:return l=t.type,a=t.pendingProps,Bi(e,t,l,a=t.elementType===l?a:la(l,a),n);case 7:return Vi(e,t,t.pendingProps,n),t.child;case 8:case 12:return Vi(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(l=t.type._context,a=t.pendingProps,o=t.memoizedProps,sa(t,i=a.value),null!==o){var u=o.value;if(0===(i=al(u,i)?0:0|("function"==typeof l._calculateChangedBits?l._calculateChangedBits(u,i):1073741823))){if(o.children===a.children&&!El.current){t=lo(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){o=u.child;for(var s=c.firstContext;null!==s;){if(s.context===l&&0!=(s.observedBits&i)){1===u.tag&&((s=ya(n,null)).tag=2,ka(u,s)),u.expirationTime<n&&(u.expirationTime=n),null!==(s=u.alternate)&&s.expirationTime<n&&(s.expirationTime=n),da(u.return,n),c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else o=10===u.tag&&u.type===t.type?null:u.child;if(null!==o)o.return=u;else for(o=u;null!==o;){if(o===t){o=null;break}if(null!==(u=o.sibling)){u.return=o.return,o=u;break}o=o.return}u=o}}Vi(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,l=(i=t.pendingProps).children,pa(t,n),l=l(a=ma(a,i.unstable_observedBits)),t.effectTag|=1,Vi(e,t,l,n),t.child;case 14:return i=la(a=t.type,t.pendingProps),ji(e,t,a,i=la(a.type,i),l,n);case 15:return Hi(e,t,t.type,t.pendingProps,l,n);case 17:return l=t.type,a=t.pendingProps,a=t.elementType===l?a:la(l,a),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=Tt),t.tag=1,Sl(l)?(e=!0,zl(t)):e=!1,pa(t,n),Ua(t,l,a,n),Ia(t,l,a,n),qi(null,t,l,!0,e,n);case 19:return ro(e,t,n)}throw r(Error(156),t.tag)};var Qu=null,Ku=null;function $u(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Qu=function(e){try{t.onCommitFiberRoot(n,e,void 0,64==(64&e.current.effectTag))}catch(r){}},Ku=function(e){try{t.onCommitFiberUnmount(n,e)}catch(r){}}}catch(r){}return!0}function qu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=xt,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Yu(e,t,n,r){return new qu(e,t,n,r)}function Xu(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Gu(e){if("function"==typeof e)return Xu(e)?1:0;if(null!=e){if((e=e.$$typeof)===B)return 11;if(e===Q)return 14}return 2}function Zu(e,t){var n=e.alternate;return null===n?((n=Yu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=xt,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{expirationTime:t.expirationTime,firstContext:t.firstContext,responders:t.responders},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ju(e,t,n,l,a,i){var o=2;if(l=e,"function"==typeof e)Xu(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case O:return ec(n.children,a,i,t);case V:o=8,a|=7;break;case D:o=8,a|=1;break;case L:return(e=Yu(12,n,t,8|a)).elementType=L,e.type=L,e.expirationTime=i,e;case j:return(e=Yu(13,n,t,a)).type=j,e.elementType=j,e.expirationTime=i,e;case H:return(e=Yu(19,n,t,a)).elementType=H,e.expirationTime=i,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case A:o=10;break e;case W:o=9;break e;case B:o=11;break e;case Q:o=14;break e;case K:o=16,l=null;break e}throw r(Error(130),null==e?e:typeof e,"")}return(t=Yu(o,n,t,a)).elementType=e,t.type=l,t.expirationTime=i,t}function ec(e,t,n,r){return(e=Yu(7,e,r,t)).expirationTime=n,e}function tc(e,t,n){return(e=Yu(6,e,null,t)).expirationTime=n,e}function nc(e,t,n){return(t=Yu(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function rc(e,t,n){this.tag=t,this.current=null,this.containerInfo=e,this.pingCache=this.pendingChildren=null,this.finishedExpirationTime=0,this.finishedWork=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=this.firstBatch=null,this.callbackPriority=90,this.lastExpiredTime=this.lastPingedTime=this.nextKnownPendingLevel=this.lastSuspendedTime=this.firstSuspendedTime=this.firstPendingTime=0}function lc(e,t){var n=e.firstSuspendedTime;return e=e.lastSuspendedTime,0!==n&&n>=t&&e<=t}function ac(e,t){var n=e.firstSuspendedTime,r=e.lastSuspendedTime;n<t&&(e.firstSuspendedTime=t),(r>t||0===n)&&(e.lastSuspendedTime=t),t<=e.lastPingedTime&&(e.lastPingedTime=0),t<=e.lastExpiredTime&&(e.lastExpiredTime=0)}function ic(e,t){t>e.firstPendingTime&&(e.firstPendingTime=t);var n=e.firstSuspendedTime;0!==n&&(t>=n?e.firstSuspendedTime=e.lastSuspendedTime=e.nextKnownPendingLevel=0:t>=e.lastSuspendedTime&&(e.lastSuspendedTime=t+1),t>e.nextKnownPendingLevel&&(e.nextKnownPendingLevel=t))}function oc(e,t){var n=e.lastExpiredTime;(0===n||n>t)&&(e.lastExpiredTime=t)}function uc(e,t,n,l,a,i){var o=t.current;e:if(n){t:{if(Ct(n=n._reactInternalFiber)!==n||1!==n.tag)throw r(Error(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(Sl(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw r(Error(171))}if(1===n.tag){var c=n.type;if(Sl(c)){n=Nl(n,c,u);break e}}n=u}else n=kl;return null===t.context?t.context=n:t.pendingContext=n,t=i,(a=ya(l,a)).payload={element:e},null!==(t=void 0===t?null:t)&&(a.callback=t),ka(o,a),mu(o,l),l}function cc(e,t,n,r){var l=t.current,a=su(),i=_a.suspense;return uc(e,t,n,l=fu(a,l,i),i,r)}function sc(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function fc(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:R,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}function dc(e){var t=1073741821-25*(1+((1073741821-su()+500)/25|0));t<=pu&&--t,this._expirationTime=pu=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function pc(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function mc(e,t,n){var r=new rc(e,t,n=null!=n&&!0===n.hydrate),l=Yu(3,null,null,2===t?7:1===t?3:0);return r.current=l,l.stateNode=r,e[mr]=r.current,n&&0!==t&&pt(9===e.nodeType?e:e.ownerDocument),r}function hc(e,t,n){this._internalRoot=mc(e,t,n)}function vc(e,t){this._internalRoot=mc(e,2,t)}function gc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function yc(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new hc(e,0,t?{hydrate:!0}:void 0)}function bc(e,t,n,r,l){var a=n._reactRootContainer;if(a){var i=a._internalRoot;if("function"==typeof l){var o=l;l=function(){var e=sc(i);o.call(e)}}cc(t,i,e,l)}else{if(a=n._reactRootContainer=yc(n,r),i=a._internalRoot,"function"==typeof l){var u=l;l=function(){var e=sc(i);u.call(e)}}Su(function(){cc(t,i,e,l)})}return sc(i)}function kc(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!gc(t))throw r(Error(200));return fc(e,t,null,n)}J=function(e,t,n){switch(t){case"input":if(Ue(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var l=n[t];if(l!==e&&l.form===e.form){var a=yr(l);if(!a)throw r(Error(90));Pe(l),Ue(l,a)}}}break;case"textarea":We(e,n);break;case"select":null!=(t=n.value)&&De(e,!!n.multiple,t,!1)}},dc.prototype.render=function(e){if(!this._defer)throw r(Error(250));this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,l=new pc;return uc(e,t,null,n,null,l._onCommit),l},dc.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},dc.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(!this._defer||null===t)throw r(Error(251));if(this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var l=null,a=t;a!==this;)l=a,a=a._next;if(null===l)throw r(Error(251));l._next=a._next,this._next=t,e.firstBatch=this}if(this._defer=!1,t=n,(Wo&(Mo|Uo))!==No)throw r(Error(253));oc(e,t),gu(e),na(),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},dc.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},pc.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},pc.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];if("function"!=typeof n)throw r(Error(191),n);n()}}},vc.prototype.render=hc.prototype.render=function(e,t){var n=this._internalRoot,r=new pc;return null!==(t=void 0===t?null:t)&&r.then(t),cc(e,n,null,r._onCommit),r},vc.prototype.unmount=hc.prototype.unmount=function(e){var t=this._internalRoot,n=new pc;return null!==(e=void 0===e?null:e)&&n.then(e),cc(null,t,null,n._onCommit),n},vc.prototype.createBatch=function(){var e=new dc(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},ae=xu,ie=Tu,oe=ku,ue=function(e,t){var n=Wo;Wo|=2;try{return e(t)}finally{(Wo=n)===No&&na()}};var wc={createPortal:kc,findDOMNode:function(e){if(null==e)e=null;else if(1!==e.nodeType){var t=e._reactInternalFiber;if(void 0===t){if("function"==typeof e.render)throw r(Error(188));throw r(Error(268),Object.keys(e))}e=null===(e=Nt(t))?null:e.stateNode}return e},hydrate:function(e,t,n){if(!gc(t))throw r(Error(200));return bc(null,e,t,!0,n)},render:function(e,t,n){if(!gc(t))throw r(Error(200));return bc(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,l){if(!gc(n))throw r(Error(200));if(null==e||void 0===e._reactInternalFiber)throw r(Error(38));return bc(e,t,n,!1,l)},unmountComponentAtNode:function(e){if(!gc(e))throw r(Error(40));return!!e._reactRootContainer&&(Su(function(){bc(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return kc.apply(void 0,arguments)},unstable_batchedUpdates:xu,unstable_interactiveUpdates:function(e,t,n,r){return ku(),Tu(e,t,n,r)},unstable_discreteUpdates:Tu,unstable_flushDiscreteUpdates:ku,flushSync:function(e,t){if((Wo&(Mo|Uo))!==No)throw r(Error(187));var n=Wo;Wo|=1;try{return Jl(99,e.bind(null,t))}finally{Wo=n,na()}},unstable_createRoot:Ec,unstable_createSyncRoot:xc,unstable_flushControlled:function(e){var t=Wo;Wo|=1;try{Jl(99,e)}finally{(Wo=t)===No&&na()}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[vr,gr,yr,N.injectEventPluginsByName,c,Ot,function(e){S(e,Rt)},re,le,Un,P,Au,{current:!1}]}};function Ec(e,t){if(!gc(e))throw r(Error(299),"unstable_createRoot");return new vc(e,t)}function xc(e,t){if(!gc(e))throw r(Error(299),"unstable_createRoot");return new hc(e,1,t)}!function(e){var n=e.findFiberByHostInstance;$u(t({},e,{overrideHookState:null,overrideProps:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:M.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=Nt(e))?null:e.stateNode},findFiberByHostInstance:function(e){return n?n(e):null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null}))}({findFiberByHostInstance:hr,bundleType:0,version:"16.10.2",rendererPackageName:"react-dom"});var Tc={default:wc},Sc=Tc&&wc||Tc;module.exports=Sc.default||Sc;
},{"react":"n8MK","object-assign":"J4Nk","scheduler":"MDSO"}],"NKHc":[function(require,module,exports) {
"use strict";function _(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE){0;try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(_)}catch(O){console.error(O)}}}_(),module.exports=require("./cjs/react-dom.production.min.js");
},{"./cjs/react-dom.production.min.js":"i17t"}],"Asjh":[function(require,module,exports) {
"use strict";var _="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";module.exports=_;
},{}],"wVGV":[function(require,module,exports) {
"use strict";var e=require("./lib/ReactPropTypesSecret");function r(){}function t(){}t.resetWarningCache=r,module.exports=function(){function n(r,t,n,o,a,p){if(p!==e){var c=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}function o(){return n}n.isRequired=n;var a={array:n,bool:n,func:n,number:n,object:n,string:n,symbol:n,any:n,arrayOf:o,element:n,elementType:n,instanceOf:o,node:n,objectOf:o,oneOf:o,oneOfType:o,shape:o,exact:o,checkPropTypes:t,resetWarningCache:r};return a.PropTypes=a,a};
},{"./lib/ReactPropTypesSecret":"Asjh"}],"D9Od":[function(require,module,exports) {
var r,e;module.exports=require("./factoryWithThrowingShims")();
},{"./factoryWithThrowingShims":"wVGV"}],"qb7c":[function(require,module,exports) {
var define;
var e;!function(){"use strict";var r={}.hasOwnProperty;function n(){for(var e=[],t=0;t<arguments.length;t++){var o=arguments[t];if(o){var a=typeof o;if("string"===a||"number"===a)e.push(o);else if(Array.isArray(o)&&o.length){var s=n.apply(null,o);s&&e.push(s)}else if("object"===a)for(var u in o)r.call(o,u)&&o[u]&&e.push(u)}}return e.join(" ")}"undefined"!=typeof module&&module.exports?(n.default=n,module.exports=n):"function"==typeof e&&"object"==typeof e.amd&&e.amd?e("classnames",[],function(){return n}):window.classNames=n}();
},{}],"ISxh":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default={GLOBAL:{HIDE:"__react_tooltip_hide_event",REBUILD:"__react_tooltip_rebuild_event",SHOW:"__react_tooltip_show_event"}};
},{}],"Tsa0":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(t){t.hide=function(t){n(e.default.GLOBAL.HIDE,{target:t})},t.rebuild=function(){n(e.default.GLOBAL.REBUILD)},t.show=function(t){n(e.default.GLOBAL.SHOW,{target:t})},t.prototype.globalRebuild=function(){this.mount&&(this.unbindListener(),this.bindListener())},t.prototype.globalShow=function(t){if(this.mount){var e={currentTarget:t.detail.target};this.showTooltip(e,!0)}},t.prototype.globalHide=function(t){if(this.mount){var e=!!(t&&t.detail&&t.detail.target);this.hideTooltip({currentTarget:e&&t.detail.target},e)}}};var t=require("../constant"),e=i(t);function i(t){return t&&t.__esModule?t:{default:t}}var n=function(t,e){var i=void 0;"function"==typeof window.CustomEvent?i=new window.CustomEvent(t,{detail:e}):((i=document.createEvent("Event")).initEvent(t,!1,!0),i.detail=e),window.dispatchEvent(i)};
},{"../constant":"ISxh"}],"m3k2":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(e){e.prototype.bindWindowEvents=function(e){window.removeEventListener(t.default.GLOBAL.HIDE,this.globalHide),window.addEventListener(t.default.GLOBAL.HIDE,this.globalHide,!1),window.removeEventListener(t.default.GLOBAL.REBUILD,this.globalRebuild),window.addEventListener(t.default.GLOBAL.REBUILD,this.globalRebuild,!1),window.removeEventListener(t.default.GLOBAL.SHOW,this.globalShow),window.addEventListener(t.default.GLOBAL.SHOW,this.globalShow,!1),e&&(window.removeEventListener("resize",this.onWindowResize),window.addEventListener("resize",this.onWindowResize,!1))},e.prototype.unbindWindowEvents=function(){window.removeEventListener(t.default.GLOBAL.HIDE,this.globalHide),window.removeEventListener(t.default.GLOBAL.REBUILD,this.globalRebuild),window.removeEventListener(t.default.GLOBAL.SHOW,this.globalShow),window.removeEventListener("resize",this.onWindowResize)},e.prototype.onWindowResize=function(){this.mount&&this.hideTooltip()}};var e=require("../constant"),t=i(e);function i(e){return e&&e.__esModule?e:{default:e}}
},{"../constant":"ISxh"}],"xRcQ":[function(require,module,exports) {
"use strict";function t(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(t){t.prototype.isCustomEvent=function(t){return this.state.event||!!t.getAttribute("data-event")},t.prototype.customBindListener=function(t){var r=this,n=this.state,o=n.event,s=n.eventOff,u=t.getAttribute("data-event")||o,a=t.getAttribute("data-event-off")||s;u.split(" ").forEach(function(n){t.removeEventListener(n,i.get(t,n));var o=e.bind(r,a);i.set(t,n,o),t.addEventListener(n,o,!1)}),a&&a.split(" ").forEach(function(e){t.removeEventListener(e,r.hideTooltip),t.addEventListener(e,r.hideTooltip,!1)})},t.prototype.customUnbindListener=function(t){var e=this.state,r=e.event,n=e.eventOff,o=r||t.getAttribute("data-event"),s=n||t.getAttribute("data-event-off");t.removeEventListener(o,i.get(t,r)),s&&t.removeEventListener(s,this.hideTooltip)}};var e=function(t,e){var i=this.state.show,n=this.props.id,o=e.currentTarget.getAttribute("data-iscapture"),s=o&&"true"===o||this.props.isCapture,u=e.currentTarget.getAttribute("currentItem");s||e.stopPropagation(),i&&"true"===u?t||this.hideTooltip(e):(e.currentTarget.setAttribute("currentItem","true"),r(e.currentTarget,this.getTargetArray(n)),this.showTooltip(e))},r=function(t,e){for(var r=0;r<e.length;r++)t!==e[r]?e[r].setAttribute("currentItem","false"):e[r].setAttribute("currentItem","true")},i={id:"9b69f92e-d3fe-498b-b1b4-c5e63a51b0cf",set:function(e,r,i){this.id in e?e[this.id][r]=i:Object.defineProperty(e,this.id,{configurable:!0,value:t({},r,i)})},get:function(t,e){var r=t[this.id];if(void 0!==r)return r[e]}};
},{}],"rgnM":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(t){t.prototype.isCapture=function(t){return t&&"true"===t.getAttribute("data-iscapture")||this.props.isCapture||!1}};
},{}],"mqrf":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(t){t.prototype.getEffect=function(t){return t.getAttribute("data-effect")||this.props.effect||"float"}};
},{}],"pfHg":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(r){r.prototype.bindRemovalTracker=function(){var r=this,t=e();if(null!=t){var o=new t(function(e){for(var t=0;t<e.length;t++)for(var o=e[t],n=0;n<o.removedNodes.length;n++){if(o.removedNodes[n]===r.state.currentTarget)return void r.hideTooltip()}});o.observe(window.document,{childList:!0,subtree:!0}),this.removalTracker=o}},r.prototype.unbindRemovalTracker=function(){this.removalTracker&&(this.removalTracker.disconnect(),this.removalTracker=null)}};var e=function(){return window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver};
},{}],"TBWO":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(i,u,a,f,p,l,s){for(var c=t(a),g=c.width,d=c.height,h=t(u),v=h.width,b=h.height,w=e(i,u,l),m=w.mouseX,I=w.mouseY,S=r(l,v,b,g,d),O=n(s),x=O.extraOffset_X,X=O.extraOffset_Y,Y=window.innerWidth,_=window.innerHeight,y=o(a),C=y.parentTop,B=y.parentLeft,R=function(t){var e=S[t].l;return m+e+x},j=function(t){var e=S[t].t;return I+e+X},N=function(t){return e=S[t].r,m+e+x>Y;var e},L=function(t){return e=S[t].b,I+e+X>_;var e},P=function(t){return function(t){return R(t)<0}(t)||N(t)||function(t){return j(t)<0}(t)||L(t)},T=function(t){return!P(t)},E=["top","bottom","left","right"],H=[],J=0;J<4;J++){var M=E[J];T(M)&&H.push(M)}var V=!1,W=void 0;return T(p)&&p!==f?(V=!0,W=p):H.length>0&&P(p)&&P(f)&&(V=!0,W=H[0]),V?{isNewState:!0,newState:{place:W}}:{isNewState:!1,position:{left:parseInt(R(f)-B,10),top:parseInt(j(f)-C,10)}}};var t=function(t){var e=t.getBoundingClientRect(),r=e.height,n=e.width;return{height:parseInt(r,10),width:parseInt(n,10)}},e=function(e,r,n){var o=r.getBoundingClientRect(),i=o.top,u=o.left,a=t(r),f=a.width,p=a.height;return"float"===n?{mouseX:e.clientX,mouseY:e.clientY}:{mouseX:u+f/2,mouseY:i+p/2}},r=function(t,e,r,n,o){var i=void 0,u=void 0,a=void 0,f=void 0;return"float"===t?(i={l:-n/2,r:n/2,t:-(o+3+2),b:-3},a={l:-n/2,r:n/2,t:15,b:o+3+2+12},f={l:-(n+3+2),r:-3,t:-o/2,b:o/2},u={l:3,r:n+3+2,t:-o/2,b:o/2}):"solid"===t&&(i={l:-n/2,r:n/2,t:-(r/2+o+2),b:-r/2},a={l:-n/2,r:n/2,t:r/2,b:r/2+o+2},f={l:-(n+e/2+2),r:-e/2,t:-o/2,b:o/2},u={l:e/2,r:n+e/2+2,t:-o/2,b:o/2}),{top:i,bottom:a,left:f,right:u}},n=function(t){var e=0,r=0;for(var n in"[object String]"===Object.prototype.toString.apply(t)&&(t=JSON.parse(t.toString().replace(/\'/g,'"'))),t)"top"===n?r-=parseInt(t[n],10):"bottom"===n?r+=parseInt(t[n],10):"left"===n?e-=parseInt(t[n],10):"right"===n&&(e+=parseInt(t[n],10));return{extraOffset_X:e,extraOffset_Y:r}},o=function(t){for(var e=t;e&&"none"===window.getComputedStyle(e).getPropertyValue("transform");)e=e.parentElement;return{parentTop:e&&e.getBoundingClientRect().top||0,parentLeft:e&&e.getBoundingClientRect().left||0}};
},{}],"QZaE":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(e,r,u,n){if(r)return r;if(null!=u)return u;if(null===u)return null;var l=/<br\s*\/?>/;return n&&"false"!==n&&l.test(e)?e.split(l).map(function(e,r){return t.default.createElement("span",{key:r,className:"multi-line"},e)}):e};var e=require("react"),t=r(e);function r(e){return e&&e.__esModule?e:{default:e}}
},{"react":"n8MK"}],"vYDn":[function(require,module,exports) {
"use strict";function e(e){var r={};return Object.keys(e).filter(function(e){return/(^aria-\w+$|^role$)/.test(e)}).forEach(function(t){r[t]=e[t]}),r}Object.defineProperty(exports,"__esModule",{value:!0}),exports.parseAria=e;
},{}],"BW35":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=function(e){var r=e.length;return e.hasOwnProperty?Array.prototype.slice.call(e):new Array(r).fill().map(function(r){return e[r]})};
},{}],"qImX":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default='.__react_component_tooltip{border-radius:3px;display:inline-block;font-size:13px;left:-999em;opacity:0;padding:8px 21px;position:fixed;pointer-events:none;transition:opacity 0.3s ease-out;top:-999em;visibility:hidden;z-index:999}.__react_component_tooltip.allow_hover,.__react_component_tooltip.allow_click{pointer-events:auto}.__react_component_tooltip:before,.__react_component_tooltip:after{content:"";width:0;height:0;position:absolute}.__react_component_tooltip.show{opacity:0.9;margin-top:0px;margin-left:0px;visibility:visible}.__react_component_tooltip.type-dark{color:#fff;background-color:#222}.__react_component_tooltip.type-dark.place-top:after{border-top-color:#222;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-dark.place-bottom:after{border-bottom-color:#222;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-dark.place-left:after{border-left-color:#222;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-dark.place-right:after{border-right-color:#222;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-dark.border{border:1px solid #fff}.__react_component_tooltip.type-dark.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-dark.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-dark.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-dark.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-success{color:#fff;background-color:#8DC572}.__react_component_tooltip.type-success.place-top:after{border-top-color:#8DC572;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-success.place-bottom:after{border-bottom-color:#8DC572;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-success.place-left:after{border-left-color:#8DC572;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-success.place-right:after{border-right-color:#8DC572;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-success.border{border:1px solid #fff}.__react_component_tooltip.type-success.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-success.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-success.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-success.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-warning{color:#fff;background-color:#F0AD4E}.__react_component_tooltip.type-warning.place-top:after{border-top-color:#F0AD4E;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-warning.place-bottom:after{border-bottom-color:#F0AD4E;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-warning.place-left:after{border-left-color:#F0AD4E;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-warning.place-right:after{border-right-color:#F0AD4E;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-warning.border{border:1px solid #fff}.__react_component_tooltip.type-warning.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-warning.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-warning.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-warning.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-error{color:#fff;background-color:#BE6464}.__react_component_tooltip.type-error.place-top:after{border-top-color:#BE6464;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-error.place-bottom:after{border-bottom-color:#BE6464;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-error.place-left:after{border-left-color:#BE6464;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-error.place-right:after{border-right-color:#BE6464;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-error.border{border:1px solid #fff}.__react_component_tooltip.type-error.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-error.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-error.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-error.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-info{color:#fff;background-color:#337AB7}.__react_component_tooltip.type-info.place-top:after{border-top-color:#337AB7;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-info.place-bottom:after{border-bottom-color:#337AB7;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-info.place-left:after{border-left-color:#337AB7;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-info.place-right:after{border-right-color:#337AB7;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-info.border{border:1px solid #fff}.__react_component_tooltip.type-info.border.place-top:before{border-top:8px solid #fff}.__react_component_tooltip.type-info.border.place-bottom:before{border-bottom:8px solid #fff}.__react_component_tooltip.type-info.border.place-left:before{border-left:8px solid #fff}.__react_component_tooltip.type-info.border.place-right:before{border-right:8px solid #fff}.__react_component_tooltip.type-light{color:#222;background-color:#fff}.__react_component_tooltip.type-light.place-top:after{border-top-color:#fff;border-top-style:solid;border-top-width:6px}.__react_component_tooltip.type-light.place-bottom:after{border-bottom-color:#fff;border-bottom-style:solid;border-bottom-width:6px}.__react_component_tooltip.type-light.place-left:after{border-left-color:#fff;border-left-style:solid;border-left-width:6px}.__react_component_tooltip.type-light.place-right:after{border-right-color:#fff;border-right-style:solid;border-right-width:6px}.__react_component_tooltip.type-light.border{border:1px solid #222}.__react_component_tooltip.type-light.border.place-top:before{border-top:8px solid #222}.__react_component_tooltip.type-light.border.place-bottom:before{border-bottom:8px solid #222}.__react_component_tooltip.type-light.border.place-left:before{border-left:8px solid #222}.__react_component_tooltip.type-light.border.place-right:before{border-right:8px solid #222}.__react_component_tooltip.place-top{margin-top:-10px}.__react_component_tooltip.place-top:before{border-left:10px solid transparent;border-right:10px solid transparent;bottom:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-top:after{border-left:8px solid transparent;border-right:8px solid transparent;bottom:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-bottom{margin-top:10px}.__react_component_tooltip.place-bottom:before{border-left:10px solid transparent;border-right:10px solid transparent;top:-8px;left:50%;margin-left:-10px}.__react_component_tooltip.place-bottom:after{border-left:8px solid transparent;border-right:8px solid transparent;top:-6px;left:50%;margin-left:-8px}.__react_component_tooltip.place-left{margin-left:-10px}.__react_component_tooltip.place-left:before{border-top:6px solid transparent;border-bottom:6px solid transparent;right:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-left:after{border-top:5px solid transparent;border-bottom:5px solid transparent;right:-6px;top:50%;margin-top:-4px}.__react_component_tooltip.place-right{margin-left:10px}.__react_component_tooltip.place-right:before{border-top:6px solid transparent;border-bottom:6px solid transparent;left:-8px;top:50%;margin-top:-5px}.__react_component_tooltip.place-right:after{border-top:5px solid transparent;border-bottom:5px solid transparent;left:-6px;top:50%;margin-top:-4px}.__react_component_tooltip .multi-line{display:block;padding:2px 0px;text-align:center}';
},{}],"WBhx":[function(require,module,exports) {
"use strict";function t(e){return(t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(e)}var e,i,o,r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var i=arguments[e];for(var o in i)Object.prototype.hasOwnProperty.call(i,o)&&(t[o]=i[o])}return t},a=function(){function t(t,e){for(var i=0;i<e.length;i++){var o=e[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,o.key,o)}}return function(e,i,o){return i&&t(e.prototype,i),o&&t(e,o),e}}(),s=require("react"),n=q(s),l=require("prop-types"),u=q(l),p=require("classnames"),d=q(p),c=require("./decorators/staticMethods"),f=q(c),h=require("./decorators/windowListener"),y=q(h),v=require("./decorators/customEvent"),m=q(v),b=require("./decorators/isCapture"),g=q(b),T=require("./decorators/getEffect"),w=q(T),E=require("./decorators/trackRemoval"),S=q(E),L=require("./utils/getPosition"),k=q(L),A=require("./utils/getTipContent"),_=q(A),C=require("./utils/aria"),O=require("./utils/nodeListToArray"),R=q(O),P=require("./style"),H=q(P);function q(t){return t&&t.__esModule?t:{default:t}}function x(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function M(e,i){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!i||"object"!==t(i)&&"function"!=typeof i?e:i}function j(e,i){if("function"!=typeof i&&null!==i)throw new TypeError("Super expression must either be null or a function, not "+t(i));e.prototype=Object.create(i&&i.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),i&&(Object.setPrototypeOf?Object.setPrototypeOf(e,i):e.__proto__=i)}var U=(0,f.default)(e=(0,y.default)(e=(0,m.default)(e=(0,g.default)(e=(0,w.default)(e=(0,S.default)((o=i=function(t){function e(t){x(this,e);var i=M(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return i.state={place:t.place||"top",desiredPlace:t.place||"top",type:"dark",effect:"float",show:!1,border:!1,offset:{},extraClass:"",html:!1,delayHide:0,delayShow:0,event:t.event||null,eventOff:t.eventOff||null,currentEvent:null,currentTarget:null,ariaProps:(0,C.parseAria)(t),isEmptyTip:!1,disable:!1,originTooltip:null,isMultiline:!1},i.bind(["showTooltip","updateTooltip","hideTooltip","hideTooltipOnScroll","getTooltipContent","globalRebuild","globalShow","globalHide","onWindowResize","mouseOnToolTip"]),i.mount=!0,i.delayShowLoop=null,i.delayHideLoop=null,i.delayReshow=null,i.intervalUpdateContent=null,i}return j(e,n.default.Component),a(e,[{key:"bind",value:function(t){var e=this;t.forEach(function(t){e[t]=e[t].bind(e)})}},{key:"componentDidMount",value:function(){var t=this.props,e=t.insecure,i=t.resizeHide;e&&this.setStyleHeader(),this.bindListener(),this.bindWindowEvents(i)}},{key:"componentWillUnmount",value:function(){this.mount=!1,this.clearTimer(),this.unbindListener(),this.removeScrollListener(),this.unbindWindowEvents()}},{key:"mouseOnToolTip",value:function(){return!(!this.state.show||!this.tooltipRef)&&(this.tooltipRef.matches||(this.tooltipRef.msMatchesSelector?this.tooltipRef.matches=this.tooltipRef.msMatchesSelector:this.tooltipRef.matches=this.tooltipRef.mozMatchesSelector),this.tooltipRef.matches(":hover"))}},{key:"getTargetArray",value:function(t){var e=void 0;if(t){var i=t.replace(/\\/g,"\\\\").replace(/"/g,'\\"');e=document.querySelectorAll('[data-tip][data-for="'+i+'"]')}else e=document.querySelectorAll("[data-tip]:not([data-for])");return(0,R.default)(e)}},{key:"bindListener",value:function(){var t=this,e=this.props,i=e.id,o=e.globalEventOff,r=e.isCapture;this.getTargetArray(i).forEach(function(e){var i=t.isCapture(e),o=t.getEffect(e);null===e.getAttribute("currentItem")&&e.setAttribute("currentItem","false"),t.unbindBasicListener(e),t.isCustomEvent(e)?t.customBindListener(e):(e.addEventListener("mouseenter",t.showTooltip,i),"float"===o&&e.addEventListener("mousemove",t.updateTooltip,i),e.addEventListener("mouseleave",t.hideTooltip,i))}),o&&(window.removeEventListener(o,this.hideTooltip),window.addEventListener(o,this.hideTooltip,r)),this.bindRemovalTracker()}},{key:"unbindListener",value:function(){var t=this,e=this.props,i=e.id,o=e.globalEventOff;this.getTargetArray(i).forEach(function(e){t.unbindBasicListener(e),t.isCustomEvent(e)&&t.customUnbindListener(e)}),o&&window.removeEventListener(o,this.hideTooltip),this.unbindRemovalTracker()}},{key:"unbindBasicListener",value:function(t){var e=this.isCapture(t);t.removeEventListener("mouseenter",this.showTooltip,e),t.removeEventListener("mousemove",this.updateTooltip,e),t.removeEventListener("mouseleave",this.hideTooltip,e)}},{key:"getTooltipContent",value:function(){var t=this.props,e=t.getContent,i=t.children,o=void 0;return e&&(o=Array.isArray(e)?e[0]&&e[0](this.state.originTooltip):e(this.state.originTooltip)),(0,_.default)(this.state.originTooltip,i,o,this.state.isMultiline)}},{key:"isEmptyTip",value:function(t){return"string"==typeof t&&""===t||null===t}},{key:"showTooltip",value:function(t,e){if(e&&!this.getTargetArray(this.props.id).some(function(e){return e===t.currentTarget}))return;var i=this.props,o=i.multiline,r=i.getContent,a=t.currentTarget.getAttribute("data-tip"),s=t.currentTarget.getAttribute("data-multiline")||o||!1,n=t instanceof window.FocusEvent||e,l=!0;t.currentTarget.getAttribute("data-scroll-hide")?l="true"===t.currentTarget.getAttribute("data-scroll-hide"):null!=this.props.scrollHide&&(l=this.props.scrollHide);var u=t.currentTarget.getAttribute("data-place")||this.props.place||"top",p=n?"solid":this.getEffect(t.currentTarget),d=t.currentTarget.getAttribute("data-offset")||this.props.offset||{},c=(0,k.default)(t,t.currentTarget,this.tooltipRef,u,u,p,d);c.position&&this.props.overridePosition&&(c.position=this.props.overridePosition(c.position,t.currentTarget,this.tooltipRef,u,u,p,d));var f=c.isNewState?c.newState.place:u;this.clearTimer();var h=t.currentTarget,y=this.state.show?h.getAttribute("data-delay-update")||this.props.delayUpdate:0,v=this,m=function(){v.setState({originTooltip:a,isMultiline:s,desiredPlace:u,place:f,type:h.getAttribute("data-type")||v.props.type||"dark",effect:p,offset:d,html:h.getAttribute("data-html")?"true"===h.getAttribute("data-html"):v.props.html||!1,delayShow:h.getAttribute("data-delay-show")||v.props.delayShow||0,delayHide:h.getAttribute("data-delay-hide")||v.props.delayHide||0,delayUpdate:h.getAttribute("data-delay-update")||v.props.delayUpdate||0,border:h.getAttribute("data-border")?"true"===h.getAttribute("data-border"):v.props.border||!1,extraClass:h.getAttribute("data-class")||v.props.class||v.props.className||"",disable:h.getAttribute("data-tip-disable")?"true"===h.getAttribute("data-tip-disable"):v.props.disable||!1,currentTarget:h},function(){l&&v.addScrollListener(v.state.currentTarget),v.updateTooltip(t),r&&Array.isArray(r)&&(v.intervalUpdateContent=setInterval(function(){if(v.mount){var t=v.props.getContent,e=(0,_.default)(a,"",t[0](),s),i=v.isEmptyTip(e);v.setState({isEmptyTip:i}),v.updatePosition()}},r[1]))})};y?this.delayReshow=setTimeout(m,y):m()}},{key:"updateTooltip",value:function(t){var e=this,i=this.state,o=i.delayShow,r=i.disable,a=this.props.afterShow,s=this.getTooltipContent(),n=parseInt(o,10),l=t.currentTarget||t.target;if(!this.mouseOnToolTip()&&!this.isEmptyTip(s)&&!r){var u=function(){if(Array.isArray(s)&&s.length>0||s){var i=!e.state.show;e.setState({currentEvent:t,currentTarget:l,show:!0},function(){e.updatePosition(),i&&a&&a(t)})}};clearTimeout(this.delayShowLoop),o?this.delayShowLoop=setTimeout(u,n):u()}}},{key:"listenForTooltipExit",value:function(){this.state.show&&this.tooltipRef&&this.tooltipRef.addEventListener("mouseleave",this.hideTooltip)}},{key:"removeListenerForTooltipExit",value:function(){this.state.show&&this.tooltipRef&&this.tooltipRef.removeEventListener("mouseleave",this.hideTooltip)}},{key:"hideTooltip",value:function(t,e){var i=this,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{isScroll:!1},r=this.state.disable,a=o.isScroll?0:this.state.delayHide,s=this.props.afterHide,n=this.getTooltipContent();if(this.mount&&!this.isEmptyTip(n)&&!r){if(e)if(!this.getTargetArray(this.props.id).some(function(e){return e===t.currentTarget})||!this.state.show)return;var l=function(){var e=i.state.show;i.mouseOnToolTip()?i.listenForTooltipExit():(i.removeListenerForTooltipExit(),i.setState({show:!1},function(){i.removeScrollListener(),e&&s&&s(t)}))};this.clearTimer(),a?this.delayHideLoop=setTimeout(l,parseInt(a,10)):l()}}},{key:"hideTooltipOnScroll",value:function(t,e){this.hideTooltip(t,e,{isScroll:!0})}},{key:"addScrollListener",value:function(t){var e=this.isCapture(t);window.addEventListener("scroll",this.hideTooltipOnScroll,e)}},{key:"removeScrollListener",value:function(){window.removeEventListener("scroll",this.hideTooltipOnScroll)}},{key:"updatePosition",value:function(){var t=this,e=this.state,i=e.currentEvent,o=e.currentTarget,r=e.place,a=e.desiredPlace,s=e.effect,n=e.offset,l=this.tooltipRef,u=(0,k.default)(i,o,l,r,a,s,n);if(u.position&&this.props.overridePosition&&(u.position=this.props.overridePosition(u.position,i,o,l,r,a,s,n)),u.isNewState)return this.setState(u.newState,function(){t.updatePosition()});l.style.left=u.position.left+"px",l.style.top=u.position.top+"px"}},{key:"setStyleHeader",value:function(){var t=document.getElementsByTagName("head")[0];if(!t.querySelector('style[id="react-tooltip"]')){var e=document.createElement("style");e.id="react-tooltip",e.innerHTML=H.default,"undefined"!=typeof __webpack_nonce__&&__webpack_nonce__&&e.setAttribute("nonce",__webpack_nonce__),t.insertBefore(e,t.firstChild)}}},{key:"clearTimer",value:function(){clearTimeout(this.delayShowLoop),clearTimeout(this.delayHideLoop),clearTimeout(this.delayReshow),clearInterval(this.intervalUpdateContent)}},{key:"render",value:function(){var t=this,i=this.state,o=i.extraClass,a=i.html,s=i.ariaProps,l=i.disable,u=this.getTooltipContent(),p=this.isEmptyTip(u),c=(0,d.default)("__react_component_tooltip",{show:this.state.show&&!l&&!p},{border:this.state.border},{"place-top":"top"===this.state.place},{"place-bottom":"bottom"===this.state.place},{"place-left":"left"===this.state.place},{"place-right":"right"===this.state.place},{"type-dark":"dark"===this.state.type},{"type-success":"success"===this.state.type},{"type-warning":"warning"===this.state.type},{"type-error":"error"===this.state.type},{"type-info":"info"===this.state.type},{"type-light":"light"===this.state.type},{allow_hover:this.props.delayUpdate},{allow_click:this.props.clickable}),f=this.props.wrapper;return e.supportedWrappers.indexOf(f)<0&&(f=e.defaultProps.wrapper),a?n.default.createElement(f,r({className:c+" "+o,id:this.props.id,ref:function(e){return t.tooltipRef=e}},s,{"data-id":"tooltip",dangerouslySetInnerHTML:{__html:u}})):n.default.createElement(f,r({className:c+" "+o,id:this.props.id},s,{ref:function(e){return t.tooltipRef=e},"data-id":"tooltip"}),u)}}],[{key:"getDerivedStateFromProps",value:function(t,e){var i=e.ariaProps,o=(0,C.parseAria)(t);return Object.keys(o).some(function(t){return o[t]!==i[t]})?r({},e,{ariaProps:o}):null}}]),e}(),i.propTypes={children:u.default.any,place:u.default.string,type:u.default.string,effect:u.default.string,offset:u.default.object,multiline:u.default.bool,border:u.default.bool,insecure:u.default.bool,class:u.default.string,className:u.default.string,id:u.default.string,html:u.default.bool,delayHide:u.default.number,delayUpdate:u.default.number,delayShow:u.default.number,event:u.default.string,eventOff:u.default.string,watchWindow:u.default.bool,isCapture:u.default.bool,globalEventOff:u.default.string,getContent:u.default.any,afterShow:u.default.func,afterHide:u.default.func,overridePosition:u.default.func,disable:u.default.bool,scrollHide:u.default.bool,resizeHide:u.default.bool,wrapper:u.default.string,clickable:u.default.bool},i.defaultProps={insecure:!0,resizeHide:!0,wrapper:"div",clickable:!1},i.supportedWrappers=["div","span"],i.displayName="ReactTooltip",e=o))||e)||e)||e)||e)||e)||e;module.exports=U;
},{"react":"n8MK","prop-types":"D9Od","classnames":"qb7c","./decorators/staticMethods":"Tsa0","./decorators/windowListener":"m3k2","./decorators/customEvent":"xRcQ","./decorators/isCapture":"rgnM","./decorators/getEffect":"mqrf","./decorators/trackRemoval":"pfHg","./utils/getPosition":"TBWO","./utils/getTipContent":"QZaE","./utils/aria":"vYDn","./utils/nodeListToArray":"BW35","./style":"qImX"}],"W8bX":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleNamespaceExtensionMap={node:"js",typescript:"ts"},exports.RuleNamespacePrismLanguageMap={node:"js",typescript:"ts"};
},{}],"UnXq":[function(require,module,exports) {
"use strict";function t(t){return t.replace(/\</g,"&lt;").replace(/\>/g,"&gt;").replace(/[a-zA-Z0-9\(\)\[\]\{\}\\\/'"_\-\+\?\.\*!=\&\@\#~:; ]+/g,function(t){var e=t.match(/^( *)(.*?)( *)$/);return null===e?"<code>".concat(t,"</code>"):e[2].startsWith("http")?"".concat(e[1],'<a href="').concat(e[2],'" target="_blank">').concat(e[2],"</a>").concat(e[3]):"".concat(e[1],"<code>").concat(e[2],"</code>").concat(e[3])}).replace(/\n/g,"<br/>").replace(/禁止/g,'<strong style="color:#db5757; font-weight:600;">$&</strong>').replace(/必须/g,'<strong style="color:#267fd9; font-weight:600;">$&</strong>')}Object.defineProperty(exports,"__esModule",{value:!0}),exports.parseDescription=t;
},{}],"KxOl":[function(require,module,exports) {
module.exports={"accessor-pairs":{name:"accessor-pairs",value:"off",description:"现阶段不要求 setter 必须有对应的 getter，getter 可以没有对应的 setter。取决于具体业务需要。\n待开闭原则确定后启用。",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">set</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>barValue <span class="token operator">=</span> <span class="token string">\'bar \'</span> <span class="token operator">+</span> value<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token keyword">get</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>barValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>fooValue<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"array-callback-return":{name:"array-callback-return",value:"error",description:"数组的方法除了 forEach 之外，回调函数必须有返回值",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator"><mark class="eslint-error" data-tip="Expected to return a value in arrow function.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(array-callback-return)&lt;/span&gt;">=</mark>></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num <span class="token operator">*</span> num<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> num <span class="token operator">*</span> num<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"arrow-body-style":{name:"arrow-body-style",value:["warn","as-needed"],description:"建议箭头函数采用省略形式处理返回值，简洁的代码形式有利可读性。",category:"",badExample:'<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation"><mark class="eslint-error" data-tip="Unexpected block statement surrounding arrow body; move the returned value immediately after the `=&gt;`.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(arrow-body-style)&lt;/span&gt;">{</mark></span>\n    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token boolean">true</span><span class="token punctuation">;</span>'},"block-scoped-var":{name:"block-scoped-var",value:"off",description:"将 var 定义的变量视为块作用域，禁止在块外使用",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 var 了"},"callback-return":{name:"callback-return",value:"off",description:"callback 之后必须立即 return",category:"",badExample:"",goodExample:""},camelcase:{name:"camelcase",value:"off",description:"变量名必须是 camelcase 风格的",category:"",badExample:"",goodExample:"",reason:"很多 api 或文件名都不是 camelcase 风格的"},"capitalized-comments":{name:"capitalized-comments",value:"off",description:"注释的首字母必须大写",category:"",badExample:"",goodExample:""},"class-methods-use-this":{name:"class-methods-use-this",value:"off",description:"在类的非静态方法中，必须存在对 this 的引用",category:"",badExample:"",goodExample:""},complexity:{name:"complexity",value:["error",{max:20}],description:"禁止函数的循环复杂度超过 20",category:"",badExample:'<mark class="eslint-error" data-tip="Function &apos;foo&apos; has a complexity of 21. Maximum allowed is 20.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(complexity)&lt;/span&gt;"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">9</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">11</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">12</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">13</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">14</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">16</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">17</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">18</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">19</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">20</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">3</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">5</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">6</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">7</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">8</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">9</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">10</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">11</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">12</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">13</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">14</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">15</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">16</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">17</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">18</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">19</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">20</span><span class="token punctuation">)</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"https://en.wikipedia.org/wiki/Cyclomatic_complexity"},"consistent-return":{name:"consistent-return",value:"off",description:"禁止函数在不同分支返回不同类型的值",category:"",badExample:"",goodExample:"",reason:"缺少 TypeScript 的支持，类型判断是不准确的"},"consistent-this":{name:"consistent-this",value:"off",description:"限制 this 的别名",category:"",badExample:"",goodExample:""},"constructor-super":{name:"constructor-super",value:"error",description:"constructor 中必须有 super",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected to call &apos;super()&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(constructor-super)&lt;/span&gt;"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},curly:{name:"curly",value:["error","all"],description:"if 后面必须要有 {",category:"",badExample:'<span class="token keyword"><mark class="eslint-error" data-tip="Expected { after &apos;if&apos; condition.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(curly)&lt;/span&gt;">i</mark>f</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> foo<span class="token operator">++</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    foo<span class="token operator">++</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"可读性更好"},"default-case":{name:"default-case",value:"error",description:"switch 语句必须有 default",category:"",badExample:'<mark class="eslint-error" data-tip="Expected a default case.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(default-case)&lt;/span&gt;"><span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">\'bar\'</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token string">\'bar\'</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">default</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"避免部分场景下未调用 callback"},"dot-notation":{name:"dot-notation",value:"off",description:"禁止使用 foo['bar']，必须写成 foo.bar",category:"",badExample:"",goodExample:"",reason:"当需要写一系列属性的时候，可以更统一"},"eol-last":{name:"eol-last",value:["warn","always"],description:"文件最后一行必须有一个空行",category:"",badExample:"",goodExample:"",reason:"部分系统下的兼容性直到规范"},eqeqeq:{name:"eqeqeq",value:["error","always"],description:"必须使用 === 或 !==，禁止使用 == 或 !=",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator"><mark class="eslint-error" data-tip="Expected &apos;===&apos; and instead saw &apos;==&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(eqeqeq)&lt;/span&gt;">=</mark>=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator"><mark class="eslint-error" data-tip="Expected &apos;!==&apos; and instead saw &apos;!=&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(eqeqeq)&lt;/span&gt;">!</mark>=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"for-direction":{name:"for-direction",value:"error",description:"禁止方向错误的 for 循环",category:"",badExample:'<mark class="eslint-error" data-tip="The update clause in this loop moves the variable in the wrong direction.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(for-direction)&lt;/span&gt;"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>'},"func-name-matching":{name:"func-name-matching",value:["error","always",{includeCommonJSModuleExports:!1}],description:"函数赋值给变量的时候，函数名必须与变量名一致",category:"",badExample:'<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Function name `bar` should match variable name `foo`.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(func-name-matching)&lt;/span&gt;"><span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>'},"func-names":{name:"func-names",value:"off",description:"函数必须有名字",category:"",badExample:"",goodExample:""},"func-style":{name:"func-style",value:"off",description:"必须只使用函数声明或只使用函数表达式",category:"",badExample:"",goodExample:""},"getter-return":{name:"getter-return",value:"error",description:"getter 必须有返回值，并且禁止返回空",category:"",badExample:'<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation"><mark class="eslint-error" data-tip="Expected to return a value in getter &apos;name&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(getter-return)&lt;/span&gt;">(</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token comment">// do something</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Expected to return a value in getter &apos;name&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(getter-return)&lt;/span&gt;"><span class="token keyword">return</span><span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'Alex\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>\n    <span class="token keyword">get</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"global-require":{name:"global-require",value:"off",description:"require 必须在全局作用域下",category:"",badExample:"",goodExample:""},"guard-for-in":{name:"guard-for-in",value:"error",description:"for in 内部必须有 hasOwnProperty",category:"",badExample:'<mark class="eslint-error" data-tip="The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(guard-for-in)&lt;/span&gt;"><span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"handle-callback-err":{name:"handle-callback-err",value:"off",description:"callback 中的 err 必须被处理",category:"",badExample:"",goodExample:"",reason:"它是通过字符串匹配来判断函数参数 err 的，不准确"},"id-blacklist":{name:"id-blacklist",value:"off",description:"禁止使用指定的标识符",category:"",badExample:"",goodExample:""},"id-length":{name:"id-length",value:"off",description:"限制变量名长度",category:"",badExample:"",goodExample:""},"id-match":{name:"id-match",value:"off",description:"限制变量名必须匹配指定的正则表达式",category:"",badExample:"",goodExample:""},"import/no-default-export":{name:"import/no-default-export",value:"error",description:"禁止使用默认导出模块。",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<mark class="eslint-error" data-tip="Prefer named exports.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(import/no-default-export)&lt;/span&gt;"><span class="token keyword">export</span> <span class="token keyword">default</span> Foo<span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',reason:"默认导出会允许被引用时重命名，不便于重构与统一目标对象理解。\n不过对于 npm 模块的最外层封装，建议使用默认导出。"},"import/no-unused-modules":{name:"import/no-unused-modules",value:"error",description:"禁止保留未使用的模块依赖",category:"",badExample:"",goodExample:"",reason:"避免产生循环依赖的问题。"},"init-declarations":{name:"init-declarations",value:"off",description:"变量必须在定义的时候赋值",category:"",badExample:"",goodExample:""},"line-comment-position":{name:"line-comment-position",value:"off",description:"单行注释必须写在上一行",category:"",badExample:"",goodExample:""},"linebreak-style":{name:"linebreak-style",value:["error","unix"],description:"要求统一使用 unix 风格的换行符",category:"",badExample:"",goodExample:"",reason:"避免部分多行模板字符串在输出时产生连续换行问题"},"lines-between-class-members":{name:"lines-between-class-members",value:"off",description:"类的成员之间是否需要空行",category:"",badExample:"",goodExample:"",reason:"有时为了紧凑需要挨在一起，有时为了可读性需要空一行"},"max-classes-per-file":{name:"max-classes-per-file",value:"off",description:"限制一个文件中类的数量",category:"",badExample:"",goodExample:""},"max-depth":{name:"max-depth",value:["error",5],description:"代码块嵌套的深度禁止超过 5 层",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <mark class="eslint-error" data-tip="Blocks are nested too deeply (6). Maximum allowed is 5.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(max-depth)&lt;/span&gt;"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                        <span class="token punctuation">}</span></mark>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                    <span class="token punctuation">}</span>\n                <span class="token punctuation">}</span>\n            <span class="token punctuation">}</span>\n        <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"max-lines":{name:"max-lines",value:"off",description:"限制一个文件最多的行数",category:"",badExample:"",goodExample:""},"max-lines-per-function":{name:"max-lines-per-function",value:"off",description:"限制函数块中的代码行数",category:"",badExample:"",goodExample:""},"max-nested-callbacks":{name:"max-nested-callbacks",value:["error",{max:5}],description:"回调函数嵌套禁止超过 5 层",category:"",badExample:'<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token function">quux</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                    <span class="token function">quuz</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Too many nested callbacks (6). Maximum allowed is 5.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(max-nested-callbacks)&lt;/span&gt;"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark><span class="token punctuation">)</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token function">foo</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">await</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"max-params":{name:"max-params",value:["error",7],description:"函数的参数禁止超过 7 个",category:"",badExample:'<mark class="eslint-error" data-tip="Function &apos;foo&apos; has too many parameters (8). Maximum allowed is 7.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(max-params)&lt;/span&gt;"><span class="token keyword">function</span> <span class="token function">foo</span></mark><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4<span class="token punctuation">,</span> a5<span class="token punctuation">,</span> a6<span class="token punctuation">,</span> a7<span class="token punctuation">,</span> a8</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4<span class="token punctuation">,</span> a5<span class="token punctuation">,</span> a6<span class="token punctuation">,</span> a7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">,</span> a4<span class="token punctuation">,</span> a5<span class="token punctuation">,</span> a6<span class="token punctuation">,</span> a7<span class="token punctuation">,</span> a8 <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"max-statements":{name:"max-statements",value:"off",description:"限制函数块中的语句数量",category:"",badExample:"",goodExample:""},"max-statements-per-line":{name:"max-statements-per-line",value:"off",description:"限制一行中的语句数量",category:"",badExample:"",goodExample:""},"multiline-comment-style":{name:"multiline-comment-style",value:"off",description:"约束多行注释的格式",category:"",badExample:"",goodExample:"",reason:"能写注释已经不容易了，不需要限制太多"},"new-cap":{name:"new-cap",value:["error",{newIsCap:!0,capIsNew:!1,properties:!0}],description:"new 后面的类名必须首字母大写",category:"",badExample:'<span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="A constructor name should not start with a lowercase letter.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(new-cap)&lt;/span&gt;">f</mark>oo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">foo<span class="token punctuation">.</span><mark class="eslint-error" data-tip="A constructor name should not start with a lowercase letter.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(new-cap)&lt;/span&gt;">b</mark>ar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">new</span> <span class="token class-name">foo<span class="token punctuation">.</span>Bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-alert":{name:"no-alert",value:"off",description:"禁止使用 alert",category:"",badExample:"",goodExample:""},"no-array-constructor":{name:"no-array-constructor",value:"error",description:"禁止使用 Array 构造函数时传入的参数超过一个",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The array literal notation [] is preferable.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-array-constructor)&lt;/span&gt;"><span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2]</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="The array literal notation [] is preferable.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-array-constructor)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// [0, 1, 2]</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty × 3]</span>\n<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [empty × 3]</span>\n<span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["foo", "foo", "foo"]</span>\n<span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["foo", "foo", "foo"]</span>',reason:"参数为一个时表示创建一个指定长度的数组，比较常用\n参数为多个时表示创建一个指定内容的数组，此时可以用数组字面量实现，不必使用构造函数"},"no-async-promise-executor":{name:"no-async-promise-executor",value:"error",description:"禁止将 async 函数做为 new Promise 的回调函数",category:"",badExample:'<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword"><mark class="eslint-error" data-tip="Promise executor functions should not be async.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-async-promise-executor)&lt;/span&gt;">async</mark></span> <span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"出现这种情况时，一般不需要使用 new Promise 实现异步了"},"no-await-in-loop":{name:"no-await-in-loop",value:"off",description:"禁止将 await 写在循环里，因为这样就无法同时发送多个异步请求了",category:"",badExample:"",goodExample:"",reason:"要求太严格了，有时需要在循环中写 await"},"no-bitwise":{name:"no-bitwise",value:"off",description:"禁止使用位运算",category:"",badExample:"",goodExample:""},"no-buffer-constructor":{name:"no-buffer-constructor",value:"error",description:"禁止直接使用 Buffer",category:"",badExample:'<mark class="eslint-error" data-tip="new Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-buffer-constructor)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Buffer</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="Buffer() is deprecated. Use Buffer.from(), Buffer.alloc(), or Buffer.allocUnsafe() instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-buffer-constructor)&lt;/span&gt;"><span class="token function">Buffer</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nBuffer<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"Buffer 构造函数是已废弃的语法"},"no-caller":{name:"no-caller",value:"error",description:"禁止使用 caller 或 callee",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Avoid arguments.callee.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-caller)&lt;/span&gt;">arguments<span class="token punctuation">.</span><span class="token function">callee</span></mark><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"它们是已废弃的语法"},"no-case-declarations":{name:"no-case-declarations",value:"error",description:"switch 的 case 内有变量定义的时候，必须使用大括号将 case 内变成一个代码块",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <mark class="eslint-error" data-tip="Unexpected lexical declaration in case block.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-case-declarations)&lt;/span&gt;"><span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-class-assign":{name:"no-class-assign",value:"error",description:"禁止对已定义的 class 重新赋值",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<mark class="eslint-error" data-tip="&apos;Foo&apos; is a class.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-class-assign)&lt;/span&gt;">Foo</mark> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-compare-neg-zero":{name:"no-compare-neg-zero",value:"error",description:"禁止与负零进行比较",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Do not use the &apos;===&apos; operator to compare against -0.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-compare-neg-zero)&lt;/span&gt;">foo <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">0</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-cond-assign":{name:"no-cond-assign",value:["error","except-parens"],description:"禁止在测试表达式中使用赋值语句，除非这个赋值语句被括号包起来了",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span>bar <span class="token operator">===</span> <span class="token punctuation">(</span>foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-console":{name:"no-console",value:"off",description:"禁止使用 console",category:"",badExample:"",goodExample:""},"no-const-assign":{name:"no-const-assign",value:"error",description:"禁止对使用 const 定义的常量重新赋值",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="&apos;foo&apos; is constant.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-const-assign)&lt;/span&gt;">foo</mark> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> bar <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-constant-condition":{name:"no-constant-condition",value:["error",{checkLoops:!1}],description:"禁止将常量作为分支条件判断中的测试表达式，但允许作为循环条件判断中的测试表达式",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token boolean"><mark class="eslint-error" data-tip="Unexpected constant condition.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-constant-condition)&lt;/span&gt;">true</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number"><mark class="eslint-error" data-tip="Unexpected constant condition.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-constant-condition)&lt;/span&gt;">0</mark></span> <span class="token operator">?</span> <span class="token string">\'bar\'</span> <span class="token punctuation">:</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-continue":{name:"no-continue",value:"off",description:"禁止使用 continue",category:"",badExample:"",goodExample:""},"no-control-regex":{name:"no-control-regex",value:"off",description:"禁止在正则表达式中出现 Ctrl 键的 ASCII 表示，即禁止使用 /\\x1f/",category:"",badExample:"",goodExample:"",reason:"几乎不会遇到这种场景"},"no-debugger":{name:"no-debugger",value:"error",description:"禁止使用 debugger",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Unexpected &apos;debugger&apos; statement.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-debugger)&lt;/span&gt;"><span class="token keyword">debugger</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// debugger;</span>\n<span class="token punctuation">}</span>'},"no-delete-var":{name:"no-delete-var",value:"off",description:"禁止对一个变量使用 delete",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-div-regex":{name:"no-div-regex",value:"off",description:"禁止在正则表达式中出现形似除法操作符的开头，如 let a = /=foo/",category:"",badExample:"",goodExample:"",reason:"有代码高亮的话，在阅读这种代码时，也完全不会产生歧义或理解上的困难"},"no-dupe-args":{name:"no-dupe-args",value:"off",description:"禁止在函数参数中出现重复名称的参数",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-dupe-class-members":{name:"no-dupe-class-members",value:"error",description:"禁止重复定义类的成员",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Duplicate name &apos;bar&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-dupe-class-members)&lt;/span&gt;"><span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-dupe-keys":{name:"no-dupe-keys",value:"error",description:"禁止在对象字面量中出现重复的键名",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="Duplicate key &apos;bar&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-dupe-keys)&lt;/span&gt;">bar</mark><span class="token punctuation">:</span> <span class="token number">2</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    baz<span class="token punctuation">:</span> <span class="token number">2</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-duplicate-case":{name:"no-duplicate-case",value:"error",description:"禁止在 switch 语句中出现重复测试表达式的 case",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Duplicate case label.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-duplicate-case)&lt;/span&gt;"><span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-duplicate-imports":{name:"no-duplicate-imports",value:"error",description:"禁止重复导入模块",category:"",badExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="&apos;fs&apos; import is duplicated.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-duplicate-imports)&lt;/span&gt;"><span class="token keyword">import</span> <span class="token punctuation">{</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> readFile<span class="token punctuation">,</span> writeFile <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>'},"no-else-return":{name:"no-else-return",value:"off",description:"禁止在 else 内使用 return，必须改为提前结束",category:"",badExample:"",goodExample:"",reason:"else 中使用 return 可以使代码结构更清晰"},"no-empty":{name:"no-empty",value:["error",{allowEmptyCatch:!0}],description:"禁止出现空代码块，允许 catch 为空代码块",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <mark class="eslint-error" data-tip="Empty block statement.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-empty)&lt;/span&gt;"><span class="token punctuation">{</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-empty-character-class":{name:"no-empty-character-class",value:"error",description:"禁止在正则表达式中使用空的字符集 []",category:"",badExample:'<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><mark class="eslint-error" data-tip="Empty class.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-empty-character-class)&lt;/span&gt;">/abc[]/</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex">/abc[a-z]/</span><span class="token punctuation">;</span>'},"no-empty-function":{name:"no-empty-function",value:"off",description:"不允许有空函数",category:"",badExample:"",goodExample:"",reason:"有时需要将一个空函数设置为某个项的默认值"},"no-empty-pattern":{name:"no-empty-pattern",value:"error",description:"禁止解构赋值中出现空 {} 或 []",category:"",badExample:'<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Unexpected empty object pattern.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-empty-pattern)&lt;/span&gt;"><span class="token punctuation">{</span><span class="token punctuation">}</span></mark> <span class="token operator">=</span> foo<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>'},"no-eq-null":{name:"no-eq-null",value:"error",description:"禁止使用 foo == null，必须使用 foo === null",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Use &apos;===&apos; to compare with null.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-eq-null)&lt;/span&gt;">foo <span class="token operator">==</span> <span class="token keyword">null</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-eval":{name:"no-eval",value:"error",description:"禁止使用 eval",category:"",badExample:'<span class="token function"><mark class="eslint-error" data-tip="eval can be harmful.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-eval)&lt;/span&gt;">e</mark>val</span><span class="token punctuation">(</span><span class="token string">\'const foo = 0\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>'},"no-ex-assign":{name:"no-ex-assign",value:"error",description:"禁止将 catch 的第一个参数 error 重新赋值",category:"",badExample:'<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Do not assign to the exception parameter.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-ex-assign)&lt;/span&gt;">e</mark> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-extend-native":{name:"no-extend-native",value:"error",description:"禁止修改原生对象",category:"",badExample:'<mark class="eslint-error" data-tip="Array prototype is read only, properties should not be added.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-extend-native)&lt;/span&gt;"><span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">flat</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span></mark><span class="token punctuation">;</span>\n\n<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">flat</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// do something</span>\n<span class="token punctuation">}</span>\n\n<span class="token function">flat</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"修改原生对象可能会与将来版本的 js 冲突"},"no-extra-bind":{name:"no-extra-bind",value:"error",description:"禁止出现没必要的 bind",category:"",badExample:'<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function"><mark class="eslint-error" data-tip="The function binding is unnecessary.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-extra-bind)&lt;/span&gt;">b</mark>ind</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-extra-boolean-cast":{name:"no-extra-boolean-cast",value:"error",description:"禁止不必要的布尔类型转换",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><mark class="eslint-error" data-tip="Redundant double negation.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-extra-boolean-cast)&lt;/span&gt;"><span class="token operator">!</span>foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Redundant Boolean call.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-extra-boolean-cast)&lt;/span&gt;"><span class="token function">Boolean</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-extra-label":{name:"no-extra-label",value:"off",description:"禁止出现没必要的 label",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-fallthrough":{name:"no-fallthrough",value:"error",description:"switch 的 case 内必须有 break, return 或 throw，空的 case 除外",category:"",badExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Expected a &apos;break&apos; statement before &apos;case&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-fallthrough)&lt;/span&gt;"><span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">break</span><span class="token punctuation">;</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">switch</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span>\n    <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-func-assign":{name:"no-func-assign",value:"error",description:"禁止将一个函数声明重新赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<mark class="eslint-error" data-tip="&apos;foo&apos; is a function.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-func-assign)&lt;/span&gt;">foo</mark> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>'},"no-global-assign":{name:"no-global-assign",value:"error",description:"禁止对全局变量赋值",category:"",badExample:'<mark class="eslint-error" data-tip="Read-only global &apos;Object&apos; should not be modified.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-global-assign)&lt;/span&gt;">Object</mark> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>',goodExample:'foo <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>'},"no-implicit-coercion":{name:"no-implicit-coercion",value:["error",{allow:["!!"]}],description:"禁止使用 ~+ 等难以理解的类型转换，仅允许使用 !!",category:"",badExample:'<span class="token keyword">const</span> b <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `foo.indexOf(&apos;.&apos;) !== -1` instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implicit-coercion)&lt;/span&gt;"><span class="token operator">~</span>foo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `Number(foo)` instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implicit-coercion)&lt;/span&gt;"><span class="token operator">+</span>foo</mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> m <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `Number(foo)` instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implicit-coercion)&lt;/span&gt;"><span class="token number">1</span> <span class="token operator">*</span> foo</mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <mark class="eslint-error" data-tip="use `String(foo)` instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implicit-coercion)&lt;/span&gt;"><span class="token string">\'\'</span> <span class="token operator">+</span> foo</mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="use `foo = String(foo)` instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implicit-coercion)&lt;/span&gt;">foo <span class="token operator">+=</span> <span class="token string">\'\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> b <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> c <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>foo<span class="token punctuation">;</span>'},"no-implicit-globals":{name:"no-implicit-globals",value:"off",description:"禁止在全局作用域下定义变量或申明函数",category:"",badExample:"",goodExample:"",reason:"模块化之后，不会出现这种在全局作用域下定义变量的情况"},"no-implied-eval":{name:"no-implied-eval",value:"error",description:"禁止在 setTimeout 或 setInterval 中传入字符串",category:"",badExample:'<mark class="eslint-error" data-tip="Implied eval. Consider passing a function instead of a string.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-implied-eval)&lt;/span&gt;"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">\'alert("Hello World");\'</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">\'Hello World\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-inline-comments":{name:"no-inline-comments",value:"off",description:"禁止在代码后添加单行注释",category:"",badExample:"",goodExample:""},"no-inner-declarations":{name:"no-inner-declarations",value:["error","both"],description:"禁止在 if 代码块内出现函数声明",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Move function declaration to program root.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-inner-declarations)&lt;/span&gt;"><span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-invalid-regexp":{name:"no-invalid-regexp",value:"error",description:"禁止在 RegExp 构造函数中出现非法的正则表达式",category:"",badExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Invalid regular expression: /[/: Unterminated character class.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-invalid-regexp)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'[\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Invalid flags supplied to RegExp constructor &apos;z&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-invalid-regexp)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">,</span> <span class="token string">\'z\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'[a-z]\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'.\'</span><span class="token punctuation">,</span> <span class="token string">\'g\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-invalid-this":{name:"no-invalid-this",value:"off",description:"禁止在类之外的地方使用 this",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>a <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"会与 typescript 的类属性检测冲突"},"no-irregular-whitespace":{name:"no-irregular-whitespace",value:["error",{skipStrings:!0,skipComments:!1,skipRegExps:!0,skipTemplates:!0}],description:"禁止使用特殊空白符（比如全角空格），除非是出现在字符串、正则表达式或模版字符串中",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'　\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token regex">/　/</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token template-string"><span class="token string">`　`</span></span><span class="token punctuation">;</span>'},"no-iterator":{name:"no-iterator",value:"error",description:"禁止使用 __iterator__",category:"",badExample:'<mark class="eslint-error" data-tip="Reserved name &apos;__iterator__&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-iterator)&lt;/span&gt;"><span class="token class-name">Foo</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">__iterator__</span></mark> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FooIterator</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>\n    <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>foo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// [1, 2, 3]</span>',reason:"__iterator__ 是一个已废弃的属性\n使用 [Symbol.iterator] 替代它"},"no-label-var":{name:"no-label-var",value:"off",description:"禁止 label 名称与已定义的变量重复",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-labels":{name:"no-labels",value:"error",description:"禁止使用 label",category:"",badExample:'<mark class="eslint-error" data-tip="Unexpected labeled statement.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-labels)&lt;/span&gt;">loop<span class="token punctuation">:</span> <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <mark class="eslint-error" data-tip="Unexpected label in continue statement.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-labels)&lt;/span&gt;"><span class="token keyword">continue</span> loop<span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>\n<span class="token comment">// 0 2 3 4</span>',goodExample:'<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">continue</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">// 0 2 3 4</span>'},"no-lone-blocks":{name:"no-lone-blocks",value:"error",description:"禁止使用没必要的 {} 作为代码块",category:"",badExample:'<mark class="eslint-error" data-tip="Block is redundant.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-lone-blocks)&lt;/span&gt;"><span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-lonely-if":{name:"no-lonely-if",value:"off",description:"禁止 else 中只有一个单独的 if",category:"",badExample:"",goodExample:"",reason:"单独的 if 可以把逻辑表达的更清楚"},"no-loop-func":{name:"no-loop-func",value:"off",description:"禁止在循环内的函数内部出现循环体条件语句中定义的变量",category:"",badExample:"",goodExample:"",reason:"使用 let 就已经解决了这个问题了"},"no-magic-numbers":{name:"no-magic-numbers",value:"off",description:"禁止使用 magic numbers",category:"",badExample:"",goodExample:""},"no-misleading-character-class":{name:"no-misleading-character-class",value:"error",description:"禁止正则表达式中使用肉眼无法区分的特殊字符",category:"",badExample:'<span class="token regex"><mark class="eslint-error" data-tip="Unexpected combined character in character class.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-misleading-character-class)&lt;/span&gt;">/^[Á]$/u</mark></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">\'Á\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>',goodExample:'<span class="token regex">/^[A]$/u</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">\'A\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>',reason:"某些特殊字符很难看出差异，最好不要在正则中使用"},"no-mixed-requires":{name:"no-mixed-requires",value:"off",description:"相同类型的 require 必须放在一起",category:"",badExample:"",goodExample:""},"no-multi-assign":{name:"no-multi-assign",value:"off",description:"禁止连续赋值，比如 a = b = c = 5",category:"",badExample:"",goodExample:""},"no-multi-str":{name:"no-multi-str",value:"error",description:"禁止使用 \\ 来换行字符串",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string"><mark class="eslint-error" data-tip="Multiline support is limited to browsers supporting ES5 only.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-multi-str)&lt;/span&gt;">\'Line 1\\\nLine 2\'</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token string">`Line 1\nLine 2`</span></span><span class="token punctuation">;</span>'},"no-negated-condition":{name:"no-negated-condition",value:"off",description:"禁止 if 里有否定的表达式",category:"",badExample:"",goodExample:"",reason:"否定的表达式可以把逻辑表达的更清楚"},"no-nested-ternary":{name:"no-nested-ternary",value:"off",description:"禁止使用嵌套的三元表达式，比如 a ? b : c ? d : e",category:"",badExample:"",goodExample:""},"no-new":{name:"no-new",value:"error",description:"禁止直接 new 一个类而不赋值",category:"",badExample:'<mark class="eslint-error" data-tip="Do not use &apos;new&apos; for side effects.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"new 应该作为创建一个类的实例的方法，所以不能不赋值"},"no-new-func":{name:"no-new-func",value:"error",description:"禁止使用 new Function",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The Function constructor is eval.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-func)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">\'a\'</span><span class="token punctuation">,</span> <span class="token string">\'b\'</span><span class="token punctuation">,</span> <span class="token string">\'return a + b\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> <span class="token function-variable function">foo</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> a <span class="token operator">+</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',reason:"这和 eval 是等价的"},"no-new-object":{name:"no-new-object",value:"error",description:"禁止直接 new Object",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The object literal notation {} is preferrable.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-object)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-new-require":{name:"no-new-require",value:"error",description:"禁止直接 new require('foo')",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Unexpected use of new with require.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-require)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">require</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> Foo <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-new-symbol":{name:"no-new-symbol",value:"error",description:"禁止使用 new 来生成 Symbol",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="`Symbol` cannot be called as a constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-symbol)&lt;/span&gt;">Symbol</mark></span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-new-wrappers":{name:"no-new-wrappers",value:"error",description:"禁止使用 new 来生成 String, Number 或 Boolean",category:"",badExample:'<span class="token keyword">const</span> s <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use String as a constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-wrappers)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use Number as a constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-wrappers)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <mark class="eslint-error" data-tip="Do not use Boolean as a constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-new-wrappers)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">Boolean</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> n <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token function">Boolean</span><span class="token punctuation">(</span>someValue<span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-obj-calls":{name:"no-obj-calls",value:"error",description:"禁止将 Math, JSON 或 Reflect 直接作为函数调用",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="&apos;Math&apos; is not a function.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-obj-calls)&lt;/span&gt;"><span class="token function">Math</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="&apos;JSON&apos; is not a function.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-obj-calls)&lt;/span&gt;"><span class="token constant">JSON</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <mark class="eslint-error" data-tip="&apos;Reflect&apos; is not a function.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-obj-calls)&lt;/span&gt;"><span class="token function">Reflect</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string">\'{}\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">{</span> x<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token number">2</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">\'x\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-octal":{name:"no-octal",value:"off",description:"禁止使用 0 开头的数字表示八进制数",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-octal-escape":{name:"no-octal-escape",value:"off",description:"禁止使用八进制的转义符",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"no-param-reassign":{name:"no-param-reassign",value:"error",description:"禁止对函数的参数重新赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">bar</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Assignment to function parameter &apos;bar&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-param-reassign)&lt;/span&gt;">bar</mark> <span class="token operator">=</span> bar <span class="token operator">||</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">bar_</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    bar <span class="token operator">=</span> bar_ <span class="token operator">||</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-path-concat":{name:"no-path-concat",value:"error",description:"禁止对 __dirname 或 __filename 使用字符串连接",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use path.join() or path.resolve() instead of + to create paths.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-path-concat)&lt;/span&gt;">__dirname <span class="token operator">+</span> <span class="token string">\'/foo.js\'</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use path.join() or path.resolve() instead of + to create paths.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-path-concat)&lt;/span&gt;">__filename <span class="token operator">+</span> <span class="token string">\'/bar.js\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">\'path\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> foo <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'foo.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__filename<span class="token punctuation">,</span> <span class="token string">\'bar.js\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"不同平台下的路径符号不一致，建议使用 path 处理平台差异性"},"no-plusplus":{name:"no-plusplus",value:"off",description:"禁止使用 ++ 或 --",category:"",badExample:"",goodExample:""},"no-process-env":{name:"no-process-env",value:"off",description:"禁止使用 process.env.NODE_ENV",category:"",badExample:"",goodExample:""},"no-process-exit":{name:"no-process-exit",value:"off",description:"禁止使用 process.exit(0)",category:"",badExample:"",goodExample:""},"no-proto":{name:"no-proto",value:"error",description:"禁止使用 __proto__",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="The &apos;__proto__&apos; property is deprecated.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-proto)&lt;/span&gt;">bar<span class="token punctuation">.</span>__proto__</mark><span class="token punctuation">;</span>\n<mark class="eslint-error" data-tip="The &apos;__proto__&apos; property is deprecated.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-proto)&lt;/span&gt;">bar<span class="token punctuation">.</span>__proto__</mark> <span class="token operator">=</span> baz<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getPrototypeOf</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\nObject<span class="token punctuation">.</span><span class="token function">setPrototypeOf</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> baz<span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"__proto__ 是已废弃的语法"},"no-prototype-builtins":{name:"no-prototype-builtins",value:"off",description:"禁止使用 hasOwnProperty, isPrototypeOf 或 propertyIsEnumerable",category:"",badExample:"",goodExample:"",reason:"hasOwnProperty 比较常用"},"no-redeclare":{name:"no-redeclare",value:"off",description:"禁止重复定义变量",category:"",badExample:"",goodExample:"",reason:"禁用 var 之后，编译阶段就会报错了"},"no-regex-spaces":{name:"no-regex-spaces",value:"error",description:"禁止在正则表达式中出现连续的空格",category:"",badExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token regex"><mark class="eslint-error" data-tip="Spaces are hard to count. Use {3}.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-regex-spaces)&lt;/span&gt;">/foo   bar/</mark></span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Spaces are hard to count. Use {3}.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-regex-spaces)&lt;/span&gt;"><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'foo   bar\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token regex">/foo {3}bar/</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">\'foo {3}bar\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-restricted-globals":{name:"no-restricted-globals",value:"off",description:"禁止使用指定的全局变量",category:"",badExample:"",goodExample:""},"no-restricted-imports":{name:"no-restricted-imports",value:"off",description:"禁止导入指定的模块",category:"",badExample:"",goodExample:""},"no-restricted-modules":{name:"no-restricted-modules",value:"off",description:"禁止使用指定的模块",category:"",badExample:"",goodExample:""},"no-restricted-properties":{name:"no-restricted-properties",value:"off",description:"禁止使用指定的对象属性",category:"",badExample:"",goodExample:""},"no-restricted-syntax":{name:"no-restricted-syntax",value:"off",description:"禁止使用指定的语法",category:"",badExample:"",goodExample:""},"no-return-assign":{name:"no-return-assign",value:["error","always"],description:"禁止在 return 语句里赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Return statement should not contain assignment.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-return-assign)&lt;/span&gt;"><span class="token keyword">return</span> <span class="token punctuation">(</span>bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> bar<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-return-await":{name:"no-return-await",value:"error",description:"禁止在 return 语句里使用 await",category:"",badExample:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Redundant use of `await` on a return value.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-return-await)&lt;/span&gt;"><span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> b<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-script-url":{name:"no-script-url",value:"off",description:"禁止出现 location.href = 'javascript:void(0)';",category:"",badExample:"",goodExample:"",reason:"有些场景下还是需要用到这个"},"no-self-assign":{name:"no-self-assign",value:"error",description:"禁止将自己赋值给自己",category:"",badExample:'foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="&apos;foo&apos; is assigned to itself.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-self-assign)&lt;/span&gt;">foo</mark><span class="token punctuation">;</span>',goodExample:'foo <span class="token operator">=</span> bar<span class="token punctuation">;</span>'},"no-self-compare":{name:"no-self-compare",value:"error",description:"禁止将自己与自己比较",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Comparing to itself is potentially pointless.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-self-compare)&lt;/span&gt;">foo <span class="token operator">===</span> foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Comparing to itself is potentially pointless.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-self-compare)&lt;/span&gt;"><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> bar<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-sequences":{name:"no-sequences",value:"error",description:"禁止使用逗号操作符",category:"",badExample:'<span class="token punctuation">(</span>foo <span class="token operator">=</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation"><mark class="eslint-error" data-tip="Unexpected use of comma operator.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-sequences)&lt;/span&gt;">)</mark></span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">;</span>',goodExample:'<span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>'},"no-shadow":{name:"no-shadow",value:"off",description:"禁止变量名与上层作用域内的已定义的变量重复",category:"",badExample:"",goodExample:"",reason:"很多时候函数的形参和传参是同名的"},"no-shadow-restricted-names":{name:"no-shadow-restricted-names",value:"error",description:"禁止使用保留字作为变量名",category:"",badExample:'<span class="token keyword">const</span> <span class="token keyword"><mark class="eslint-error" data-tip="Shadowing of global property &apos;undefined&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-shadow-restricted-names)&lt;/span&gt;">undefined</mark></span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token number"><mark class="eslint-error" data-tip="Shadowing of global property &apos;NaN&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-shadow-restricted-names)&lt;/span&gt;">NaN</mark></span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">function</span> <span class="token function"><mark class="eslint-error" data-tip="Shadowing of global property &apos;Infinity&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-shadow-restricted-names)&lt;/span&gt;">Infinity</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">Infinity</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-sparse-arrays":{name:"no-sparse-arrays",value:"error",description:"禁止在数组中出现连续的逗号",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Unexpected comma in middle of array.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-sparse-arrays)&lt;/span&gt;"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>'},"no-sync":{name:"no-sync",value:"off",description:"禁止使用 node 中的同步的方法，比如 fs.readFileSync",category:"",badExample:"",goodExample:""},"no-template-curly-in-string":{name:"no-template-curly-in-string",value:"error",description:"禁止在普通字符串中出现模版字符串里的变量形式",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string"><mark class="eslint-error" data-tip="Unexpected template string expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-template-curly-in-string)&lt;/span&gt;">\'Hello ${bar}\'</mark></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'Hello {bar}\'</span><span class="token punctuation">;</span>'},"no-ternary":{name:"no-ternary",value:"off",description:"禁止使用三元表达式",category:"",badExample:"",goodExample:""},"no-this-before-super":{name:"no-this-before-super",value:"error",description:"禁止在 super 被调用之前使用 this 或 super",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword"><mark class="eslint-error" data-tip="&apos;this&apos; is not allowed before &apos;super()&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-this-before-super)&lt;/span&gt;">this</mark></span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token keyword">extends</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-throw-literal":{name:"no-throw-literal",value:"error",description:"禁止 throw 字面量，必须 throw 一个 Error 对象",category:"",badExample:'<mark class="eslint-error" data-tip="Expected an error object to be thrown.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-throw-literal)&lt;/span&gt;"><span class="token keyword">throw</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an error object to be thrown.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-throw-literal)&lt;/span&gt;"><span class="token keyword">throw</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-undef":{name:"no-undef",value:"error",description:"禁止使用未定义的变量",category:"",badExample:'<span class="token function"><mark class="eslint-error" data-tip="&apos;foo&apos; is not defined.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-undef)&lt;/span&gt;">foo</mark></span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="&apos;bar&apos; is not defined.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-undef)&lt;/span&gt;">bar</mark><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">(</span>bar<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> baz <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-undef-init":{name:"no-undef-init",value:"error",description:"禁止将 undefined 赋值给变量",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="It&apos;s not necessary to initialize &apos;foo&apos; to undefined.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-undef-init)&lt;/span&gt;">foo <span class="token operator">=</span> <span class="token keyword">undefined</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo<span class="token punctuation">;</span>'},"no-undefined":{name:"no-undefined",value:"off",description:"禁止使用 undefined",category:"",badExample:"",goodExample:""},"no-underscore-dangle":{name:"no-underscore-dangle",value:"off",description:"禁止变量名出现下划线",category:"",badExample:"",goodExample:""},"no-unmodified-loop-condition":{name:"no-unmodified-loop-condition",value:"error",description:"循环内必须对循环条件中的变量有修改",category:"",badExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="&apos;foo&apos; is not modified in this loop.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unmodified-loop-condition)&lt;/span&gt;">foo</mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n<span class="token keyword">while</span> <span class="token punctuation">(</span>foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    foo<span class="token operator">--</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-unneeded-ternary":{name:"no-unneeded-ternary",value:"off",description:"必须使用 !a 替代 a ? false : true",category:"",badExample:"",goodExample:"",reason:"后者表达的更清晰"},"no-unreachable":{name:"no-unreachable",value:"error",description:"禁止在 return, throw, break 或 continue 之后还有代码",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="Unreachable code.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unreachable)&lt;/span&gt;"><span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token comment">// const bar = 1;</span>\n<span class="token punctuation">}</span>'},"no-unsafe-finally":{name:"no-unsafe-finally",value:"error",description:"禁止在 finally 中出现 return, throw, break 或 continue",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        <span class="token comment">// finally 会在 try 之前执行，故会 return 2</span>\n        <mark class="eslint-error" data-tip="Unsafe usage of ReturnStatement.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unsafe-finally)&lt;/span&gt;"><span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span></mark>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">try</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>\n        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"finally 中的语句会在 try 之前执行"},"no-unsafe-negation":{name:"no-unsafe-negation",value:"error",description:"禁止在 in 或 instanceof 操作符的左侧变量前使用感叹号",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Unexpected negating the left operand of &apos;in&apos; operator.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unsafe-negation)&lt;/span&gt;"><span class="token operator">!</span>key</mark> <span class="token keyword">in</span> object<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Unexpected negating the left operand of &apos;instanceof&apos; operator.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unsafe-negation)&lt;/span&gt;"><span class="token operator">!</span>obj</mark> <span class="token keyword">instanceof</span> <span class="token class-name">SomeClass</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> object<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>obj <span class="token keyword">instanceof</span> <span class="token class-name">SomeClass</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"no-unused-expressions":{name:"no-unused-expressions",value:["error",{allowShortCircuit:!0,allowTernary:!0,allowTaggedTemplates:!0}],description:"禁止无用的表达式",category:"",badExample:'<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;"><span class="token number">1</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;">foo<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;"><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;">foo <span class="token operator">&amp;&amp;</span> bar<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;">foo <span class="token operator">||</span> bar<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;">foo <span class="token operator">?</span> bar <span class="token punctuation">:</span> baz<span class="token punctuation">;</span></mark>\n<mark class="eslint-error" data-tip="Expected an assignment or function call and instead saw an expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-expressions)&lt;/span&gt;"><span class="token template-string"><span class="token string">`bar`</span></span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token string">\'use strict\'</span><span class="token punctuation">;</span>\nfoo <span class="token operator">&amp;&amp;</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">||</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo <span class="token operator">?</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo<span class="token template-string"><span class="token string">`bar`</span></span><span class="token punctuation">;</span>'},"no-unused-labels":{name:"no-unused-labels",value:"off",description:"禁止出现没用到的 label",category:"",badExample:"",goodExample:"",reason:"已经禁止使用 label 了"},"no-unused-vars":{name:"no-unused-vars",value:["error",{vars:"all",args:"none",ignoreRestSiblings:!1,caughtErrors:"none"}],description:"已定义的变量必须使用",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="&apos;foo&apos; is assigned a value but never used.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-vars)&lt;/span&gt;">foo</mark> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nfoo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function"><mark class="eslint-error" data-tip="&apos;bar&apos; is defined but never used.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-vars)&lt;/span&gt;">bar</mark></span><span class="token punctuation">(</span><span class="token parameter">baz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="&apos;baz&apos; is assigned a value but never used.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-vars)&lt;/span&gt;">baz</mark><span class="token punctuation">,</span> <span class="token operator">...</span><mark class="eslint-error" data-tip="&apos;rest&apos; is assigned a value but never used.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-unused-vars)&lt;/span&gt;">rest</mark> <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token parameter">baz</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">{</span> baz<span class="token punctuation">,</span> <span class="token operator">...</span>rest <span class="token punctuation">}</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> rest<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"no-use-before-define":{name:"no-use-before-define",value:["error",{variables:!1,functions:!1,classes:!1}],description:"变量必须先定义后使用",category:"",badExample:'console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="&apos;foo&apos; was used before it was defined.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-use-before-define)&lt;/span&gt;">foo</mark><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name"><mark class="eslint-error" data-tip="&apos;Baz&apos; was used before it was defined.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-use-before-define)&lt;/span&gt;">Baz</mark></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">new</span> <span class="token class-name">Baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">class</span> <span class="token class-name">Baz</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token keyword">new</span> <span class="token class-name">Baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-useless-call":{name:"no-useless-call",value:"off",description:"禁止出现没必要的 call 或 apply",category:"",badExample:'<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo(1, 2, 3)</span>\n<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo(1, 2, 3)</span>\n\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo.bar(1, 2, 3);</span>\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo.bar(1, 2, 3);</span>',goodExample:'<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">foo</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>bar<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nfoo<span class="token punctuation">.</span><span class="token function">bar</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>baz<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"no-useless-catch":{name:"no-useless-catch",value:"error",description:"禁止在 catch 中仅仅只是把错误 throw 出去",category:"",badExample:'<mark class="eslint-error" data-tip="Unnecessary try/catch wrapper.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-catch)&lt;/span&gt;"><span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">try</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingThatMightThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token function">doSomethingBeforeRethrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">throw</span> e<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"这样的 catch 是没有意义的，等价于直接执行 try 里的代码"},"no-useless-computed-key":{name:"no-useless-computed-key",value:"error",description:"禁止出现没必要的计算键名",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Unnecessarily computed property [&apos;1&apos;] found.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-computed-key)&lt;/span&gt;"><span class="token punctuation">[</span><span class="token string">\'1\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span></mark><span class="token punctuation">,</span>\n    <mark class="eslint-error" data-tip="Unnecessarily computed property [&apos;bar&apos;] found.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-computed-key)&lt;/span&gt;"><span class="token punctuation">[</span><span class="token string">\'bar\'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">\'bar\'</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    bar<span class="token punctuation">:</span> <span class="token string">\'bar\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"no-useless-concat":{name:"no-useless-concat",value:"error",description:"禁止出现没必要的字符串连接",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'f\'</span> <span class="token operator"><mark class="eslint-error" data-tip="Unexpected string concatenation of literals.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-concat)&lt;/span&gt;">+</mark></span> <span class="token string">\'oo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token template-string"><span class="token string">`b`</span></span> <span class="token operator"><mark class="eslint-error" data-tip="Unexpected string concatenation of literals.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-concat)&lt;/span&gt;">+</mark></span> <span class="token template-string"><span class="token string">`ar`</span></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'fo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token template-string"><span class="token string">`ar`</span></span><span class="token punctuation">;</span>'},"no-useless-constructor":{name:"no-useless-constructor",value:"error",description:"禁止出现没必要的 constructor",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-constructor)&lt;/span&gt;"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-constructor)&lt;/span&gt;"><span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token keyword">extends</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"no-useless-escape":{name:"no-useless-escape",value:"off",description:"禁止出现没必要的转义",category:"",badExample:"",goodExample:"",reason:"转义可以使代码更易懂"},"no-useless-rename":{name:"no-useless-rename",value:"error",description:"禁止解构赋值时出现同样名字的的重命名，比如 let { foo: foo } = bar;",category:"",badExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> <mark class="eslint-error" data-tip="Destructuring assignment baz unnecessarily renamed.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-useless-rename)&lt;/span&gt;">baz<span class="token punctuation">:</span> baz</mark> <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> <span class="token punctuation">{</span> foo <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">export</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> <span class="token punctuation">{</span> baz <span class="token punctuation">}</span> <span class="token operator">=</span> foo<span class="token punctuation">;</span>'},"no-useless-return":{name:"no-useless-return",value:"off",description:"禁止没必要的 return",category:"",badExample:"",goodExample:""},"no-var":{name:"no-var",value:"error",description:"禁止使用 var",category:"",badExample:'<mark class="eslint-error" data-tip="Unexpected var, use let or const instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-var)&lt;/span&gt;"><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span></mark>',goodExample:'<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>'},"no-void":{name:"no-void",value:"error",description:"禁止使用 void",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <mark class="eslint-error" data-tip="Expected &apos;undefined&apos; and instead saw &apos;void&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(no-void)&lt;/span&gt;"><span class="token keyword">void</span> <span class="token number">0</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"no-warning-comments":{name:"no-warning-comments",value:"off",description:"禁止注释中出现 TODO 和 FIXME",category:"",badExample:"",goodExample:""},"no-with":{name:"no-with",value:"off",description:"禁止使用 with",category:"",badExample:"",goodExample:"",reason:"编译阶段就会报错了"},"object-shorthand":{name:"object-shorthand",value:["error","always"],description:"必须使用 a = {b} 而不是 a = {b: b}",category:"",badExample:"",goodExample:"",reason:"减少代码冗余"},"one-var":{name:"one-var",value:"off",description:"禁止变量申明时用逗号一次申明多个",category:"",badExample:'<span class="token keyword">let</span> foo<span class="token punctuation">,</span> bar<span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>\n    qux <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo<span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar<span class="token punctuation">;</span>\n<span class="token keyword">const</span> baz <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> qux <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>'},"operator-assignment":{name:"operator-assignment",value:"off",description:"必须使用 x = x + y 而不是 x += y",category:"",badExample:"",goodExample:""},"padding-line-between-statements":{name:"padding-line-between-statements",value:"off",description:"限制语句之间的空行规则，比如变量定义完之后必须要空行",category:"",badExample:"",goodExample:""},"prefer-arrow-callback":{name:"prefer-arrow-callback",value:["error",{allowNamedFunctions:!0}],description:"必须使用箭头函数作为回调",category:"",badExample:'<span class="token function">foo</span><span class="token punctuation">(</span><mark class="eslint-error" data-tip="Unexpected function expression.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-arrow-callback)&lt;/span&gt;"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> a<span class="token punctuation">;</span> \n<span class="token punctuation">}</span></mark><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span> <span class="token operator">=></span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>',reason:"避免产生闭包中 this 指向的问题。\n特殊规则，允许有名称定义的函数使用。"},"prefer-const":{name:"prefer-const",value:"error",description:"申明后不再被修改的变量必须使用 const 来申明",category:"",badExample:'<span class="token keyword">let</span> <mark class="eslint-error" data-tip="&apos;foo&apos; is never reassigned. Use &apos;const&apos; instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-const)&lt;/span&gt;">foo</mark> <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>'},"prefer-destructuring":{name:"prefer-destructuring",value:"off",description:"必须使用解构赋值",category:"",badExample:"",goodExample:""},"prefer-named-capture-group":{name:"prefer-named-capture-group",value:"off",description:"使用 ES2018 中的正则表达式命名组",category:"",badExample:"",goodExample:"",reason:"正则表达式已经较难理解了，没必要强制加上命名组"},"prefer-numeric-literals":{name:"prefer-numeric-literals",value:"error",description:"必须使用 0b11111011 而不是 parseInt()",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use binary literals instead of parseInt().&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-numeric-literals)&lt;/span&gt;"><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">\'111110111\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token number">0b11111011</span><span class="token punctuation">;</span>'},"prefer-object-spread":{name:"prefer-object-spread",value:"error",description:"必须使用 ... 而不是 Object.assign，除非 Object.assign 的第一个参数是一个变量",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use an object spread instead of `Object.assign` eg: `{ ...foo }`.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-object-spread)&lt;/span&gt;">Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bar<span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>bar <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token comment">// 第一个参数为变量时允许使用 Object.assign</span>\nObject<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span>foo<span class="token punctuation">,</span> baz<span class="token punctuation">)</span><span class="token punctuation">;</span>'},"prefer-promise-reject-errors":{name:"prefer-promise-reject-errors",value:"error",description:"Promise 的 reject 中必须传入 Error 对象，而不是字面量",category:"",badExample:'<mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-promise-reject-errors)&lt;/span&gt;">Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-promise-reject-errors)&lt;/span&gt;"><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Expected the Promise rejection reason to be an Error.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(prefer-promise-reject-errors)&lt;/span&gt;"><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>',goodExample:'Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"prefer-rest-params":{name:"prefer-rest-params",value:"off",description:"必须使用 ...args 而不是 arguments",category:"",badExample:"",goodExample:""},"prefer-spread":{name:"prefer-spread",value:"off",description:"必须使用 ... 而不是 apply，比如 foo(...args)",category:"",badExample:"",goodExample:""},"prefer-template":{name:"prefer-template",value:"off",description:"必须使用模版字符串而不是字符串连接",category:"",badExample:"",goodExample:""},radix:{name:"radix",value:"error",description:"parseInt 必须传入第二个参数",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Missing radix parameter.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(radix)&lt;/span&gt;"><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">\'071\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span> <span class="token comment">// 57</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">\'071\'</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 71</span>'},"require-atomic-updates":{name:"require-atomic-updates",value:"off",description:"禁止将 await 或 yield 的结果做为运算符的后面项\nhttps://github.com/eslint/eslint/issues/11899\n在上面 issue 修复之前，关闭此规则",category:"",badExample:"",goodExample:"",reason:"这样会导致不符合预期的结果"},"require-await":{name:"require-await",value:"off",description:"async 函数中必须存在 await 语句",category:"",badExample:"",goodExample:""},"require-unicode-regexp":{name:"require-unicode-regexp",value:"off",description:"正则表达式中必须要加上 u 标志",category:"",badExample:"",goodExample:""},"require-yield":{name:"require-yield",value:"error",description:"generator 函数内必须有 yield",category:"",badExample:'<mark class="eslint-error" data-tip="This generator function does not have &apos;yield&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(require-yield)&lt;/span&gt;"><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>\n    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"sort-imports":{name:"sort-imports",value:"off",description:"导入必须按规则排序",category:"",badExample:"",goodExample:""},"sort-keys":{name:"sort-keys",value:"off",description:"对象字面量的键名必须排好序",category:"",badExample:"",goodExample:""},"sort-vars":{name:"sort-vars",value:"off",description:"变量申明必须排好序",category:"",badExample:"",goodExample:""},"spaced-comment":{name:"spaced-comment",value:["error","always",{exceptions:["#alt","#endalt"],markers:["#","#module","#endmodule"]}],description:"注释的斜线或 * 后必须有空格\n特殊规则，nstarter 模板中的代码块声明标签必须与注释符号相连。",category:"",badExample:'<span class="token comment"><mark class="eslint-error" data-tip="Expected exception block, space or tab after &apos;//&apos; in comment.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(spaced-comment)&lt;/span&gt;">//foo</mark></span>\n<span class="token comment"><mark class="eslint-error" data-tip="Expected exception block, space or tab after &apos;/*&apos; in comment.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(spaced-comment)&lt;/span&gt;">/*bar */</mark></span>\n<span class="token comment"><mark class="eslint-error" data-tip="Expected exception block, space or tab after &apos;/**&apos; in comment.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(spaced-comment)&lt;/span&gt;">/**baz */</mark></span>',goodExample:'<span class="token comment">// foo</span>\n<span class="token comment">/* bar */</span>\n<span class="token comment">/** baz */</span>',reason:"提升可读性"},strict:{name:"strict",value:["error","never"],description:"禁止使用 'strict';",category:"",badExample:'<mark class="eslint-error" data-tip="&apos;use strict&apos; is unnecessary inside of modules.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(strict)&lt;/span&gt;"><span class="token string">\'use strict\'</span><span class="token punctuation">;</span></mark>\n<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="&apos;use strict&apos; is unnecessary inside of modules.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(strict)&lt;/span&gt;"><span class="token string">\'use strict\'</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"symbol-description":{name:"symbol-description",value:"error",description:"创建 Symbol 时必须传入参数",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <mark class="eslint-error" data-tip="Expected Symbol to have a description.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(symbol-description)&lt;/span&gt;"><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">\'foo\'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>'},"template-curly-spacing":{name:"template-curly-spacing",value:["warn","always"],description:"模板字符串变量括号前后保留空格。",category:"",badExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation"><mark class="eslint-error" data-tip="Expected space(s) after &apos;${&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(template-curly-spacing)&lt;/span&gt;">$</mark>{</span>bar<span class="token interpolation-punctuation punctuation"><mark class="eslint-error" data-tip="Expected space(s) before &apos;}&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(template-curly-spacing)&lt;/span&gt;">}</mark></span></span><span class="token string">`</span></span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo <span class="token operator">=</span> <span class="token template-string"><span class="token string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> bar <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">`</span></span><span class="token punctuation">;</span>',reason:"可读性更好"},"use-isnan":{name:"use-isnan",value:"error",description:"必须使用 isNaN(foo) 而不是 foo === NaN",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><mark class="eslint-error" data-tip="Use the isNaN function to compare with NaN.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(use-isnan)&lt;/span&gt;">foo <span class="token operator">===</span> <span class="token number">NaN</span></mark><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"valid-typeof":{name:"valid-typeof",value:"error",description:"typeof 表达式比较的对象必须是 'undefined', 'object', 'boolean', 'number', 'string', 'function', 'symbol', 或 'bigint'",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string"><mark class="eslint-error" data-tip="Invalid typeof comparison value.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(valid-typeof)&lt;/span&gt;">\'numbe\'</mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> foo <span class="token operator">===</span> <span class="token string">\'number\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'},"vars-on-top":{name:"vars-on-top",value:"off",description:"var 必须在作用域的最前面",category:"",badExample:"",goodExample:""},yoda:{name:"yoda",value:"off",description:"必须使用 if (foo === 5) 而不是 if (5 === foo)",category:"",badExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">===</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;</span> foo<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;</span> foo <span class="token operator">&amp;&amp;</span> foo <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n<span class="token punctuation">}</span>'}};
},{}],"gVbj":[function(require,module,exports) {
module.exports={"@typescript-eslint/adjacent-overload-signatures":{name:"@typescript-eslint/adjacent-overload-signatures",value:"error",description:"重载的函数必须写在一起",category:"",badExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> NSFoo1 <span class="token punctuation">{</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &apos;foo&apos; signatures should be adjacent.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/adjacent-overload-signatures)&lt;/span&gt;"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TypeFoo1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &apos;foo&apos; signatures should be adjacent.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/adjacent-overload-signatures)&lt;/span&gt;"><span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IFoo1</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <mark class="eslint-error" data-tip="All &apos;foo&apos; signatures should be adjacent.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/adjacent-overload-signatures)&lt;/span&gt;"><span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> NSFoo2 <span class="token punctuation">{</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">s<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">n<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TypeFoo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">IFoo2</span> <span class="token punctuation">{</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">foo</span><span class="token punctuation">(</span>sn<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n    <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"增加可读性"},"@typescript-eslint/array-type":{name:"@typescript-eslint/array-type",value:"off",description:"限制数组类型必须使用 Array<T> 或 T[]",category:"",badExample:"",goodExample:"",reason:"允许灵活运用两者"},"@typescript-eslint/await-thenable":{name:"@typescript-eslint/await-thenable",value:"off",description:"禁止对没有 then 方法的对象使用 await",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/ban-ts-ignore":{name:"@typescript-eslint/ban-ts-ignore",value:"off",description:"是否允许使用 // @ts-ignore 来忽略编译错误",category:"",badExample:"",goodExample:"",reason:"既然已经使用注释来忽略编译错误了，说明已经清楚可能带来的后果"},"@typescript-eslint/ban-types":{name:"@typescript-eslint/ban-types",value:["error",{types:{Object:{message:"Use '{}' instead",fixWith:"{}"},String:{message:"Use 'string' instead",fixWith:"string"},Number:{message:"Use 'number' instead",fixWith:"number"},Boolean:{message:"Use 'boolean' instead",fixWith:"boolean"}}}],description:"禁止使用指定的类型\n不使用 Object, String, Number, Boolean 类型，而使用原生的 ts 类型",category:"",badExample:'<span class="token keyword">let</span> foo<span class="token punctuation">:</span> <mark class="eslint-error" data-tip="Don&apos;t use &apos;Object&apos; as a type. Use &apos;{}&apos; instead&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/ban-types)&lt;/span&gt;">Object</mark> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar<span class="token punctuation">:</span> <mark class="eslint-error" data-tip="Don&apos;t use &apos;String&apos; as a type. Use &apos;string&apos; instead&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/ban-types)&lt;/span&gt;">String</mark> <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> baz<span class="token punctuation">:</span> <mark class="eslint-error" data-tip="Don&apos;t use &apos;Number&apos; as a type. Use &apos;number&apos; instead&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/ban-types)&lt;/span&gt;">Number</mark> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> qux<span class="token punctuation">:</span> <mark class="eslint-error" data-tip="Don&apos;t use &apos;Boolean&apos; as a type. Use &apos;boolean&apos; instead&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/ban-types)&lt;/span&gt;">Boolean</mark> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> foo<span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> bar<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> baz<span class="token punctuation">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">let</span> qux<span class="token punctuation">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>',reason:"统一代码风格"},"@typescript-eslint/camelcase":{name:"@typescript-eslint/camelcase",value:"off",description:"变量名必须是 camelcase 风格的",category:"",badExample:"",goodExample:"",reason:"很多 api 或文件名都不是 camelcase 风格的"},"@typescript-eslint/class-name-casing":{name:"@typescript-eslint/class-name-casing",value:"error",description:"类名与接口名必须为驼峰式",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name"><mark class="eslint-error" data-tip="Class &apos;Invalid_Class_Name&apos; must be PascalCased.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/class-name-casing)&lt;/span&gt;">Invalid_Class_Name</mark></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name"><mark class="eslint-error" data-tip="Interface &apos;invalidInterface&apos; must be PascalCased.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/class-name-casing)&lt;/span&gt;">invalidInterface</mark></span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">ValidClassName</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\n<span class="token keyword">interface</span> <span class="token class-name">ValidInterface</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>'},"@typescript-eslint/consistent-type-assertions":{name:"@typescript-eslint/consistent-type-assertions",value:["error",{assertionStyle:"as",objectLiteralTypeAssertions:"never"}],description:"类型断言必须使用 as Type，禁止使用 <Type>，禁止对对象字面量进行类型断言（断言成 any 是允许的）",category:"",badExample:'<span class="token keyword">let</span> bar1<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Use &apos;as string&apos; instead of &apos;&lt;string&gt;&apos;.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/consistent-type-assertions)&lt;/span&gt;"><span class="token operator">&lt;</span><span class="token builtin">string</span><span class="token operator">></span>bar1</mark><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> baz1 <span class="token operator">=</span> <mark class="eslint-error" data-tip="Always prefer const x: T = { ... }.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/consistent-type-assertions)&lt;/span&gt;"><span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span> <span class="token keyword">as</span> object</mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">let</span> bar2<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> foo2 <span class="token operator">=</span> bar2 <span class="token keyword">as</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> baz2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token number">1</span>\n<span class="token punctuation">}</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">;</span>',reason:"<Type> 容易被理解为 jsx"},"@typescript-eslint/consistent-type-definitions":{name:"@typescript-eslint/consistent-type-definitions",value:["error","interface"],description:"优先使用 interface 而不是 type",category:"",badExample:'<span class="token keyword">type</span> <mark class="eslint-error" data-tip="Use an `interface` instead of a `type`&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/consistent-type-definitions)&lt;/span&gt;">Foo1</mark> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"interface 可以 implement, extend 和 merge"},"@typescript-eslint/explicit-function-return-type":{name:"@typescript-eslint/explicit-function-return-type",value:"off",description:"函数返回值必须与声明的类型一致",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/explicit-member-accessibility":{name:"@typescript-eslint/explicit-member-accessibility",value:["error",{accessibility:"explicit",overrides:{constructors:"no-public"}}],description:"必须设置类的成员的可访问性\n特殊规则，对于 constructor，不要求指定其 public 状态。",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on class property foo.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;"><span class="token keyword">static</span> foo <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on method definition getFoo.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;"><span class="token keyword">static</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on class property bar.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;">bar <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on method definition getBar.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;"><span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on get property accessor baz.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;"><span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n    <mark class="eslint-error" data-tip="Missing accessibility modifier on set property accessor baz.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/explicit-member-accessibility)&lt;/span&gt;"><span class="token keyword">set</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> foo <span class="token operator">=</span> <span class="token string">\'foo\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> bar <span class="token operator">=</span> <span class="token string">\'bar\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> <span class="token function">getBar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">get</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token string">\'baz\'</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">set</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"将不需要公开的成员设为私有的，可以增强代码的可理解性，对文档输出也很友好"},"@typescript-eslint/generic-type-naming":{name:"@typescript-eslint/generic-type-naming",value:"off",description:"约束泛型的命名规则",category:"",badExample:"",goodExample:""},"@typescript-eslint/indent":{name:"@typescript-eslint/indent",value:"off",description:"缩进规定为 4 空格",category:"",badExample:"",goodExample:"",reason:"已被 javascript 规则覆盖，无需重复指定。"},"@typescript-eslint/interface-name-prefix":{name:"@typescript-eslint/interface-name-prefix",value:"off",description:"接口名称必须以 I 开头",category:"",badExample:"",goodExample:""},"@typescript-eslint/member-delimiter-style":{name:"@typescript-eslint/member-delimiter-style",value:["error",{multiline:{delimiter:"semi",requireLast:!0},singleline:{delimiter:"semi",requireLast:!1},overrides:{typeLiteral:{multiline:{delimiter:"comma",requireLast:!1},singleline:{delimiter:"comma",requireLast:!1}}}}],description:"统一成员属性的分隔符形式\n对于对象或 Interface 声明，使用 ;。对于 type 声明使用 ,。",category:"",badExample:'<span class="token keyword">interface</span> <span class="token class-name">ITest1</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TTest2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> TTest3 <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bar<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span><mark class="eslint-error" data-tip="Unexpected separator (,).&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"> </mark><span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> test4<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    x<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    y<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span><mark class="eslint-error" data-tip="Expected a semicolon.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"></mark><mark class="eslint-error" data-tip="Expected a comma.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"></mark><mark class="eslint-error" data-tip="Unexpected separator (,).&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"></mark><mark class="eslint-error" data-tip="Expected a comma.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"></mark><mark class="eslint-error" data-tip="Unexpected separator (,).&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-delimiter-style)&lt;/span&gt;"></mark>',goodExample:'<span class="token keyword">interface</span> <span class="token class-name">ITest1</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">type</span> TTest2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">type</span> TTest3 <span class="token operator">=</span> <span class="token punctuation">{</span> foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> bar<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> test4<span class="token punctuation">:</span> <span class="token punctuation">{</span>\n    x<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>\n    y<span class="token punctuation">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',reason:"统一代码风格"},"@typescript-eslint/member-naming":{name:"@typescript-eslint/member-naming",value:"off",description:"私有成员必须以 _ 开头",category:"",badExample:"",goodExample:"",reason:"已有 private 修饰符了，没必要限制变量名"},"@typescript-eslint/member-ordering":{name:"@typescript-eslint/member-ordering",value:["warn",{default:["static-field","instance-field","public-constructor","protected-constructor","private-constructor","private-static-method","protected-static-method","public-static-method"]}],description:"成员属性定义过程的指导性顺序约束\n不做强制性要求",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">private</span> <span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token function">getBar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token function">getBar1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo1<span class="token punctuation">.</span><span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Member bar3 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">private</span> bar3 <span class="token operator">=</span> <span class="token string">\'bar3\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member bar2 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">protected</span> bar2 <span class="token operator">=</span> <span class="token string">\'bar2\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member bar1 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">public</span> bar1 <span class="token operator">=</span> <span class="token string">\'bar1\'</span><span class="token punctuation">;</span></mark>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo1<span class="token punctuation">.</span>foo3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token function">getFoo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <mark class="eslint-error" data-tip="Member foo3 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">private</span> <span class="token keyword">static</span> foo3 <span class="token operator">=</span> <span class="token string">\'foo3\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member foo2 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">protected</span> <span class="token keyword">static</span> foo2 <span class="token operator">=</span> <span class="token string">\'foo2\'</span><span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="Member foo1 should be declared before all public constructor definitions.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/member-ordering)&lt;/span&gt;"><span class="token keyword">public</span> <span class="token keyword">static</span> foo1 <span class="token operator">=</span> <span class="token string">\'foo1\'</span><span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> foo1 <span class="token operator">=</span> <span class="token string">\'foo1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> foo2 <span class="token operator">=</span> <span class="token string">\'foo2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> <span class="token keyword">static</span> foo3 <span class="token operator">=</span> <span class="token string">\'foo3\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">public</span> bar1 <span class="token operator">=</span> <span class="token string">\'bar1\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">protected</span> bar2 <span class="token operator">=</span> <span class="token string">\'bar2\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">private</span> bar3 <span class="token operator">=</span> <span class="token string">\'bar3\'</span><span class="token punctuation">;</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Foo2<span class="token punctuation">.</span><span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token function">getBar1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token function">getBar2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">private</span> <span class="token function">getBar3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bar3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    \n    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token function">getFoo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span> Foo2<span class="token punctuation">.</span>foo3<span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token keyword">protected</span> <span class="token keyword">static</span> <span class="token function">getFoo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token function">getFoo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',reason:"优先级：\n1. static > instance\n2. field > constructor > method\n3. public > protected > private"},"@typescript-eslint/no-array-constructor":{name:"@typescript-eslint/no-array-constructor",value:"off",description:"禁止使用 Array 构造函数",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-empty-interface":{name:"@typescript-eslint/no-empty-interface",value:"off",description:"禁止定义空的接口",category:"",badExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>',goodExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    foo<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"允许定义空的接口作为基础类型声明"},"@typescript-eslint/no-explicit-any":{name:"@typescript-eslint/no-explicit-any",value:"off",description:"禁止使用 any",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-extraneous-class":{name:"@typescript-eslint/no-extraneous-class",value:"off",description:"禁止定义没必要的类，比如只有静态方法的类",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-for-in-array":{name:"@typescript-eslint/no-for-in-array",value:"off",description:"禁止对 array 使用 for in 循环",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-inferrable-types":{name:"@typescript-eslint/no-inferrable-types",value:"error",description:"禁止给一个初始化时直接赋值为 number, string 的变量显式的声明类型",category:"",badExample:'<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Type number trivially inferred from a number literal, remove type annotation.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-inferrable-types)&lt;/span&gt;">foo1<span class="token punctuation">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span></mark><span class="token punctuation">;</span>\n<span class="token keyword">const</span> <mark class="eslint-error" data-tip="Type string trivially inferred from a string literal, remove type annotation.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-inferrable-types)&lt;/span&gt;">bar1<span class="token punctuation">:</span> <span class="token builtin">string</span> <span class="token operator">=</span> <span class="token string">\'\'</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">const</span> foo2 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> bar2 <span class="token operator">=</span> <span class="token string">\'\'</span><span class="token punctuation">;</span>',reason:"可以简化代码"},"@typescript-eslint/no-magic-numbers":{name:"@typescript-eslint/no-magic-numbers",value:"off",description:"禁止使用 magic numbers",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-misused-new":{name:"@typescript-eslint/no-misused-new",value:"off",description:"禁止在接口中定义 constructor，或在类中定义 new",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-misused-promises":{name:"@typescript-eslint/no-misused-promises",value:"off",description:"避免错误的使用 Promise",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-namespace":{name:"@typescript-eslint/no-namespace",value:["error",{allowDeclarations:!0,allowDefinitionFiles:!0}],description:"禁止使用 namespace 来定义命名空间",category:"",badExample:'<mark class="eslint-error" data-tip="ES2015 module syntax is preferred over custom TypeScript modules and namespaces.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-namespace)&lt;/span&gt;"><span class="token keyword">namespace</span> foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">declare</span> <span class="token keyword">namespace</span> foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span>',reason:"使用 es6 引入模块，才是更标准的方式。\n但是允许使用 declare namespace ... {} 来定义外部命名空间"},"@typescript-eslint/no-non-null-assertion":{name:"@typescript-eslint/no-non-null-assertion",value:"off",description:"禁止使用 non-null 断言（感叹号）",category:"",badExample:"",goodExample:"",reason:"使用 non-null 断言时就已经清楚了风险"},"@typescript-eslint/no-parameter-properties":{name:"@typescript-eslint/no-parameter-properties",value:"error",description:"禁止给类的构造函数的参数添加修饰符",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token parameter"><mark class="eslint-error" data-tip="Property name cannot be declared in the constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-parameter-properties)&lt;/span&gt;"><span class="token keyword">private</span> name<span class="token punctuation">:</span> <span class="token builtin">string</span></mark></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">:</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-require-imports":{name:"@typescript-eslint/no-require-imports",value:"error",description:"禁止使用 require\n原则上禁止动态引用，对于循环依赖，通过 IOC 的方式解决。",category:"",badExample:'<span class="token keyword">const</span> fs <span class="token operator">=</span> <mark class="eslint-error" data-tip="A `require()` style import is forbidden.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-require-imports)&lt;/span&gt;"><span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">\'fs\'</span><span class="token punctuation">)</span></mark><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> fs <span class="token keyword">from</span> <span class="token string">\'fs\'</span><span class="token punctuation">;</span>',reason:"统一使用 import 来引入模块，特殊情况使用单行注释允许 require 引入"},"@typescript-eslint/no-this-alias":{name:"@typescript-eslint/no-this-alias",value:["error",{allowDestructuring:!0}],description:"禁止将 this 赋值给其他变量，除非是解构赋值",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <mark class="eslint-error" data-tip="Unexpected aliasing of &apos;this&apos; to local variable.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-this-alias)&lt;/span&gt;">self</mark> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        self<span class="token punctuation">.</span><span class="token function">doWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span> bar <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>\n    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doWork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-type-alias":{name:"@typescript-eslint/no-type-alias",value:"off",description:"禁止使用类型别名",category:"",badExample:"",goodExample:""},"@typescript-eslint/no-unnecessary-qualifier":{name:"@typescript-eslint/no-unnecessary-qualifier",value:"off",description:"在命名空间中，可以直接使用内部变量，不需要添加命名空间前缀",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unnecessary-type-assertion":{name:"@typescript-eslint/no-unnecessary-type-assertion",value:"off",description:"禁止无用的类型断言",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/no-unused-vars":{name:"@typescript-eslint/no-unused-vars",value:"off",description:"已定义的变量必须使用",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/no-use-before-define":{name:"@typescript-eslint/no-use-before-define",value:"off",description:"禁止在定义变量之前就使用它",category:"",badExample:"",goodExample:"",reason:"编译阶段检查就足够了"},"@typescript-eslint/no-useless-constructor":{name:"@typescript-eslint/no-useless-constructor",value:"error",description:"禁止出现没必要的 constructor",category:"",badExample:'<span class="token keyword">class</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-useless-constructor)&lt;/span&gt;"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Bar1</span> <span class="token keyword">extends</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="Useless constructor.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/no-useless-constructor)&lt;/span&gt;"><span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span></mark>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">class</span> <span class="token class-name">Foo2</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">class</span> <span class="token class-name">Bar2</span> <span class="token keyword">extends</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token keyword">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n    <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n<span class="token punctuation">}</span>'},"@typescript-eslint/no-var-requires":{name:"@typescript-eslint/no-var-requires",value:"off",description:"禁止使用 require 来引入模块",category:"",badExample:"",goodExample:"",reason:"no-require-imports 规则已经约束了 require"},"@typescript-eslint/prefer-for-of":{name:"@typescript-eslint/prefer-for-of",value:"error",description:"使用 for 循环遍历数组时，如果索引仅用于获取成员，则必须使用 for of 循环替代 for 循环",category:"",badExample:'<span class="token keyword">const</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<mark class="eslint-error" data-tip="Expected a `for-of` loop instead of a `for` loop with this simple iteration&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/prefer-for-of)&lt;/span&gt;"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr1<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">const</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> arr2<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// i is used to write to arr, so for-of could not be used.</span>\n    arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr2<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">// i is used independent of arr, so for-of could not be used.</span>\n    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> arr2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',reason:"for of 循环更加易读"},"@typescript-eslint/prefer-function-type":{name:"@typescript-eslint/prefer-function-type",value:"off",description:"可以简写为函数类型的接口或字面类型的话，则必须简写",category:"",badExample:'<span class="token keyword">interface</span> <span class="token class-name">Foo1</span> <span class="token punctuation">{</span>\n    <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">type</span> <span class="token function-variable function">Foo2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token builtin">string</span><span class="token punctuation">;</span>',reason:"不要求函数类型接口的简写，因为可读性并不好。"},"@typescript-eslint/prefer-includes":{name:"@typescript-eslint/prefer-includes",value:"off",description:"使用 includes 而不是 indexOf",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-namespace-keyword":{name:"@typescript-eslint/prefer-namespace-keyword",value:"error",description:"禁止使用 module 来定义命名空间",category:"",badExample:'<mark class="eslint-error" data-tip="Use &apos;namespace&apos; instead of &apos;module&apos; to declare custom TypeScript modules.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/prefer-namespace-keyword)&lt;/span&gt;"><span class="token keyword">module</span> Foo1 <span class="token punctuation">{</span><span class="token punctuation">}</span></mark>',goodExample:'<span class="token keyword">namespace</span> Foo2 <span class="token punctuation">{</span><span class="token punctuation">}</span>',reason:"module 已成为 js 的关键字"},"@typescript-eslint/prefer-readonly":{name:"@typescript-eslint/prefer-readonly",value:"off",description:"私有变量如果没有在构造函数外被赋值，则必须设为 readonly",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-regexp-exec":{name:"@typescript-eslint/prefer-regexp-exec",value:"off",description:"使用 RegExp#exec 而不是 String#match",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/prefer-string-starts-ends-with":{name:"@typescript-eslint/prefer-string-starts-ends-with",value:"off",description:"使用 String#startsWith 而不是其他方式",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/promise-function-async":{name:"@typescript-eslint/promise-function-async",value:"off",description:"async 函数的返回值必须是 Promise",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/require-array-sort-compare":{name:"@typescript-eslint/require-array-sort-compare",value:"off",description:"使用 sort 时必须传入比较函数",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/require-await":{name:"@typescript-eslint/require-await",value:"off",description:"async 函数中必须存在 await 语句",category:"",badExample:"",goodExample:""},"@typescript-eslint/restrict-plus-operands":{name:"@typescript-eslint/restrict-plus-operands",value:"off",description:"使用加号时，两者必须同为数字或同为字符串",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/strict-boolean-expressions":{name:"@typescript-eslint/strict-boolean-expressions",value:"off",description:"条件判断必须传入布尔值",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/triple-slash-reference":{name:"@typescript-eslint/triple-slash-reference",value:["error",{path:"never",types:"always",lib:"always"}],description:"禁止使用三斜杠导入文件",category:"",badExample:'<span class="token comment"><mark class="eslint-error" data-tip="Do not use a triple slash reference for ./Animal, use `import` style instead.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/triple-slash-reference)&lt;/span&gt;">/// &lt;reference path="./Animal"></mark></span>',goodExample:'<span class="token keyword">import</span> Animal <span class="token keyword">from</span> <span class="token string">\'./Animal\'</span><span class="token punctuation">;</span>',reason:"三斜杠是已废弃的语法，但在类型声明文件中还是可以使用的"},"@typescript-eslint/typedef":{name:"@typescript-eslint/typedef",value:["error",{arrayDestructuring:!1,arrowParameter:!1,memberVariableDeclaration:!1,objectDestructuring:!1,parameter:!1,propertyDeclaration:!0,variableDeclaration:!1}],description:"interface 和 type 定义时必须声明成员的类型",category:"",badExample:'<span class="token keyword">type</span> Foo1 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <mark class="eslint-error" data-tip="expected bar to have a type annotation&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/typedef)&lt;/span&gt;">bar<span class="token punctuation">;</span></mark>\n    <mark class="eslint-error" data-tip="expected baz to have a type annotation&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/typedef)&lt;/span&gt;">baz<span class="token punctuation">;</span></mark>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>',goodExample:'<span class="token keyword">type</span> Foo2 <span class="token operator">=</span> <span class="token punctuation">{</span>\n    bar<span class="token punctuation">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>\n    baz<span class="token punctuation">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>'},"@typescript-eslint/unbound-method":{name:"@typescript-eslint/unbound-method",value:"off",description:"方法调用时需要绑定到正确的 this 上",category:"",badExample:"",goodExample:"",reason:"统一关闭 requires type information 的规则"},"@typescript-eslint/unified-signatures":{name:"@typescript-eslint/unified-signatures",value:"error",description:"函数重载时，若能通过联合类型将两个函数的类型声明合为一个，则使用联合类型而不是两个函数声明",category:"",badExample:'<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">number</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter"><mark class="eslint-error" data-tip="These overloads can be combined into one signature taking `number | string`.&lt;br/&gt;&lt;span class=&apos;eslint-error-rule-id&apos;&gt;eslint(@typescript-eslint/unified-signatures)&lt;/span&gt;">x<span class="token punctuation">:</span> <span class="token builtin">string</span></mark></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo1</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">any</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>',goodExample:'<span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">number</span> <span class="token operator">|</span> <span class="token builtin">string</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">void</span><span class="token punctuation">;</span>\n<span class="token keyword">function</span> <span class="token function">foo2</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">:</span> <span class="token builtin">any</span></span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token builtin">any</span> <span class="token punctuation">{</span>\n    <span class="token keyword">return</span> x<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>'}};
},{}],"fdAQ":[function(require,module,exports) {
"use strict";function e(t){return(e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(t)}var t=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var a=t(require("react")),l=require("../constants/rule"),n=require("../utils"),r={node:require("../config/node.json"),typescript:require("../config/typescript.json")},s={node:function(e){return"https://eslint.org/docs/rules/".concat(e)},typescript:function(e){return"https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/".concat(e.replace(/.*\//,""),".md")}};exports.RuleTable=function(t){var o=t.namespace,u=t.shouldHideOff,c=r[o];return a.default.createElement("div",{className:"container-fluid"},a.default.createElement("div",{className:"flex-left flex-wrap units-gap hide-on-mobile"},a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile site-table-header-text"},"规则说明"),a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile text-danger site-table-header-text"},"错误的示例"),a.default.createElement("h3",{className:"unit-1-3 unit-1-on-mobile text-success site-table-header-text"},"正确的示例")),Object.values(c).map(function(t){var r=t.name,c=t.value,i=t.description,m=t.reason,d=t.badExample,f=t.goodExample;return a.default.createElement("div",{key:r,className:"flex-left flex-wrap top-gap-big units-gap site-row ".concat("off"===c?"site-row-off site-row-wide":""),style:"off"===c&&u?{display:"none"}:{}},a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile site-desc"},a.default.createElement("a",{href:s[o](r)},r),a.default.createElement("p",{className:"top-gap-0",dangerouslySetInnerHTML:{__html:n.parseDescription(i)}}),m&&a.default.createElement("p",{className:"text-muted text-small",style:{marginTop:5},dangerouslySetInnerHTML:{__html:n.parseDescription(m)}}),Array.isArray(c)&&a.default.createElement(a.default.Fragment,null,a.default.createElement("p",{className:"text-muted text-small site-rule-value"},"配置：","object"===e(c[1])?a.default.createElement("pre",null,a.default.createElement("code",null,'["error", '.concat(JSON.stringify(c[1],null,4),"]"))):a.default.createElement("code",null,'["error", '.concat(JSON.stringify(c[1]),"]"))))),a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile"},d&&a.default.createElement("pre",{className:"language-".concat(l.RuleNamespacePrismLanguageMap[o]," site-code")},a.default.createElement("code",{dangerouslySetInnerHTML:{__html:d}}))),a.default.createElement("div",{className:"unit-1-3 unit-1-on-mobile"},f&&a.default.createElement("pre",{className:"language-".concat(l.RuleNamespacePrismLanguageMap[o],"  site-code")},a.default.createElement("code",{dangerouslySetInnerHTML:{__html:f}}))))}))};
},{"react":"n8MK","../constants/rule":"W8bX","../utils":"UnXq","../config/node.json":"KxOl","../config/typescript.json":"gVbj"}],"cjTR":[function(require,module,exports) {
"use strict";function e(e,l){return a(e)||r(e,l)||t()}function t(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function r(e,t){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e)){var r=[],a=!0,l=!1,n=void 0;try{for(var u,c=e[Symbol.iterator]();!(a=(u=c.next()).done)&&(r.push(u.value),!t||r.length!==t);a=!0);}catch(o){l=!0,n=o}finally{try{a||null==c.return||c.return()}finally{if(l)throw n}}return r}}function a(e){if(Array.isArray(e))return e}var l=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var n=l(require("react")),u=require("react-tooltip"),c=n.default,o=c.useState,i=c.useEffect,f=require("./RuleTable");exports.App=function(){var t=e(o("node"),2),r=t[0],a=t[1],l=e(o(!0),2),c=l[0],d=l[1];i(function(){u.rebuild()},[r]);var s=n.default.createElement("div",{className:"flex-center"},n.default.createElement("div",{className:"container-fluid"},n.default.createElement("h1",null,"NStarter ESLint 规则"),n.default.createElement("form",{className:"top-gap site-form"},n.default.createElement("select",{value:r,onChange:function(e){return a(e.target.value)}},n.default.createElement("option",{value:"node"},"标准规则"),n.default.createElement("option",{value:"typescript"},"TypeScript")),n.default.createElement("label",null,n.default.createElement("input",{type:"checkbox",checked:c,onChange:function(e){return d(e.target.checked)}}),"隐藏已禁用的规则"))));return n.default.createElement(n.default.Fragment,null,s,n.default.createElement(f.RuleTable,{namespace:r,shouldHideOff:c}),n.default.createElement(u,{className:"site-react-tooltip",place:"top",type:"error",effect:"solid",delayHide:100,html:!0}))};
},{"react":"n8MK","react-tooltip":"WBhx","./RuleTable":"fdAQ"}],"zo2T":[function(require,module,exports) {
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});var t=e(require("react")),r=require("react-dom"),u=require("./components/App");r.render(t.default.createElement(u.App,null),document.getElementById("app"));
},{"react":"n8MK","react-dom":"NKHc","./components/App":"cjTR"}]},{},["zo2T"], null)
//# sourceMappingURL=site.da9def47.js.map